/*
 * generated by Xtext 2.12.0
 */
package org.xtext.spring.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class SpringConfigDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class SpringProjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.SpringProject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSpringProjectAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cXmlKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cVersionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final RuleCall cSTRINGTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Keyword cEncodingKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cEqualsSignKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final RuleCall cSTRINGTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cStandaloneKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cEqualsSignKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Alternatives cAlternatives_8_2 = (Alternatives)cGroup_8.eContents().get(2);
		private final Keyword cYesKeyword_8_2_0 = (Keyword)cAlternatives_8_2.eContents().get(0);
		private final Keyword cNoKeyword_8_2_1 = (Keyword)cAlternatives_8_2.eContents().get(1);
		private final Keyword cQuestionMarkGreaterThanSignKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cConfigurationsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cConfigurationsConfigurationParserRuleCall_10_0 = (RuleCall)cConfigurationsAssignment_10.eContents().get(0);
		
		//SpringProject:
		//	{SpringProject}
		//	'<?xml' 'version' '=' STRING 'encoding' '=' STRING ('standalone' '=' ('yes' | 'no'))? '?>'
		//	configurations+=Configuration;
		@Override public ParserRule getRule() { return rule; }
		
		//{SpringProject} '<?xml' 'version' '=' STRING 'encoding' '=' STRING ('standalone' '=' ('yes' | 'no'))? '?>'
		//configurations+=Configuration
		public Group getGroup() { return cGroup; }
		
		//{SpringProject}
		public Action getSpringProjectAction_0() { return cSpringProjectAction_0; }
		
		//'<?xml'
		public Keyword getXmlKeyword_1() { return cXmlKeyword_1; }
		
		//'version'
		public Keyword getVersionKeyword_2() { return cVersionKeyword_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_4() { return cSTRINGTerminalRuleCall_4; }
		
		//'encoding'
		public Keyword getEncodingKeyword_5() { return cEncodingKeyword_5; }
		
		//'='
		public Keyword getEqualsSignKeyword_6() { return cEqualsSignKeyword_6; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_7() { return cSTRINGTerminalRuleCall_7; }
		
		//('standalone' '=' ('yes' | 'no'))?
		public Group getGroup_8() { return cGroup_8; }
		
		//'standalone'
		public Keyword getStandaloneKeyword_8_0() { return cStandaloneKeyword_8_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_8_1() { return cEqualsSignKeyword_8_1; }
		
		//'yes' | 'no'
		public Alternatives getAlternatives_8_2() { return cAlternatives_8_2; }
		
		//'yes'
		public Keyword getYesKeyword_8_2_0() { return cYesKeyword_8_2_0; }
		
		//'no'
		public Keyword getNoKeyword_8_2_1() { return cNoKeyword_8_2_1; }
		
		//'?>'
		public Keyword getQuestionMarkGreaterThanSignKeyword_9() { return cQuestionMarkGreaterThanSignKeyword_9; }
		
		//configurations+=Configuration
		public Assignment getConfigurationsAssignment_10() { return cConfigurationsAssignment_10; }
		
		//Configuration
		public RuleCall getConfigurationsConfigurationParserRuleCall_10_0() { return cConfigurationsConfigurationParserRuleCall_10_0; }
	}
	public class AbstractKeyValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.AbstractKeyValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAbstractArtefactParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDataStringParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AbstractKeyValue:
		//	AbstractArtefact | DataString;
		@Override public ParserRule getRule() { return rule; }
		
		//AbstractArtefact | DataString
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AbstractArtefact
		public RuleCall getAbstractArtefactParserRuleCall_0() { return cAbstractArtefactParserRuleCall_0; }
		
		//DataString
		public RuleCall getDataStringParserRuleCall_1() { return cDataStringParserRuleCall_1; }
	}
	public class AbstractArtefactElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.AbstractArtefact");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cComponentParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAttributeTagParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cIdRefTagParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cReferenceTagParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cCollectionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		///**Abstract Class of elements present in bean */ AbstractArtefact:
		//	Component | AttributeTag | IdRefTag | ReferenceTag | Collection;
		@Override public ParserRule getRule() { return rule; }
		
		//Component | AttributeTag | IdRefTag | ReferenceTag | Collection
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Component
		public RuleCall getComponentParserRuleCall_0() { return cComponentParserRuleCall_0; }
		
		//AttributeTag
		public RuleCall getAttributeTagParserRuleCall_1() { return cAttributeTagParserRuleCall_1; }
		
		//IdRefTag
		public RuleCall getIdRefTagParserRuleCall_2() { return cIdRefTagParserRuleCall_2; }
		
		//ReferenceTag
		public RuleCall getReferenceTagParserRuleCall_3() { return cReferenceTagParserRuleCall_3; }
		
		//Collection
		public RuleCall getCollectionParserRuleCall_4() { return cCollectionParserRuleCall_4; }
	}
	public class CollectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.Collection");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSListParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSSetParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMapParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cPropsParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		///**Abstract Class of Collection  */ Collection:
		//	sList | sSet | Map | Props;
		@Override public ParserRule getRule() { return rule; }
		
		///*Array|*/ sList | sSet | Map | Props
		public Alternatives getAlternatives() { return cAlternatives; }
		
		///*Array|*/ sList
		public RuleCall getSListParserRuleCall_0() { return cSListParserRuleCall_0; }
		
		//sSet
		public RuleCall getSSetParserRuleCall_1() { return cSSetParserRuleCall_1; }
		
		//Map
		public RuleCall getMapParserRuleCall_2() { return cMapParserRuleCall_2; }
		
		//Props
		public RuleCall getPropsParserRuleCall_3() { return cPropsParserRuleCall_3; }
	}
	public class ConfigurationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.Configuration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConfigurationAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cBeansKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1_1 = (UnorderedGroup)cGroup_1.eContents().get(1);
		private final Group cGroup_1_1_0 = (Group)cUnorderedGroup_1_1.eContents().get(0);
		private final Keyword cDefaultAutowireKeyword_1_1_0_0 = (Keyword)cGroup_1_1_0.eContents().get(0);
		private final Assignment cDefaultAutowireAssignment_1_1_0_1 = (Assignment)cGroup_1_1_0.eContents().get(1);
		private final RuleCall cDefaultAutowireAutoWiredTypeEnumRuleCall_1_1_0_1_0 = (RuleCall)cDefaultAutowireAssignment_1_1_0_1.eContents().get(0);
		private final Group cGroup_1_1_1 = (Group)cUnorderedGroup_1_1.eContents().get(1);
		private final Keyword cDefaultInitMethodKeyword_1_1_1_0 = (Keyword)cGroup_1_1_1.eContents().get(0);
		private final Assignment cDefaultInitMethodAssignment_1_1_1_1 = (Assignment)cGroup_1_1_1.eContents().get(1);
		private final RuleCall cDefaultInitMethodValidStringParserRuleCall_1_1_1_1_0 = (RuleCall)cDefaultInitMethodAssignment_1_1_1_1.eContents().get(0);
		private final Group cGroup_1_1_2 = (Group)cUnorderedGroup_1_1.eContents().get(2);
		private final Keyword cDefaultAutowireCandidatesKeyword_1_1_2_0 = (Keyword)cGroup_1_1_2.eContents().get(0);
		private final Assignment cDefaultAutowireCandidatesAssignment_1_1_2_1 = (Assignment)cGroup_1_1_2.eContents().get(1);
		private final RuleCall cDefaultAutowireCandidatesValidStringParserRuleCall_1_1_2_1_0 = (RuleCall)cDefaultAutowireCandidatesAssignment_1_1_2_1.eContents().get(0);
		private final Group cGroup_1_1_3 = (Group)cUnorderedGroup_1_1.eContents().get(3);
		private final Keyword cDefaultDestroyMethodKeyword_1_1_3_0 = (Keyword)cGroup_1_1_3.eContents().get(0);
		private final Assignment cDefaultDestroyMethodAssignment_1_1_3_1 = (Assignment)cGroup_1_1_3.eContents().get(1);
		private final RuleCall cDefaultDestroyMethodValidStringParserRuleCall_1_1_3_1_0 = (RuleCall)cDefaultDestroyMethodAssignment_1_1_3_1.eContents().get(0);
		private final Group cGroup_1_1_4 = (Group)cUnorderedGroup_1_1.eContents().get(4);
		private final Keyword cDefaultLazyInitKeyword_1_1_4_0 = (Keyword)cGroup_1_1_4.eContents().get(0);
		private final Assignment cDefaultLazyInitAssignment_1_1_4_1 = (Assignment)cGroup_1_1_4.eContents().get(1);
		private final RuleCall cDefaultLazyInitDefaultableBooleanEnumRuleCall_1_1_4_1_0 = (RuleCall)cDefaultLazyInitAssignment_1_1_4_1.eContents().get(0);
		private final Group cGroup_1_1_5 = (Group)cUnorderedGroup_1_1.eContents().get(5);
		private final Keyword cDefaultMergeKeyword_1_1_5_0 = (Keyword)cGroup_1_1_5.eContents().get(0);
		private final Assignment cDefaultMergeAssignment_1_1_5_1 = (Assignment)cGroup_1_1_5.eContents().get(1);
		private final RuleCall cDefaultMergeDefaultableBooleanEnumRuleCall_1_1_5_1_0 = (RuleCall)cDefaultMergeAssignment_1_1_5_1.eContents().get(0);
		private final Group cGroup_1_1_6 = (Group)cUnorderedGroup_1_1.eContents().get(6);
		private final Keyword cProfileKeyword_1_1_6_0 = (Keyword)cGroup_1_1_6.eContents().get(0);
		private final Assignment cProfileAssignment_1_1_6_1 = (Assignment)cGroup_1_1_6.eContents().get(1);
		private final RuleCall cProfileValidStringParserRuleCall_1_1_6_1_0 = (RuleCall)cProfileAssignment_1_1_6_1.eContents().get(0);
		private final Group cGroup_1_1_7 = (Group)cUnorderedGroup_1_1.eContents().get(7);
		private final RuleCall cIdDashAndColonParserRuleCall_1_1_7_0 = (RuleCall)cGroup_1_1_7.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_1_7_1 = (Keyword)cGroup_1_1_7.eContents().get(1);
		private final RuleCall cValidStringParserRuleCall_1_1_7_2 = (RuleCall)cGroup_1_1_7.eContents().get(2);
		private final Keyword cGreaterThanSignKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cDescriptionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDescriptionDescriptionParserRuleCall_2_0 = (RuleCall)cDescriptionAssignment_2.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cComponentsAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cComponentsComponentParserRuleCall_3_0_0 = (RuleCall)cComponentsAssignment_3_0.eContents().get(0);
		private final Assignment cAliasAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cAliasAliasParserRuleCall_3_1_0 = (RuleCall)cAliasAssignment_3_1.eContents().get(0);
		private final Assignment cImportsAssignment_3_2 = (Assignment)cAlternatives_3.eContents().get(2);
		private final RuleCall cImportsImportParserRuleCall_3_2_0 = (RuleCall)cImportsAssignment_3_2.eContents().get(0);
		private final Assignment cContextsAssignment_3_3 = (Assignment)cAlternatives_3.eContents().get(3);
		private final RuleCall cContextsContextParserRuleCall_3_3_0 = (RuleCall)cContextsAssignment_3_3.eContents().get(0);
		private final Assignment cMvcsAssignment_3_4 = (Assignment)cAlternatives_3.eContents().get(4);
		private final RuleCall cMvcsMVCParserRuleCall_3_4_0 = (RuleCall)cMvcsAssignment_3_4.eContents().get(0);
		private final Assignment cAspectsAssignment_3_5 = (Assignment)cAlternatives_3.eContents().get(5);
		private final RuleCall cAspectsAspectParserRuleCall_3_5_0 = (RuleCall)cAspectsAssignment_3_5.eContents().get(0);
		private final Assignment cUtilConstantsAssignment_3_6 = (Assignment)cAlternatives_3.eContents().get(6);
		private final RuleCall cUtilConstantsUtilConstantParserRuleCall_3_6_0 = (RuleCall)cUtilConstantsAssignment_3_6.eContents().get(0);
		private final Assignment cUtilListsAssignment_3_7 = (Assignment)cAlternatives_3.eContents().get(7);
		private final RuleCall cUtilListsUtilListParserRuleCall_3_7_0 = (RuleCall)cUtilListsAssignment_3_7.eContents().get(0);
		private final Assignment cUtilMapsAssignment_3_8 = (Assignment)cAlternatives_3.eContents().get(8);
		private final RuleCall cUtilMapsUtilMapParserRuleCall_3_8_0 = (RuleCall)cUtilMapsAssignment_3_8.eContents().get(0);
		private final Assignment cUtilPropertiesAssignment_3_9 = (Assignment)cAlternatives_3.eContents().get(9);
		private final RuleCall cUtilPropertiesUtilPropertiesParserRuleCall_3_9_0 = (RuleCall)cUtilPropertiesAssignment_3_9.eContents().get(0);
		private final Assignment cUtilSetsAssignment_3_10 = (Assignment)cAlternatives_3.eContents().get(10);
		private final RuleCall cUtilSetsUtilSetParserRuleCall_3_10_0 = (RuleCall)cUtilSetsAssignment_3_10.eContents().get(0);
		private final Assignment cUtilPropertiesPathAssignment_3_11 = (Assignment)cAlternatives_3.eContents().get(11);
		private final RuleCall cUtilPropertiesPathUtilPropertyPathParserRuleCall_3_11_0 = (RuleCall)cUtilPropertiesPathAssignment_3_11.eContents().get(0);
		private final Assignment cTxAdvicesAssignment_3_12 = (Assignment)cAlternatives_3.eContents().get(12);
		private final RuleCall cTxAdvicesTxAdviseParserRuleCall_3_12_0 = (RuleCall)cTxAdvicesAssignment_3_12.eContents().get(0);
		private final Assignment cTxJtaTransactionManagerAssignment_3_13 = (Assignment)cAlternatives_3.eContents().get(13);
		private final RuleCall cTxJtaTransactionManagerTxJtaTransactionManagerParserRuleCall_3_13_0 = (RuleCall)cTxJtaTransactionManagerAssignment_3_13.eContents().get(0);
		private final Assignment cConfigurationCompositeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cConfigurationCompositeConfigurationParserRuleCall_4_0 = (RuleCall)cConfigurationCompositeAssignment_4.eContents().get(0);
		private final Keyword cBeansKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		///**Abstract Class of Collection  */ /*Util:
		//	(UtilConstant|UtilPropertyPath|UtilProperties/* |UtilList|UtilMap|UtilSet)
		//;*/ /*<beans/> */ Configuration:
		//	{Configuration} ('<beans' (('default-autowire=' defaultAutowire=AutoWiredType)?
		//	& ('default-init-method=' defaultInitMethod=ValidString)? //Method
		//	& ('default-autowire-candidates=' defaultAutowireCandidates=ValidString)? //REGEX
		//	& ('default-destroy-method=' defaultDestroyMethod=ValidString)? //Method
		//	& ('default-lazy-init=' defaultLazyInit=DefaultableBoolean)?
		//	& ('default-merge=' defaultMerge=DefaultableBoolean)? //Default is false
		//	& ('profile=' profile=ValidString)?
		//	& (IdDashAndColon '=' ValidString)*)
		//	'>') description=Description? (components+=Component | alias+=Alias | imports+=Import
		//	| contexts+=Context
		//	| mvcs+=MVC
		//	| aspects+=Aspect
		//	| utilConstants+=UtilConstant | utilLists+=UtilList | utilMaps+=UtilMap
		//	| utilProperties+=UtilProperties | utilSets+=UtilSet | utilPropertiesPath+=UtilPropertyPath
		//	| txAdvices+=TxAdvise | txJtaTransactionManager+=TxJtaTransactionManager)*
		//	ConfigurationComposite+=Configuration*
		//	'</beans>';
		@Override public ParserRule getRule() { return rule; }
		
		//{Configuration} ('<beans' (('default-autowire=' defaultAutowire=AutoWiredType)? & ('default-init-method='
		//defaultInitMethod=ValidString)? //Method
		//& ('default-autowire-candidates=' defaultAutowireCandidates=ValidString)? //REGEX
		//& ('default-destroy-method=' defaultDestroyMethod=ValidString)? //Method
		//& ('default-lazy-init=' defaultLazyInit=DefaultableBoolean)? & ('default-merge=' defaultMerge=DefaultableBoolean)? //Default is false
		//& ('profile=' profile=ValidString)? & (IdDashAndColon '=' ValidString)*) '>') description=Description?
		//(components+=Component | alias+=Alias | imports+=Import | contexts+=Context | mvcs+=MVC | aspects+=Aspect |
		//utilConstants+=UtilConstant | utilLists+=UtilList | utilMaps+=UtilMap | utilProperties+=UtilProperties |
		//utilSets+=UtilSet | utilPropertiesPath+=UtilPropertyPath | txAdvices+=TxAdvise |
		//txJtaTransactionManager+=TxJtaTransactionManager)* ConfigurationComposite+=Configuration* '</beans>'
		public Group getGroup() { return cGroup; }
		
		//{Configuration}
		public Action getConfigurationAction_0() { return cConfigurationAction_0; }
		
		//'<beans' (('default-autowire=' defaultAutowire=AutoWiredType)? & ('default-init-method=' defaultInitMethod=ValidString)? //Method
		//& ('default-autowire-candidates=' defaultAutowireCandidates=ValidString)? //REGEX
		//& ('default-destroy-method=' defaultDestroyMethod=ValidString)? //Method
		//& ('default-lazy-init=' defaultLazyInit=DefaultableBoolean)? & ('default-merge=' defaultMerge=DefaultableBoolean)? //Default is false
		//& ('profile=' profile=ValidString)? & (IdDashAndColon '=' ValidString)*) '>'
		public Group getGroup_1() { return cGroup_1; }
		
		//'<beans'
		public Keyword getBeansKeyword_1_0() { return cBeansKeyword_1_0; }
		
		//('default-autowire=' defaultAutowire=AutoWiredType)? & ('default-init-method=' defaultInitMethod=ValidString)? //Method
		//& ('default-autowire-candidates=' defaultAutowireCandidates=ValidString)? //REGEX
		//& ('default-destroy-method=' defaultDestroyMethod=ValidString)? //Method
		//& ('default-lazy-init=' defaultLazyInit=DefaultableBoolean)? & ('default-merge=' defaultMerge=DefaultableBoolean)? //Default is false
		//& ('profile=' profile=ValidString)? & (IdDashAndColon '=' ValidString)*
		public UnorderedGroup getUnorderedGroup_1_1() { return cUnorderedGroup_1_1; }
		
		//('default-autowire=' defaultAutowire=AutoWiredType)?
		public Group getGroup_1_1_0() { return cGroup_1_1_0; }
		
		//'default-autowire='
		public Keyword getDefaultAutowireKeyword_1_1_0_0() { return cDefaultAutowireKeyword_1_1_0_0; }
		
		//defaultAutowire=AutoWiredType
		public Assignment getDefaultAutowireAssignment_1_1_0_1() { return cDefaultAutowireAssignment_1_1_0_1; }
		
		//AutoWiredType
		public RuleCall getDefaultAutowireAutoWiredTypeEnumRuleCall_1_1_0_1_0() { return cDefaultAutowireAutoWiredTypeEnumRuleCall_1_1_0_1_0; }
		
		//('default-init-method=' defaultInitMethod=ValidString)?
		public Group getGroup_1_1_1() { return cGroup_1_1_1; }
		
		//'default-init-method='
		public Keyword getDefaultInitMethodKeyword_1_1_1_0() { return cDefaultInitMethodKeyword_1_1_1_0; }
		
		//defaultInitMethod=ValidString
		public Assignment getDefaultInitMethodAssignment_1_1_1_1() { return cDefaultInitMethodAssignment_1_1_1_1; }
		
		//ValidString
		public RuleCall getDefaultInitMethodValidStringParserRuleCall_1_1_1_1_0() { return cDefaultInitMethodValidStringParserRuleCall_1_1_1_1_0; }
		
		//('default-autowire-candidates=' defaultAutowireCandidates=ValidString)?
		public Group getGroup_1_1_2() { return cGroup_1_1_2; }
		
		//'default-autowire-candidates='
		public Keyword getDefaultAutowireCandidatesKeyword_1_1_2_0() { return cDefaultAutowireCandidatesKeyword_1_1_2_0; }
		
		//defaultAutowireCandidates=ValidString
		public Assignment getDefaultAutowireCandidatesAssignment_1_1_2_1() { return cDefaultAutowireCandidatesAssignment_1_1_2_1; }
		
		//ValidString
		public RuleCall getDefaultAutowireCandidatesValidStringParserRuleCall_1_1_2_1_0() { return cDefaultAutowireCandidatesValidStringParserRuleCall_1_1_2_1_0; }
		
		//('default-destroy-method=' defaultDestroyMethod=ValidString)?
		public Group getGroup_1_1_3() { return cGroup_1_1_3; }
		
		//'default-destroy-method='
		public Keyword getDefaultDestroyMethodKeyword_1_1_3_0() { return cDefaultDestroyMethodKeyword_1_1_3_0; }
		
		//defaultDestroyMethod=ValidString
		public Assignment getDefaultDestroyMethodAssignment_1_1_3_1() { return cDefaultDestroyMethodAssignment_1_1_3_1; }
		
		//ValidString
		public RuleCall getDefaultDestroyMethodValidStringParserRuleCall_1_1_3_1_0() { return cDefaultDestroyMethodValidStringParserRuleCall_1_1_3_1_0; }
		
		//('default-lazy-init=' defaultLazyInit=DefaultableBoolean)?
		public Group getGroup_1_1_4() { return cGroup_1_1_4; }
		
		//'default-lazy-init='
		public Keyword getDefaultLazyInitKeyword_1_1_4_0() { return cDefaultLazyInitKeyword_1_1_4_0; }
		
		//defaultLazyInit=DefaultableBoolean
		public Assignment getDefaultLazyInitAssignment_1_1_4_1() { return cDefaultLazyInitAssignment_1_1_4_1; }
		
		//DefaultableBoolean
		public RuleCall getDefaultLazyInitDefaultableBooleanEnumRuleCall_1_1_4_1_0() { return cDefaultLazyInitDefaultableBooleanEnumRuleCall_1_1_4_1_0; }
		
		//('default-merge=' defaultMerge=DefaultableBoolean)?
		public Group getGroup_1_1_5() { return cGroup_1_1_5; }
		
		//'default-merge='
		public Keyword getDefaultMergeKeyword_1_1_5_0() { return cDefaultMergeKeyword_1_1_5_0; }
		
		//defaultMerge=DefaultableBoolean
		public Assignment getDefaultMergeAssignment_1_1_5_1() { return cDefaultMergeAssignment_1_1_5_1; }
		
		//DefaultableBoolean
		public RuleCall getDefaultMergeDefaultableBooleanEnumRuleCall_1_1_5_1_0() { return cDefaultMergeDefaultableBooleanEnumRuleCall_1_1_5_1_0; }
		
		//('profile=' profile=ValidString)?
		public Group getGroup_1_1_6() { return cGroup_1_1_6; }
		
		//'profile='
		public Keyword getProfileKeyword_1_1_6_0() { return cProfileKeyword_1_1_6_0; }
		
		//profile=ValidString
		public Assignment getProfileAssignment_1_1_6_1() { return cProfileAssignment_1_1_6_1; }
		
		//ValidString
		public RuleCall getProfileValidStringParserRuleCall_1_1_6_1_0() { return cProfileValidStringParserRuleCall_1_1_6_1_0; }
		
		//(IdDashAndColon '=' ValidString)*
		public Group getGroup_1_1_7() { return cGroup_1_1_7; }
		
		//IdDashAndColon
		public RuleCall getIdDashAndColonParserRuleCall_1_1_7_0() { return cIdDashAndColonParserRuleCall_1_1_7_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_1_7_1() { return cEqualsSignKeyword_1_1_7_1; }
		
		//ValidString
		public RuleCall getValidStringParserRuleCall_1_1_7_2() { return cValidStringParserRuleCall_1_1_7_2; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_1_2() { return cGreaterThanSignKeyword_1_2; }
		
		//description=Description?
		public Assignment getDescriptionAssignment_2() { return cDescriptionAssignment_2; }
		
		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_2_0() { return cDescriptionDescriptionParserRuleCall_2_0; }
		
		//(components+=Component | alias+=Alias | imports+=Import | contexts+=Context | mvcs+=MVC | aspects+=Aspect |
		//utilConstants+=UtilConstant | utilLists+=UtilList | utilMaps+=UtilMap | utilProperties+=UtilProperties |
		//utilSets+=UtilSet | utilPropertiesPath+=UtilPropertyPath | txAdvices+=TxAdvise |
		//txJtaTransactionManager+=TxJtaTransactionManager)*
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//components+=Component
		public Assignment getComponentsAssignment_3_0() { return cComponentsAssignment_3_0; }
		
		//Component
		public RuleCall getComponentsComponentParserRuleCall_3_0_0() { return cComponentsComponentParserRuleCall_3_0_0; }
		
		//alias+=Alias
		public Assignment getAliasAssignment_3_1() { return cAliasAssignment_3_1; }
		
		//Alias
		public RuleCall getAliasAliasParserRuleCall_3_1_0() { return cAliasAliasParserRuleCall_3_1_0; }
		
		//imports+=Import
		public Assignment getImportsAssignment_3_2() { return cImportsAssignment_3_2; }
		
		//Import
		public RuleCall getImportsImportParserRuleCall_3_2_0() { return cImportsImportParserRuleCall_3_2_0; }
		
		//contexts+=Context
		public Assignment getContextsAssignment_3_3() { return cContextsAssignment_3_3; }
		
		//Context
		public RuleCall getContextsContextParserRuleCall_3_3_0() { return cContextsContextParserRuleCall_3_3_0; }
		
		//mvcs+=MVC
		public Assignment getMvcsAssignment_3_4() { return cMvcsAssignment_3_4; }
		
		//MVC
		public RuleCall getMvcsMVCParserRuleCall_3_4_0() { return cMvcsMVCParserRuleCall_3_4_0; }
		
		//aspects+=Aspect
		public Assignment getAspectsAssignment_3_5() { return cAspectsAssignment_3_5; }
		
		//Aspect
		public RuleCall getAspectsAspectParserRuleCall_3_5_0() { return cAspectsAspectParserRuleCall_3_5_0; }
		
		//utilConstants+=UtilConstant
		public Assignment getUtilConstantsAssignment_3_6() { return cUtilConstantsAssignment_3_6; }
		
		//UtilConstant
		public RuleCall getUtilConstantsUtilConstantParserRuleCall_3_6_0() { return cUtilConstantsUtilConstantParserRuleCall_3_6_0; }
		
		//utilLists+=UtilList
		public Assignment getUtilListsAssignment_3_7() { return cUtilListsAssignment_3_7; }
		
		//UtilList
		public RuleCall getUtilListsUtilListParserRuleCall_3_7_0() { return cUtilListsUtilListParserRuleCall_3_7_0; }
		
		//utilMaps+=UtilMap
		public Assignment getUtilMapsAssignment_3_8() { return cUtilMapsAssignment_3_8; }
		
		//UtilMap
		public RuleCall getUtilMapsUtilMapParserRuleCall_3_8_0() { return cUtilMapsUtilMapParserRuleCall_3_8_0; }
		
		//utilProperties+=UtilProperties
		public Assignment getUtilPropertiesAssignment_3_9() { return cUtilPropertiesAssignment_3_9; }
		
		//UtilProperties
		public RuleCall getUtilPropertiesUtilPropertiesParserRuleCall_3_9_0() { return cUtilPropertiesUtilPropertiesParserRuleCall_3_9_0; }
		
		//utilSets+=UtilSet
		public Assignment getUtilSetsAssignment_3_10() { return cUtilSetsAssignment_3_10; }
		
		//UtilSet
		public RuleCall getUtilSetsUtilSetParserRuleCall_3_10_0() { return cUtilSetsUtilSetParserRuleCall_3_10_0; }
		
		//utilPropertiesPath+=UtilPropertyPath
		public Assignment getUtilPropertiesPathAssignment_3_11() { return cUtilPropertiesPathAssignment_3_11; }
		
		//UtilPropertyPath
		public RuleCall getUtilPropertiesPathUtilPropertyPathParserRuleCall_3_11_0() { return cUtilPropertiesPathUtilPropertyPathParserRuleCall_3_11_0; }
		
		//txAdvices+=TxAdvise
		public Assignment getTxAdvicesAssignment_3_12() { return cTxAdvicesAssignment_3_12; }
		
		//TxAdvise
		public RuleCall getTxAdvicesTxAdviseParserRuleCall_3_12_0() { return cTxAdvicesTxAdviseParserRuleCall_3_12_0; }
		
		//txJtaTransactionManager+=TxJtaTransactionManager
		public Assignment getTxJtaTransactionManagerAssignment_3_13() { return cTxJtaTransactionManagerAssignment_3_13; }
		
		//TxJtaTransactionManager
		public RuleCall getTxJtaTransactionManagerTxJtaTransactionManagerParserRuleCall_3_13_0() { return cTxJtaTransactionManagerTxJtaTransactionManagerParserRuleCall_3_13_0; }
		
		//ConfigurationComposite+=Configuration*
		public Assignment getConfigurationCompositeAssignment_4() { return cConfigurationCompositeAssignment_4; }
		
		//Configuration
		public RuleCall getConfigurationCompositeConfigurationParserRuleCall_4_0() { return cConfigurationCompositeConfigurationParserRuleCall_4_0; }
		
		//'</beans>'
		public Keyword getBeansKeyword_5() { return cBeansKeyword_5; }
	}
	public class MVCElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.MVC");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMVCAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cMvcKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cColonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cAnnotationDrivenKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Keyword cSolidusGreaterThanSignKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//MVC:
		//	{MVC} ('<mvc' ':' 'annotation-driven' '/>');
		@Override public ParserRule getRule() { return rule; }
		
		//{MVC} ('<mvc' ':' 'annotation-driven' '/>')
		public Group getGroup() { return cGroup; }
		
		//{MVC}
		public Action getMVCAction_0() { return cMVCAction_0; }
		
		//'<mvc' ':' 'annotation-driven' '/>'
		public Group getGroup_1() { return cGroup_1; }
		
		//'<mvc'
		public Keyword getMvcKeyword_1_0() { return cMvcKeyword_1_0; }
		
		//':'
		public Keyword getColonKeyword_1_1() { return cColonKeyword_1_1; }
		
		//'annotation-driven'
		public Keyword getAnnotationDrivenKeyword_1_2() { return cAnnotationDrivenKeyword_1_2; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_1_3() { return cSolidusGreaterThanSignKeyword_1_3; }
	}
	public class AliasElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.Alias");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAliasAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAliasKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOriginAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cOriginComponentCrossReference_3_0 = (CrossReference)cOriginAssignment_3.eContents().get(0);
		private final RuleCall cOriginComponentValidStringParserRuleCall_3_0_1 = (RuleCall)cOriginComponentCrossReference_3_0.eContents().get(1);
		private final Keyword cAliasKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAliasAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAliasValidStringParserRuleCall_5_0 = (RuleCall)cAliasAssignment_5.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Keyword cSolidusGreaterThanSignKeyword_6_0 = (Keyword)cAlternatives_6.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Keyword cAliasKeyword_6_1_1 = (Keyword)cGroup_6_1.eContents().get(1);
		
		///*<alias/> */ Alias:
		//	{Alias}
		//	'<alias' 'name=' origin=[Component|ValidString] 'alias=' alias=ValidString ('/>' | '>' '</alias>');
		@Override public ParserRule getRule() { return rule; }
		
		//{Alias} '<alias' 'name=' origin=[Component|ValidString] 'alias=' alias=ValidString ('/>' | '>' '</alias>')
		public Group getGroup() { return cGroup; }
		
		//{Alias}
		public Action getAliasAction_0() { return cAliasAction_0; }
		
		//'<alias'
		public Keyword getAliasKeyword_1() { return cAliasKeyword_1; }
		
		//'name='
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//origin=[Component|ValidString]
		public Assignment getOriginAssignment_3() { return cOriginAssignment_3; }
		
		//[Component|ValidString]
		public CrossReference getOriginComponentCrossReference_3_0() { return cOriginComponentCrossReference_3_0; }
		
		//ValidString
		public RuleCall getOriginComponentValidStringParserRuleCall_3_0_1() { return cOriginComponentValidStringParserRuleCall_3_0_1; }
		
		//'alias='
		public Keyword getAliasKeyword_4() { return cAliasKeyword_4; }
		
		//alias=ValidString
		public Assignment getAliasAssignment_5() { return cAliasAssignment_5; }
		
		//ValidString
		public RuleCall getAliasValidStringParserRuleCall_5_0() { return cAliasValidStringParserRuleCall_5_0; }
		
		//'/>' | '>' '</alias>'
		public Alternatives getAlternatives_6() { return cAlternatives_6; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_6_0() { return cSolidusGreaterThanSignKeyword_6_0; }
		
		//'>' '</alias>'
		public Group getGroup_6_1() { return cGroup_6_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_6_1_0() { return cGreaterThanSignKeyword_6_1_0; }
		
		//'</alias>'
		public Keyword getAliasKeyword_6_1_1() { return cAliasKeyword_6_1_1; }
	}
	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cImportAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cImportKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cResourceKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cResourceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cResourceValidStringParserRuleCall_3_0 = (RuleCall)cResourceAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Keyword cSolidusGreaterThanSignKeyword_4_0 = (Keyword)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Keyword cImportKeyword_4_1_1 = (Keyword)cGroup_4_1.eContents().get(1);
		
		///*<import/> */ Import:
		//	{Import}
		//	'<import' 'resource=' resource=ValidString ('/>' | '>' '</import>');
		@Override public ParserRule getRule() { return rule; }
		
		//{Import} '<import' 'resource=' resource=ValidString ('/>' | '>' '</import>')
		public Group getGroup() { return cGroup; }
		
		//{Import}
		public Action getImportAction_0() { return cImportAction_0; }
		
		//'<import'
		public Keyword getImportKeyword_1() { return cImportKeyword_1; }
		
		//'resource='
		public Keyword getResourceKeyword_2() { return cResourceKeyword_2; }
		
		//resource=ValidString
		public Assignment getResourceAssignment_3() { return cResourceAssignment_3; }
		
		//ValidString
		public RuleCall getResourceValidStringParserRuleCall_3_0() { return cResourceValidStringParserRuleCall_3_0; }
		
		//'/>' | '>' '</import>'
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_4_0() { return cSolidusGreaterThanSignKeyword_4_0; }
		
		//'>' '</import>'
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_4_1_0() { return cGreaterThanSignKeyword_4_1_0; }
		
		//'</import>'
		public Keyword getImportKeyword_4_1_1() { return cImportKeyword_4_1_1; }
	}
	public class ContextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.Context");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContextKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cContextTypeParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//Context:
		//	'<context:' ContextType;
		@Override public ParserRule getRule() { return rule; }
		
		//'<context:' ContextType
		public Group getGroup() { return cGroup; }
		
		//'<context:'
		public Keyword getContextKeyword_0() { return cContextKeyword_0; }
		
		//ContextType
		public RuleCall getContextTypeParserRuleCall_1() { return cContextTypeParserRuleCall_1; }
	}
	public class ContextTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.ContextType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAnnotationConfigParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cComponentScanParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cLoadTimeWeaverParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cMbeanExportParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cMbeanServerParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cPropertyHolderParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cSpringConfiguredParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//ContextType Context:
		//	AnnotationConfig | ComponentScan | LoadTimeWeaver | MbeanExport | MbeanServer | PropertyHolder | SpringConfigured;
		@Override public ParserRule getRule() { return rule; }
		
		//AnnotationConfig | ComponentScan | LoadTimeWeaver | MbeanExport | MbeanServer | PropertyHolder | SpringConfigured
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AnnotationConfig
		public RuleCall getAnnotationConfigParserRuleCall_0() { return cAnnotationConfigParserRuleCall_0; }
		
		//ComponentScan
		public RuleCall getComponentScanParserRuleCall_1() { return cComponentScanParserRuleCall_1; }
		
		//LoadTimeWeaver
		public RuleCall getLoadTimeWeaverParserRuleCall_2() { return cLoadTimeWeaverParserRuleCall_2; }
		
		//MbeanExport
		public RuleCall getMbeanExportParserRuleCall_3() { return cMbeanExportParserRuleCall_3; }
		
		//MbeanServer
		public RuleCall getMbeanServerParserRuleCall_4() { return cMbeanServerParserRuleCall_4; }
		
		//PropertyHolder
		public RuleCall getPropertyHolderParserRuleCall_5() { return cPropertyHolderParserRuleCall_5; }
		
		//SpringConfigured
		public RuleCall getSpringConfiguredParserRuleCall_6() { return cSpringConfiguredParserRuleCall_6; }
	}
	public class AnnotationConfigElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.AnnotationConfig");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAnnotationConfigAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cAnnotationConfigKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Keyword cSolidusGreaterThanSignKeyword_1_1_0 = (Keyword)cAlternatives_1_1.eContents().get(0);
		private final Group cGroup_1_1_1 = (Group)cAlternatives_1_1.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_1_1_1_0 = (Keyword)cGroup_1_1_1.eContents().get(0);
		private final Keyword cContextAnnotationConfigKeyword_1_1_1_1 = (Keyword)cGroup_1_1_1.eContents().get(1);
		
		///** looks for annotations on beans in the same application context in which it is defined */ AnnotationConfig:
		//	{AnnotationConfig} ('annotation-config' ('/>' | '>' '</context:annotation-config>'));
		@Override public ParserRule getRule() { return rule; }
		
		//{AnnotationConfig} ('annotation-config' ('/>' | '>' '</context:annotation-config>'))
		public Group getGroup() { return cGroup; }
		
		//{AnnotationConfig}
		public Action getAnnotationConfigAction_0() { return cAnnotationConfigAction_0; }
		
		//'annotation-config' ('/>' | '>' '</context:annotation-config>')
		public Group getGroup_1() { return cGroup_1; }
		
		//'annotation-config'
		public Keyword getAnnotationConfigKeyword_1_0() { return cAnnotationConfigKeyword_1_0; }
		
		//'/>' | '>' '</context:annotation-config>'
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_1_1_0() { return cSolidusGreaterThanSignKeyword_1_1_0; }
		
		//'>' '</context:annotation-config>'
		public Group getGroup_1_1_1() { return cGroup_1_1_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_1_1_1_0() { return cGreaterThanSignKeyword_1_1_1_0; }
		
		//'</context:annotation-config>'
		public Keyword getContextAnnotationConfigKeyword_1_1_1_1() { return cContextAnnotationConfigKeyword_1_1_1_1; }
	}
	public class ComponentScanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.ComponentScan");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cComponentScanAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cComponentScanKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cBasePackageKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cBasePackageAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cBasePackageValidStringParserRuleCall_2_0_1_0 = (RuleCall)cBasePackageAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cAnnotationConfigKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cAnnotationConfigAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cAnnotationConfigSBooleanEnumRuleCall_2_1_1_0 = (RuleCall)cAnnotationConfigAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cUnorderedGroup_2.eContents().get(2);
		private final Keyword cNameGeneratorKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cNameGeneratorBeanAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final CrossReference cNameGeneratorBeanComponentCrossReference_2_2_1_0 = (CrossReference)cNameGeneratorBeanAssignment_2_2_1.eContents().get(0);
		private final RuleCall cNameGeneratorBeanComponentValidStringParserRuleCall_2_2_1_0_1 = (RuleCall)cNameGeneratorBeanComponentCrossReference_2_2_1_0.eContents().get(1);
		private final Group cGroup_2_3 = (Group)cUnorderedGroup_2.eContents().get(3);
		private final Keyword cResourcePatternKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cResourcePatternAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cResourcePatternValidStringParserRuleCall_2_3_1_0 = (RuleCall)cResourcePatternAssignment_2_3_1.eContents().get(0);
		private final Group cGroup_2_4 = (Group)cUnorderedGroup_2.eContents().get(4);
		private final Keyword cScopeResolverKeyword_2_4_0 = (Keyword)cGroup_2_4.eContents().get(0);
		private final Assignment cScopeResolverAssignment_2_4_1 = (Assignment)cGroup_2_4.eContents().get(1);
		private final CrossReference cScopeResolverComponentCrossReference_2_4_1_0 = (CrossReference)cScopeResolverAssignment_2_4_1.eContents().get(0);
		private final RuleCall cScopeResolverComponentValidStringParserRuleCall_2_4_1_0_1 = (RuleCall)cScopeResolverComponentCrossReference_2_4_1_0.eContents().get(1);
		private final Group cGroup_2_5 = (Group)cUnorderedGroup_2.eContents().get(5);
		private final Keyword cScopedProxyKeyword_2_5_0 = (Keyword)cGroup_2_5.eContents().get(0);
		private final Assignment cScopedProxyAssignment_2_5_1 = (Assignment)cGroup_2_5.eContents().get(1);
		private final RuleCall cScopedProxyEnumScopedProxyEnumRuleCall_2_5_1_0 = (RuleCall)cScopedProxyAssignment_2_5_1.eContents().get(0);
		private final Group cGroup_2_6 = (Group)cUnorderedGroup_2.eContents().get(6);
		private final Keyword cUseDefaultFiltersKeyword_2_6_0 = (Keyword)cGroup_2_6.eContents().get(0);
		private final Assignment cUseDefaultFiltersAssignment_2_6_1 = (Assignment)cGroup_2_6.eContents().get(1);
		private final RuleCall cUseDefaultFiltersSBooleanEnumRuleCall_2_6_1_0 = (RuleCall)cUseDefaultFiltersAssignment_2_6_1.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Keyword cSolidusGreaterThanSignKeyword_3_0 = (Keyword)cAlternatives_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cIncludeFiltersAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cIncludeFiltersIncludeFilterParserRuleCall_3_1_1_0 = (RuleCall)cIncludeFiltersAssignment_3_1_1.eContents().get(0);
		private final Assignment cExcludeFiltersAssignment_3_1_2 = (Assignment)cGroup_3_1.eContents().get(2);
		private final RuleCall cExcludeFiltersExcludeFilterParserRuleCall_3_1_2_0 = (RuleCall)cExcludeFiltersAssignment_3_1_2.eContents().get(0);
		private final Keyword cContextComponentScanKeyword_3_1_3 = (Keyword)cGroup_3_1.eContents().get(3);
		
		///** Spring can automatically detect stereotyped classes and register corresponding BeanDefinitions with the ApplicationContext 
		// * (implicitly enables the functionality of <context:annotation-config>)
		// *
		// * base-package - The comma/semicolon/space/tab/linefeed-separated list of packages to scan for annotated components.
		// * annotation-config - Indicates whether the implicit annotation post-processors should be enabled. Default is "true".
		// * name-generator - The fully-qualified class name of the BeanNameGenerator to be used for naming detected components.
		// * resource-pattern - Controls the class files eligible for component detection. "** /*.class"  
		// * scope-resolver - The fully-qualified class name of the ScopeMetadataResolver to 
		// * be used for resolving the scope of detected components.
		// * scoped-proxy  -Indicates whether proxies should be generated for detected 
		// components
		// * use-default-filters - Indicates whether automatic detection of classes annotated with @Component, @Repository, @Service, or 
		// @Controller should be enabled. Default is "true".
		// */ ComponentScan:
		//	{ComponentScan} 'component-scan' ('base-package=' basePackage=ValidString & ('annotation-config='
		//	annotationConfig=sBoolean)?
		//	& ('name-generator=' nameGeneratorBean=[Component|ValidString])?
		//	& ('resource-pattern=' resourcePattern=ValidString)?
		//	& ('scope-resolver=' scopeResolver=[Component|ValidString])?
		//	& ('scoped-proxy=' scopedProxy=EnumScopedProxy)?
		//	& ('use-default-filters=' useDefaultFilters=sBoolean)?) ('/>' | '>' includeFilters+=IncludeFilter*
		//	excludeFilters+=ExcludeFilter* '</context:component-scan>');
		@Override public ParserRule getRule() { return rule; }
		
		//{ComponentScan} 'component-scan' ('base-package=' basePackage=ValidString & ('annotation-config='
		//annotationConfig=sBoolean)? & ('name-generator=' nameGeneratorBean=[Component|ValidString])? & ('resource-pattern='
		//resourcePattern=ValidString)? & ('scope-resolver=' scopeResolver=[Component|ValidString])? & ('scoped-proxy='
		//scopedProxy=EnumScopedProxy)? & ('use-default-filters=' useDefaultFilters=sBoolean)?) ('/>' | '>'
		//includeFilters+=IncludeFilter* excludeFilters+=ExcludeFilter* '</context:component-scan>')
		public Group getGroup() { return cGroup; }
		
		//{ComponentScan}
		public Action getComponentScanAction_0() { return cComponentScanAction_0; }
		
		//'component-scan'
		public Keyword getComponentScanKeyword_1() { return cComponentScanKeyword_1; }
		
		//'base-package=' basePackage=ValidString & ('annotation-config=' annotationConfig=sBoolean)? & ('name-generator='
		//nameGeneratorBean=[Component|ValidString])? & ('resource-pattern=' resourcePattern=ValidString)? & ('scope-resolver='
		//scopeResolver=[Component|ValidString])? & ('scoped-proxy=' scopedProxy=EnumScopedProxy)? & ('use-default-filters='
		//useDefaultFilters=sBoolean)?
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//'base-package=' basePackage=ValidString
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'base-package='
		public Keyword getBasePackageKeyword_2_0_0() { return cBasePackageKeyword_2_0_0; }
		
		//basePackage=ValidString
		public Assignment getBasePackageAssignment_2_0_1() { return cBasePackageAssignment_2_0_1; }
		
		//ValidString
		public RuleCall getBasePackageValidStringParserRuleCall_2_0_1_0() { return cBasePackageValidStringParserRuleCall_2_0_1_0; }
		
		//('annotation-config=' annotationConfig=sBoolean)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'annotation-config='
		public Keyword getAnnotationConfigKeyword_2_1_0() { return cAnnotationConfigKeyword_2_1_0; }
		
		//annotationConfig=sBoolean
		public Assignment getAnnotationConfigAssignment_2_1_1() { return cAnnotationConfigAssignment_2_1_1; }
		
		//sBoolean
		public RuleCall getAnnotationConfigSBooleanEnumRuleCall_2_1_1_0() { return cAnnotationConfigSBooleanEnumRuleCall_2_1_1_0; }
		
		//('name-generator=' nameGeneratorBean=[Component|ValidString])?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//'name-generator='
		public Keyword getNameGeneratorKeyword_2_2_0() { return cNameGeneratorKeyword_2_2_0; }
		
		//nameGeneratorBean=[Component|ValidString]
		public Assignment getNameGeneratorBeanAssignment_2_2_1() { return cNameGeneratorBeanAssignment_2_2_1; }
		
		//[Component|ValidString]
		public CrossReference getNameGeneratorBeanComponentCrossReference_2_2_1_0() { return cNameGeneratorBeanComponentCrossReference_2_2_1_0; }
		
		//ValidString
		public RuleCall getNameGeneratorBeanComponentValidStringParserRuleCall_2_2_1_0_1() { return cNameGeneratorBeanComponentValidStringParserRuleCall_2_2_1_0_1; }
		
		//('resource-pattern=' resourcePattern=ValidString)?
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//'resource-pattern='
		public Keyword getResourcePatternKeyword_2_3_0() { return cResourcePatternKeyword_2_3_0; }
		
		//resourcePattern=ValidString
		public Assignment getResourcePatternAssignment_2_3_1() { return cResourcePatternAssignment_2_3_1; }
		
		//ValidString
		public RuleCall getResourcePatternValidStringParserRuleCall_2_3_1_0() { return cResourcePatternValidStringParserRuleCall_2_3_1_0; }
		
		//('scope-resolver=' scopeResolver=[Component|ValidString])?
		public Group getGroup_2_4() { return cGroup_2_4; }
		
		//'scope-resolver='
		public Keyword getScopeResolverKeyword_2_4_0() { return cScopeResolverKeyword_2_4_0; }
		
		//scopeResolver=[Component|ValidString]
		public Assignment getScopeResolverAssignment_2_4_1() { return cScopeResolverAssignment_2_4_1; }
		
		//[Component|ValidString]
		public CrossReference getScopeResolverComponentCrossReference_2_4_1_0() { return cScopeResolverComponentCrossReference_2_4_1_0; }
		
		//ValidString
		public RuleCall getScopeResolverComponentValidStringParserRuleCall_2_4_1_0_1() { return cScopeResolverComponentValidStringParserRuleCall_2_4_1_0_1; }
		
		//('scoped-proxy=' scopedProxy=EnumScopedProxy)?
		public Group getGroup_2_5() { return cGroup_2_5; }
		
		//'scoped-proxy='
		public Keyword getScopedProxyKeyword_2_5_0() { return cScopedProxyKeyword_2_5_0; }
		
		//scopedProxy=EnumScopedProxy
		public Assignment getScopedProxyAssignment_2_5_1() { return cScopedProxyAssignment_2_5_1; }
		
		//EnumScopedProxy
		public RuleCall getScopedProxyEnumScopedProxyEnumRuleCall_2_5_1_0() { return cScopedProxyEnumScopedProxyEnumRuleCall_2_5_1_0; }
		
		//('use-default-filters=' useDefaultFilters=sBoolean)?
		public Group getGroup_2_6() { return cGroup_2_6; }
		
		//'use-default-filters='
		public Keyword getUseDefaultFiltersKeyword_2_6_0() { return cUseDefaultFiltersKeyword_2_6_0; }
		
		//useDefaultFilters=sBoolean
		public Assignment getUseDefaultFiltersAssignment_2_6_1() { return cUseDefaultFiltersAssignment_2_6_1; }
		
		//sBoolean
		public RuleCall getUseDefaultFiltersSBooleanEnumRuleCall_2_6_1_0() { return cUseDefaultFiltersSBooleanEnumRuleCall_2_6_1_0; }
		
		//'/>' | '>' includeFilters+=IncludeFilter* excludeFilters+=ExcludeFilter* '</context:component-scan>'
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_3_0() { return cSolidusGreaterThanSignKeyword_3_0; }
		
		//'>' includeFilters+=IncludeFilter* excludeFilters+=ExcludeFilter* '</context:component-scan>'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_3_1_0() { return cGreaterThanSignKeyword_3_1_0; }
		
		//includeFilters+=IncludeFilter*
		public Assignment getIncludeFiltersAssignment_3_1_1() { return cIncludeFiltersAssignment_3_1_1; }
		
		//IncludeFilter
		public RuleCall getIncludeFiltersIncludeFilterParserRuleCall_3_1_1_0() { return cIncludeFiltersIncludeFilterParserRuleCall_3_1_1_0; }
		
		//excludeFilters+=ExcludeFilter*
		public Assignment getExcludeFiltersAssignment_3_1_2() { return cExcludeFiltersAssignment_3_1_2; }
		
		//ExcludeFilter
		public RuleCall getExcludeFiltersExcludeFilterParserRuleCall_3_1_2_0() { return cExcludeFiltersExcludeFilterParserRuleCall_3_1_2_0; }
		
		//'</context:component-scan>'
		public Keyword getContextComponentScanKeyword_3_1_3() { return cContextComponentScanKeyword_3_1_3; }
	}
	public class IncludeFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.IncludeFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContextIncludeFilterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cTypeKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cTypeAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cTypeEnumTypeFilterEnumRuleCall_1_0_1_0 = (RuleCall)cTypeAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cExpressionKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cExpressionAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cExpressionValidStringParserRuleCall_1_1_1_0 = (RuleCall)cExpressionAssignment_1_1_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cSolidusGreaterThanSignKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cContextIncludeFilterKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		
		//IncludeFilter:
		//	'<context:include-filter' ('type=' type=EnumTypeFilter & 'expression=' expression=ValidString) ('/>' | '>'
		//	'</context:include-filter>');
		@Override public ParserRule getRule() { return rule; }
		
		//'<context:include-filter' ('type=' type=EnumTypeFilter & 'expression=' expression=ValidString) ('/>' | '>'
		//'</context:include-filter>')
		public Group getGroup() { return cGroup; }
		
		//'<context:include-filter'
		public Keyword getContextIncludeFilterKeyword_0() { return cContextIncludeFilterKeyword_0; }
		
		//'type=' type=EnumTypeFilter & 'expression=' expression=ValidString
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//'type=' type=EnumTypeFilter
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'type='
		public Keyword getTypeKeyword_1_0_0() { return cTypeKeyword_1_0_0; }
		
		//type=EnumTypeFilter
		public Assignment getTypeAssignment_1_0_1() { return cTypeAssignment_1_0_1; }
		
		//EnumTypeFilter
		public RuleCall getTypeEnumTypeFilterEnumRuleCall_1_0_1_0() { return cTypeEnumTypeFilterEnumRuleCall_1_0_1_0; }
		
		//'expression=' expression=ValidString
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'expression='
		public Keyword getExpressionKeyword_1_1_0() { return cExpressionKeyword_1_1_0; }
		
		//expression=ValidString
		public Assignment getExpressionAssignment_1_1_1() { return cExpressionAssignment_1_1_1; }
		
		//ValidString
		public RuleCall getExpressionValidStringParserRuleCall_1_1_1_0() { return cExpressionValidStringParserRuleCall_1_1_1_0; }
		
		//'/>' | '>' '</context:include-filter>'
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_2_0() { return cSolidusGreaterThanSignKeyword_2_0; }
		
		//'>' '</context:include-filter>'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_1_0() { return cGreaterThanSignKeyword_2_1_0; }
		
		//'</context:include-filter>'
		public Keyword getContextIncludeFilterKeyword_2_1_1() { return cContextIncludeFilterKeyword_2_1_1; }
	}
	public class ExcludeFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.ExcludeFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContextExcludeFilterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cTypeKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cTypeAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cTypeEnumTypeFilterEnumRuleCall_1_0_1_0 = (RuleCall)cTypeAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cExpressionKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cExpressionAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cExpressionValidStringParserRuleCall_1_1_1_0 = (RuleCall)cExpressionAssignment_1_1_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cSolidusGreaterThanSignKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cContextExcludeFilterKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		
		//ExcludeFilter:
		//	'<context:exclude-filter' ('type=' type=EnumTypeFilter & 'expression=' expression=ValidString) ('/>' | '>'
		//	'</context:exclude-filter>');
		@Override public ParserRule getRule() { return rule; }
		
		//'<context:exclude-filter' ('type=' type=EnumTypeFilter & 'expression=' expression=ValidString) ('/>' | '>'
		//'</context:exclude-filter>')
		public Group getGroup() { return cGroup; }
		
		//'<context:exclude-filter'
		public Keyword getContextExcludeFilterKeyword_0() { return cContextExcludeFilterKeyword_0; }
		
		//'type=' type=EnumTypeFilter & 'expression=' expression=ValidString
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//'type=' type=EnumTypeFilter
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'type='
		public Keyword getTypeKeyword_1_0_0() { return cTypeKeyword_1_0_0; }
		
		//type=EnumTypeFilter
		public Assignment getTypeAssignment_1_0_1() { return cTypeAssignment_1_0_1; }
		
		//EnumTypeFilter
		public RuleCall getTypeEnumTypeFilterEnumRuleCall_1_0_1_0() { return cTypeEnumTypeFilterEnumRuleCall_1_0_1_0; }
		
		//'expression=' expression=ValidString
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'expression='
		public Keyword getExpressionKeyword_1_1_0() { return cExpressionKeyword_1_1_0; }
		
		//expression=ValidString
		public Assignment getExpressionAssignment_1_1_1() { return cExpressionAssignment_1_1_1; }
		
		//ValidString
		public RuleCall getExpressionValidStringParserRuleCall_1_1_1_0() { return cExpressionValidStringParserRuleCall_1_1_1_0; }
		
		//'/>' | '>' '</context:exclude-filter>'
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_2_0() { return cSolidusGreaterThanSignKeyword_2_0; }
		
		//'>' '</context:exclude-filter>'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_1_0() { return cGreaterThanSignKeyword_2_1_0; }
		
		//'</context:exclude-filter>'
		public Keyword getContextExcludeFilterKeyword_2_1_1() { return cContextExcludeFilterKeyword_2_1_1; }
	}
	public class LoadTimeWeaverElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.LoadTimeWeaver");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLoadTimeWeaverAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLoadTimeWeaverKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cAspectjWeavingKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cAspectjWeavingAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cAspectjWeavingValidStringParserRuleCall_2_0_1_0 = (RuleCall)cAspectjWeavingAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cWeaverClassKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cWeaverClassAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cWeaverClassValidStringParserRuleCall_2_1_1_0 = (RuleCall)cWeaverClassAssignment_2_1_1.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Keyword cSolidusGreaterThanSignKeyword_3_0 = (Keyword)cAlternatives_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Keyword cContextLoadTimeWeaverKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		
		///** load-time weaving for Aspect class */ LoadTimeWeaver:
		//	{LoadTimeWeaver} 'load-time-weaver' (('aspectj-weaving=' aspectjWeaving=ValidString)? & ('weaver-class='
		//	weaverClass=ValidString)?) ('/>' | '>' '</context:load-time-weaver>');
		@Override public ParserRule getRule() { return rule; }
		
		//{LoadTimeWeaver} 'load-time-weaver' (('aspectj-weaving=' aspectjWeaving=ValidString)? & ('weaver-class='
		//weaverClass=ValidString)?) ('/>' | '>' '</context:load-time-weaver>')
		public Group getGroup() { return cGroup; }
		
		//{LoadTimeWeaver}
		public Action getLoadTimeWeaverAction_0() { return cLoadTimeWeaverAction_0; }
		
		//'load-time-weaver'
		public Keyword getLoadTimeWeaverKeyword_1() { return cLoadTimeWeaverKeyword_1; }
		
		//('aspectj-weaving=' aspectjWeaving=ValidString)? & ('weaver-class=' weaverClass=ValidString)?
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//('aspectj-weaving=' aspectjWeaving=ValidString)?
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'aspectj-weaving='
		public Keyword getAspectjWeavingKeyword_2_0_0() { return cAspectjWeavingKeyword_2_0_0; }
		
		//aspectjWeaving=ValidString
		public Assignment getAspectjWeavingAssignment_2_0_1() { return cAspectjWeavingAssignment_2_0_1; }
		
		//ValidString
		public RuleCall getAspectjWeavingValidStringParserRuleCall_2_0_1_0() { return cAspectjWeavingValidStringParserRuleCall_2_0_1_0; }
		
		//('weaver-class=' weaverClass=ValidString)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'weaver-class='
		public Keyword getWeaverClassKeyword_2_1_0() { return cWeaverClassKeyword_2_1_0; }
		
		//weaverClass=ValidString
		public Assignment getWeaverClassAssignment_2_1_1() { return cWeaverClassAssignment_2_1_1; }
		
		//ValidString
		public RuleCall getWeaverClassValidStringParserRuleCall_2_1_1_0() { return cWeaverClassValidStringParserRuleCall_2_1_1_0; }
		
		//'/>' | '>' '</context:load-time-weaver>'
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_3_0() { return cSolidusGreaterThanSignKeyword_3_0; }
		
		//'>' '</context:load-time-weaver>'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_3_1_0() { return cGreaterThanSignKeyword_3_1_0; }
		
		//'</context:load-time-weaver>'
		public Keyword getContextLoadTimeWeaverKeyword_3_1_1() { return cContextLoadTimeWeaverKeyword_3_1_1; }
	}
	public class MbeanExportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.MbeanExport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMbeanExportAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMbeanExportKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cDefaultDomainKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cDefaultDomainAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cDefaultDomainValidStringParserRuleCall_2_0_1_0 = (RuleCall)cDefaultDomainAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cRegistrationKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cRegistrationAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cRegistrationMbeanRegistrationEnumEnumRuleCall_2_1_1_0 = (RuleCall)cRegistrationAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cUnorderedGroup_2.eContents().get(2);
		private final Keyword cServerKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cServerAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final CrossReference cServerComponentCrossReference_2_2_1_0 = (CrossReference)cServerAssignment_2_2_1.eContents().get(0);
		private final RuleCall cServerComponentValidStringParserRuleCall_2_2_1_0_1 = (RuleCall)cServerComponentCrossReference_2_2_1_0.eContents().get(1);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Keyword cSolidusGreaterThanSignKeyword_3_0 = (Keyword)cAlternatives_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Keyword cContextMbeanExportKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		
		//MbeanExport:
		//	{MbeanExport} 'mbean-export' (('default-domain=' defaultDomain=ValidString)? & ('registration='
		//	registration=MbeanRegistrationEnum)? & ('server=' server=[Component|ValidString])?) ('/>' | '>'
		//	'</context:mbean-export>');
		@Override public ParserRule getRule() { return rule; }
		
		//{MbeanExport} 'mbean-export' (('default-domain=' defaultDomain=ValidString)? & ('registration='
		//registration=MbeanRegistrationEnum)? & ('server=' server=[Component|ValidString])?) ('/>' | '>'
		//'</context:mbean-export>')
		public Group getGroup() { return cGroup; }
		
		//{MbeanExport}
		public Action getMbeanExportAction_0() { return cMbeanExportAction_0; }
		
		//'mbean-export'
		public Keyword getMbeanExportKeyword_1() { return cMbeanExportKeyword_1; }
		
		//('default-domain=' defaultDomain=ValidString)? & ('registration=' registration=MbeanRegistrationEnum)? & ('server='
		//server=[Component|ValidString])?
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//('default-domain=' defaultDomain=ValidString)?
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'default-domain='
		public Keyword getDefaultDomainKeyword_2_0_0() { return cDefaultDomainKeyword_2_0_0; }
		
		//defaultDomain=ValidString
		public Assignment getDefaultDomainAssignment_2_0_1() { return cDefaultDomainAssignment_2_0_1; }
		
		//ValidString
		public RuleCall getDefaultDomainValidStringParserRuleCall_2_0_1_0() { return cDefaultDomainValidStringParserRuleCall_2_0_1_0; }
		
		//('registration=' registration=MbeanRegistrationEnum)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'registration='
		public Keyword getRegistrationKeyword_2_1_0() { return cRegistrationKeyword_2_1_0; }
		
		//registration=MbeanRegistrationEnum
		public Assignment getRegistrationAssignment_2_1_1() { return cRegistrationAssignment_2_1_1; }
		
		//MbeanRegistrationEnum
		public RuleCall getRegistrationMbeanRegistrationEnumEnumRuleCall_2_1_1_0() { return cRegistrationMbeanRegistrationEnumEnumRuleCall_2_1_1_0; }
		
		//('server=' server=[Component|ValidString])?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//'server='
		public Keyword getServerKeyword_2_2_0() { return cServerKeyword_2_2_0; }
		
		//server=[Component|ValidString]
		public Assignment getServerAssignment_2_2_1() { return cServerAssignment_2_2_1; }
		
		//[Component|ValidString]
		public CrossReference getServerComponentCrossReference_2_2_1_0() { return cServerComponentCrossReference_2_2_1_0; }
		
		//ValidString
		public RuleCall getServerComponentValidStringParserRuleCall_2_2_1_0_1() { return cServerComponentValidStringParserRuleCall_2_2_1_0_1; }
		
		//'/>' | '>' '</context:mbean-export>'
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_3_0() { return cSolidusGreaterThanSignKeyword_3_0; }
		
		//'>' '</context:mbean-export>'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_3_1_0() { return cGreaterThanSignKeyword_3_1_0; }
		
		//'</context:mbean-export>'
		public Keyword getContextMbeanExportKeyword_3_1_1() { return cContextMbeanExportKeyword_3_1_1; }
	}
	public class MbeanServerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.MbeanServer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMbeanServerAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMbeanServerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cAgentIdKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cAgentIdAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cAgentIdValidStringParserRuleCall_2_0_1_0 = (RuleCall)cAgentIdAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cIdKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cNameAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cNameValidStringParserRuleCall_2_1_1_0 = (RuleCall)cNameAssignment_2_1_1.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Keyword cSolidusGreaterThanSignKeyword_3_0 = (Keyword)cAlternatives_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Keyword cContextMbeanServerKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		
		//MbeanServer:
		//	{MbeanServer} 'mbean-server' (('agent-id=' agentId=ValidString)? & ('id=' name=ValidString)?) ('/>' | '>'
		//	'</context:mbean-server>');
		@Override public ParserRule getRule() { return rule; }
		
		//{MbeanServer} 'mbean-server' (('agent-id=' agentId=ValidString)? & ('id=' name=ValidString)?) ('/>' | '>'
		//'</context:mbean-server>')
		public Group getGroup() { return cGroup; }
		
		//{MbeanServer}
		public Action getMbeanServerAction_0() { return cMbeanServerAction_0; }
		
		//'mbean-server'
		public Keyword getMbeanServerKeyword_1() { return cMbeanServerKeyword_1; }
		
		//('agent-id=' agentId=ValidString)? & ('id=' name=ValidString)?
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//('agent-id=' agentId=ValidString)?
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'agent-id='
		public Keyword getAgentIdKeyword_2_0_0() { return cAgentIdKeyword_2_0_0; }
		
		//agentId=ValidString
		public Assignment getAgentIdAssignment_2_0_1() { return cAgentIdAssignment_2_0_1; }
		
		//ValidString
		public RuleCall getAgentIdValidStringParserRuleCall_2_0_1_0() { return cAgentIdValidStringParserRuleCall_2_0_1_0; }
		
		//('id=' name=ValidString)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'id='
		public Keyword getIdKeyword_2_1_0() { return cIdKeyword_2_1_0; }
		
		//name=ValidString
		public Assignment getNameAssignment_2_1_1() { return cNameAssignment_2_1_1; }
		
		//ValidString
		public RuleCall getNameValidStringParserRuleCall_2_1_1_0() { return cNameValidStringParserRuleCall_2_1_1_0; }
		
		//'/>' | '>' '</context:mbean-server>'
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_3_0() { return cSolidusGreaterThanSignKeyword_3_0; }
		
		//'>' '</context:mbean-server>'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_3_1_0() { return cGreaterThanSignKeyword_3_1_0; }
		
		//'</context:mbean-server>'
		public Keyword getContextMbeanServerKeyword_3_1_1() { return cContextMbeanServerKeyword_3_1_1; }
	}
	public class PropertyHolderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.PropertyHolder");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPropertyPlaceholderParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPropertyOverrideParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//PropertyHolder:
		//	PropertyPlaceholder | PropertyOverride;
		@Override public ParserRule getRule() { return rule; }
		
		//PropertyPlaceholder | PropertyOverride
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PropertyPlaceholder
		public RuleCall getPropertyPlaceholderParserRuleCall_0() { return cPropertyPlaceholderParserRuleCall_0; }
		
		//PropertyOverride
		public RuleCall getPropertyOverrideParserRuleCall_1() { return cPropertyOverrideParserRuleCall_1; }
	}
	public class PropertyPlaceholderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.PropertyPlaceholder");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPropertyPlaceholderKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Assignment cPropertyfileAssignment_1_0 = (Assignment)cUnorderedGroup_1.eContents().get(0);
		private final RuleCall cPropertyfilePropertyFileParserRuleCall_1_0_0 = (RuleCall)cPropertyfileAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cIgnoreResourceNotFoundKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cIgnoreResourceNotFoundAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cIgnoreResourceNotFoundSBooleanEnumRuleCall_1_1_1_0 = (RuleCall)cIgnoreResourceNotFoundAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cIgnoreUnresolvableKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cIgnoreUnresolvableAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cIgnoreUnresolvableSBooleanEnumRuleCall_1_2_1_0 = (RuleCall)cIgnoreUnresolvableAssignment_1_2_1.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cUnorderedGroup_1.eContents().get(3);
		private final Keyword cLocalOverrideKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cLocalOverrideAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cLocalOverrideSBooleanEnumRuleCall_1_3_1_0 = (RuleCall)cLocalOverrideAssignment_1_3_1.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cUnorderedGroup_1.eContents().get(4);
		private final Keyword cOrderKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Assignment cOrderAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final RuleCall cOrderValidStringParserRuleCall_1_4_1_0 = (RuleCall)cOrderAssignment_1_4_1.eContents().get(0);
		private final Group cGroup_1_5 = (Group)cUnorderedGroup_1.eContents().get(5);
		private final Keyword cPropertiesRefKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final Assignment cPropertiesRefAssignment_1_5_1 = (Assignment)cGroup_1_5.eContents().get(1);
		private final CrossReference cPropertiesRefComponentCrossReference_1_5_1_0 = (CrossReference)cPropertiesRefAssignment_1_5_1.eContents().get(0);
		private final RuleCall cPropertiesRefComponentValidStringParserRuleCall_1_5_1_0_1 = (RuleCall)cPropertiesRefComponentCrossReference_1_5_1_0.eContents().get(1);
		private final Group cGroup_1_6 = (Group)cUnorderedGroup_1.eContents().get(6);
		private final Keyword cSystemPropertiesModeKeyword_1_6_0 = (Keyword)cGroup_1_6.eContents().get(0);
		private final Assignment cSystemPropertiesModeAssignment_1_6_1 = (Assignment)cGroup_1_6.eContents().get(1);
		private final RuleCall cSystemPropertiesModeValidStringParserRuleCall_1_6_1_0 = (RuleCall)cSystemPropertiesModeAssignment_1_6_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cSolidusGreaterThanSignKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cContextPropertyPlaceholderKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		
		///** Placeholder for properties files */ PropertyPlaceholder:
		//	'property-placeholder' (propertyfile=PropertyFile?
		//	& ('ignore-resource-not-found=' ignoreResourceNotFound=sBoolean)? & ('ignore-unresolvable='
		//	ignoreUnresolvable=sBoolean)? & ('local-override=' localOverride=sBoolean)?
		//	& ('order=' order=ValidString)? & ('properties-ref=' propertiesRef=[Component|ValidString])?
		//	& ('system-properties-mode=' systemPropertiesMode=ValidString)? //Depreciated since 3.1
		//) ('/>' | '>' '</context:property-placeholder>');
		@Override public ParserRule getRule() { return rule; }
		
		//'property-placeholder' (propertyfile=PropertyFile? & ('ignore-resource-not-found=' ignoreResourceNotFound=sBoolean)? &
		//('ignore-unresolvable=' ignoreUnresolvable=sBoolean)? & ('local-override=' localOverride=sBoolean)? & ('order='
		//order=ValidString)? & ('properties-ref=' propertiesRef=[Component|ValidString])? & ('system-properties-mode='
		//systemPropertiesMode=ValidString)? //Depreciated since 3.1
		//) ('/>' | '>' '</context:property-placeholder>')
		public Group getGroup() { return cGroup; }
		
		//'property-placeholder'
		public Keyword getPropertyPlaceholderKeyword_0() { return cPropertyPlaceholderKeyword_0; }
		
		//propertyfile=PropertyFile? & ('ignore-resource-not-found=' ignoreResourceNotFound=sBoolean)? & ('ignore-unresolvable='
		//ignoreUnresolvable=sBoolean)? & ('local-override=' localOverride=sBoolean)? & ('order=' order=ValidString)? &
		//('properties-ref=' propertiesRef=[Component|ValidString])? & ('system-properties-mode='
		//systemPropertiesMode=ValidString)?
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//propertyfile=PropertyFile?
		public Assignment getPropertyfileAssignment_1_0() { return cPropertyfileAssignment_1_0; }
		
		//PropertyFile
		public RuleCall getPropertyfilePropertyFileParserRuleCall_1_0_0() { return cPropertyfilePropertyFileParserRuleCall_1_0_0; }
		
		//('ignore-resource-not-found=' ignoreResourceNotFound=sBoolean)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'ignore-resource-not-found='
		public Keyword getIgnoreResourceNotFoundKeyword_1_1_0() { return cIgnoreResourceNotFoundKeyword_1_1_0; }
		
		//ignoreResourceNotFound=sBoolean
		public Assignment getIgnoreResourceNotFoundAssignment_1_1_1() { return cIgnoreResourceNotFoundAssignment_1_1_1; }
		
		//sBoolean
		public RuleCall getIgnoreResourceNotFoundSBooleanEnumRuleCall_1_1_1_0() { return cIgnoreResourceNotFoundSBooleanEnumRuleCall_1_1_1_0; }
		
		//('ignore-unresolvable=' ignoreUnresolvable=sBoolean)?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'ignore-unresolvable='
		public Keyword getIgnoreUnresolvableKeyword_1_2_0() { return cIgnoreUnresolvableKeyword_1_2_0; }
		
		//ignoreUnresolvable=sBoolean
		public Assignment getIgnoreUnresolvableAssignment_1_2_1() { return cIgnoreUnresolvableAssignment_1_2_1; }
		
		//sBoolean
		public RuleCall getIgnoreUnresolvableSBooleanEnumRuleCall_1_2_1_0() { return cIgnoreUnresolvableSBooleanEnumRuleCall_1_2_1_0; }
		
		//('local-override=' localOverride=sBoolean)?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'local-override='
		public Keyword getLocalOverrideKeyword_1_3_0() { return cLocalOverrideKeyword_1_3_0; }
		
		//localOverride=sBoolean
		public Assignment getLocalOverrideAssignment_1_3_1() { return cLocalOverrideAssignment_1_3_1; }
		
		//sBoolean
		public RuleCall getLocalOverrideSBooleanEnumRuleCall_1_3_1_0() { return cLocalOverrideSBooleanEnumRuleCall_1_3_1_0; }
		
		//('order=' order=ValidString)?
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//'order='
		public Keyword getOrderKeyword_1_4_0() { return cOrderKeyword_1_4_0; }
		
		//order=ValidString
		public Assignment getOrderAssignment_1_4_1() { return cOrderAssignment_1_4_1; }
		
		//ValidString
		public RuleCall getOrderValidStringParserRuleCall_1_4_1_0() { return cOrderValidStringParserRuleCall_1_4_1_0; }
		
		//('properties-ref=' propertiesRef=[Component|ValidString])?
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//'properties-ref='
		public Keyword getPropertiesRefKeyword_1_5_0() { return cPropertiesRefKeyword_1_5_0; }
		
		//propertiesRef=[Component|ValidString]
		public Assignment getPropertiesRefAssignment_1_5_1() { return cPropertiesRefAssignment_1_5_1; }
		
		//[Component|ValidString]
		public CrossReference getPropertiesRefComponentCrossReference_1_5_1_0() { return cPropertiesRefComponentCrossReference_1_5_1_0; }
		
		//ValidString
		public RuleCall getPropertiesRefComponentValidStringParserRuleCall_1_5_1_0_1() { return cPropertiesRefComponentValidStringParserRuleCall_1_5_1_0_1; }
		
		//('system-properties-mode=' systemPropertiesMode=ValidString)?
		public Group getGroup_1_6() { return cGroup_1_6; }
		
		//'system-properties-mode='
		public Keyword getSystemPropertiesModeKeyword_1_6_0() { return cSystemPropertiesModeKeyword_1_6_0; }
		
		//systemPropertiesMode=ValidString
		public Assignment getSystemPropertiesModeAssignment_1_6_1() { return cSystemPropertiesModeAssignment_1_6_1; }
		
		//ValidString
		public RuleCall getSystemPropertiesModeValidStringParserRuleCall_1_6_1_0() { return cSystemPropertiesModeValidStringParserRuleCall_1_6_1_0; }
		
		//'/>' | '>' '</context:property-placeholder>'
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_2_0() { return cSolidusGreaterThanSignKeyword_2_0; }
		
		//'>' '</context:property-placeholder>'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_1_0() { return cGreaterThanSignKeyword_2_1_0; }
		
		//'</context:property-placeholder>'
		public Keyword getContextPropertyPlaceholderKeyword_2_1_1() { return cContextPropertyPlaceholderKeyword_2_1_1; }
	}
	public class PropertyOverrideElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.PropertyOverride");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPropertyOverrideKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Assignment cPropertyfileAssignment_1_0 = (Assignment)cUnorderedGroup_1.eContents().get(0);
		private final RuleCall cPropertyfilePropertyFileParserRuleCall_1_0_0 = (RuleCall)cPropertyfileAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cIgnoreResourceNotFoundKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cIgnoreResourceNotFoundAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cIgnoreResourceNotFoundSBooleanEnumRuleCall_1_1_1_0 = (RuleCall)cIgnoreResourceNotFoundAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cIgnoreUnresolvableKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cIgnoreUnresolvableAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cIgnoreUnresolvableSBooleanEnumRuleCall_1_2_1_0 = (RuleCall)cIgnoreUnresolvableAssignment_1_2_1.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cUnorderedGroup_1.eContents().get(3);
		private final Keyword cLocalOverrideKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cLocalOverrideAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cLocalOverrideSBooleanEnumRuleCall_1_3_1_0 = (RuleCall)cLocalOverrideAssignment_1_3_1.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cUnorderedGroup_1.eContents().get(4);
		private final Keyword cOrderKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Assignment cOrderAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final RuleCall cOrderValidStringParserRuleCall_1_4_1_0 = (RuleCall)cOrderAssignment_1_4_1.eContents().get(0);
		private final Group cGroup_1_5 = (Group)cUnorderedGroup_1.eContents().get(5);
		private final Keyword cPropertiesRefKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final Assignment cPropertiesRefAssignment_1_5_1 = (Assignment)cGroup_1_5.eContents().get(1);
		private final CrossReference cPropertiesRefComponentCrossReference_1_5_1_0 = (CrossReference)cPropertiesRefAssignment_1_5_1.eContents().get(0);
		private final RuleCall cPropertiesRefComponentValidStringParserRuleCall_1_5_1_0_1 = (RuleCall)cPropertiesRefComponentCrossReference_1_5_1_0.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cSolidusGreaterThanSignKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cContextPropertyOverrideKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		
		///** Activates pushing of override values into bean properties */ PropertyOverride:
		//	'property-override' (propertyfile=PropertyFile
		//	& ('ignore-resource-not-found=' ignoreResourceNotFound=sBoolean)? & ('ignore-unresolvable='
		//	ignoreUnresolvable=sBoolean)? & ('local-override=' localOverride=sBoolean)?
		//	& ('order=' order=ValidString)? & ('properties-ref=' propertiesRef=[Component|ValidString])?) ('/>' | '>'
		//	'</context:property-override>');
		@Override public ParserRule getRule() { return rule; }
		
		//'property-override' (propertyfile=PropertyFile & ('ignore-resource-not-found=' ignoreResourceNotFound=sBoolean)? &
		//('ignore-unresolvable=' ignoreUnresolvable=sBoolean)? & ('local-override=' localOverride=sBoolean)? & ('order='
		//order=ValidString)? & ('properties-ref=' propertiesRef=[Component|ValidString])?) ('/>' | '>'
		//'</context:property-override>')
		public Group getGroup() { return cGroup; }
		
		//'property-override'
		public Keyword getPropertyOverrideKeyword_0() { return cPropertyOverrideKeyword_0; }
		
		//propertyfile=PropertyFile & ('ignore-resource-not-found=' ignoreResourceNotFound=sBoolean)? & ('ignore-unresolvable='
		//ignoreUnresolvable=sBoolean)? & ('local-override=' localOverride=sBoolean)? & ('order=' order=ValidString)? &
		//('properties-ref=' propertiesRef=[Component|ValidString])?
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//propertyfile=PropertyFile
		public Assignment getPropertyfileAssignment_1_0() { return cPropertyfileAssignment_1_0; }
		
		//PropertyFile
		public RuleCall getPropertyfilePropertyFileParserRuleCall_1_0_0() { return cPropertyfilePropertyFileParserRuleCall_1_0_0; }
		
		//('ignore-resource-not-found=' ignoreResourceNotFound=sBoolean)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'ignore-resource-not-found='
		public Keyword getIgnoreResourceNotFoundKeyword_1_1_0() { return cIgnoreResourceNotFoundKeyword_1_1_0; }
		
		//ignoreResourceNotFound=sBoolean
		public Assignment getIgnoreResourceNotFoundAssignment_1_1_1() { return cIgnoreResourceNotFoundAssignment_1_1_1; }
		
		//sBoolean
		public RuleCall getIgnoreResourceNotFoundSBooleanEnumRuleCall_1_1_1_0() { return cIgnoreResourceNotFoundSBooleanEnumRuleCall_1_1_1_0; }
		
		//('ignore-unresolvable=' ignoreUnresolvable=sBoolean)?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'ignore-unresolvable='
		public Keyword getIgnoreUnresolvableKeyword_1_2_0() { return cIgnoreUnresolvableKeyword_1_2_0; }
		
		//ignoreUnresolvable=sBoolean
		public Assignment getIgnoreUnresolvableAssignment_1_2_1() { return cIgnoreUnresolvableAssignment_1_2_1; }
		
		//sBoolean
		public RuleCall getIgnoreUnresolvableSBooleanEnumRuleCall_1_2_1_0() { return cIgnoreUnresolvableSBooleanEnumRuleCall_1_2_1_0; }
		
		//('local-override=' localOverride=sBoolean)?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'local-override='
		public Keyword getLocalOverrideKeyword_1_3_0() { return cLocalOverrideKeyword_1_3_0; }
		
		//localOverride=sBoolean
		public Assignment getLocalOverrideAssignment_1_3_1() { return cLocalOverrideAssignment_1_3_1; }
		
		//sBoolean
		public RuleCall getLocalOverrideSBooleanEnumRuleCall_1_3_1_0() { return cLocalOverrideSBooleanEnumRuleCall_1_3_1_0; }
		
		//('order=' order=ValidString)?
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//'order='
		public Keyword getOrderKeyword_1_4_0() { return cOrderKeyword_1_4_0; }
		
		//order=ValidString
		public Assignment getOrderAssignment_1_4_1() { return cOrderAssignment_1_4_1; }
		
		//ValidString
		public RuleCall getOrderValidStringParserRuleCall_1_4_1_0() { return cOrderValidStringParserRuleCall_1_4_1_0; }
		
		//('properties-ref=' propertiesRef=[Component|ValidString])?
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//'properties-ref='
		public Keyword getPropertiesRefKeyword_1_5_0() { return cPropertiesRefKeyword_1_5_0; }
		
		//propertiesRef=[Component|ValidString]
		public Assignment getPropertiesRefAssignment_1_5_1() { return cPropertiesRefAssignment_1_5_1; }
		
		//[Component|ValidString]
		public CrossReference getPropertiesRefComponentCrossReference_1_5_1_0() { return cPropertiesRefComponentCrossReference_1_5_1_0; }
		
		//ValidString
		public RuleCall getPropertiesRefComponentValidStringParserRuleCall_1_5_1_0_1() { return cPropertiesRefComponentValidStringParserRuleCall_1_5_1_0_1; }
		
		//'/>' | '>' '</context:property-override>'
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_2_0() { return cSolidusGreaterThanSignKeyword_2_0; }
		
		//'>' '</context:property-override>'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_1_0() { return cGreaterThanSignKeyword_2_1_0; }
		
		//'</context:property-override>'
		public Keyword getContextPropertyOverrideKeyword_2_1_1() { return cContextPropertyOverrideKeyword_2_1_1; }
	}
	public class SpringConfiguredElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.SpringConfigured");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSpringConfiguredAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSpringConfiguredKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cSolidusGreaterThanSignKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cContextSpringConfiguredKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		
		///*Signals the current application context to apply dependency injection to non-managed classes that are 
		// instantiated outside of the Spring bean factory (typically classes annotated with the @Configurable annotation). */ SpringConfigured:
		//	{SpringConfigured} 'spring-configured' ('/>' | '>' '</context:spring-configured>');
		@Override public ParserRule getRule() { return rule; }
		
		//{SpringConfigured} 'spring-configured' ('/>' | '>' '</context:spring-configured>')
		public Group getGroup() { return cGroup; }
		
		//{SpringConfigured}
		public Action getSpringConfiguredAction_0() { return cSpringConfiguredAction_0; }
		
		//'spring-configured'
		public Keyword getSpringConfiguredKeyword_1() { return cSpringConfiguredKeyword_1; }
		
		//'/>' | '>' '</context:spring-configured>'
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_2_0() { return cSolidusGreaterThanSignKeyword_2_0; }
		
		//'>' '</context:spring-configured>'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_1_0() { return cGreaterThanSignKeyword_2_1_0; }
		
		//'</context:spring-configured>'
		public Keyword getContextSpringConfiguredKeyword_2_1_1() { return cContextSpringConfiguredKeyword_2_1_1; }
	}
	public class AspectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.Aspect");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAopKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cAspectTypeParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///** Aspect main tags */ Aspect:
		//	'<aop:' AspectType;
		@Override public ParserRule getRule() { return rule; }
		
		//'<aop:' AspectType
		public Group getGroup() { return cGroup; }
		
		//'<aop:'
		public Keyword getAopKeyword_0() { return cAopKeyword_0; }
		
		//AspectType
		public RuleCall getAspectTypeParserRuleCall_1() { return cAspectTypeParserRuleCall_1; }
	}
	public class AspectTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.AspectType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAopAspectJAutoproxyParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAopConfigParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AspectType Aspect:
		//	AopAspectJAutoproxy | AopConfig;
		@Override public ParserRule getRule() { return rule; }
		
		//AopAspectJAutoproxy | AopConfig
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AopAspectJAutoproxy
		public RuleCall getAopAspectJAutoproxyParserRuleCall_0() { return cAopAspectJAutoproxyParserRuleCall_0; }
		
		//AopConfig
		public RuleCall getAopConfigParserRuleCall_1() { return cAopConfigParserRuleCall_1; }
	}
	public class AopAspectJAutoproxyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.AopAspectJAutoproxy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAopAspectJAutoproxyAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAspectjAutoproxyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cExposeProxyKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cExposeProxyAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cExposeProxySBooleanEnumRuleCall_2_0_1_0 = (RuleCall)cExposeProxyAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cProxyTargetClassKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cProxyTrajetClassAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cProxyTrajetClassSBooleanEnumRuleCall_2_1_1_0 = (RuleCall)cProxyTrajetClassAssignment_2_1_1.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Keyword cSolidusGreaterThanSignKeyword_3_0 = (Keyword)cAlternatives_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cAopincludesAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cAopincludesAopIncludeParserRuleCall_3_1_1_0 = (RuleCall)cAopincludesAssignment_3_1_1.eContents().get(0);
		private final Keyword cAopAspectjAutoproxyKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		
		///** To enable @AspectJ support with XML based configuration */ AopAspectJAutoproxy:
		//	{AopAspectJAutoproxy} 'aspectj-autoproxy' (('expose-proxy=' exposeProxy=sBoolean)? & ('proxy-target-class='
		//	proxyTrajetClass=sBoolean)?) ('/>' | '>' aopincludes+=AopInclude* '</aop:aspectj-autoproxy>');
		@Override public ParserRule getRule() { return rule; }
		
		//{AopAspectJAutoproxy} 'aspectj-autoproxy' (('expose-proxy=' exposeProxy=sBoolean)? & ('proxy-target-class='
		//proxyTrajetClass=sBoolean)?) ('/>' | '>' aopincludes+=AopInclude* '</aop:aspectj-autoproxy>')
		public Group getGroup() { return cGroup; }
		
		//{AopAspectJAutoproxy}
		public Action getAopAspectJAutoproxyAction_0() { return cAopAspectJAutoproxyAction_0; }
		
		//'aspectj-autoproxy'
		public Keyword getAspectjAutoproxyKeyword_1() { return cAspectjAutoproxyKeyword_1; }
		
		//('expose-proxy=' exposeProxy=sBoolean)? & ('proxy-target-class=' proxyTrajetClass=sBoolean)?
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//('expose-proxy=' exposeProxy=sBoolean)?
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'expose-proxy='
		public Keyword getExposeProxyKeyword_2_0_0() { return cExposeProxyKeyword_2_0_0; }
		
		//exposeProxy=sBoolean
		public Assignment getExposeProxyAssignment_2_0_1() { return cExposeProxyAssignment_2_0_1; }
		
		//sBoolean
		public RuleCall getExposeProxySBooleanEnumRuleCall_2_0_1_0() { return cExposeProxySBooleanEnumRuleCall_2_0_1_0; }
		
		//('proxy-target-class=' proxyTrajetClass=sBoolean)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'proxy-target-class='
		public Keyword getProxyTargetClassKeyword_2_1_0() { return cProxyTargetClassKeyword_2_1_0; }
		
		//proxyTrajetClass=sBoolean
		public Assignment getProxyTrajetClassAssignment_2_1_1() { return cProxyTrajetClassAssignment_2_1_1; }
		
		//sBoolean
		public RuleCall getProxyTrajetClassSBooleanEnumRuleCall_2_1_1_0() { return cProxyTrajetClassSBooleanEnumRuleCall_2_1_1_0; }
		
		//'/>' | '>' aopincludes+=AopInclude* '</aop:aspectj-autoproxy>'
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_3_0() { return cSolidusGreaterThanSignKeyword_3_0; }
		
		//'>' aopincludes+=AopInclude* '</aop:aspectj-autoproxy>'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_3_1_0() { return cGreaterThanSignKeyword_3_1_0; }
		
		//aopincludes+=AopInclude*
		public Assignment getAopincludesAssignment_3_1_1() { return cAopincludesAssignment_3_1_1; }
		
		//AopInclude
		public RuleCall getAopincludesAopIncludeParserRuleCall_3_1_1_0() { return cAopincludesAopIncludeParserRuleCall_3_1_1_0; }
		
		//'</aop:aspectj-autoproxy>'
		public Keyword getAopAspectjAutoproxyKeyword_3_1_2() { return cAopAspectjAutoproxyKeyword_3_1_2; }
	}
	public class AopIncludeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.AopInclude");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIncludeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAopIncludeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cAopIncludeComponentCrossReference_2_0 = (CrossReference)cAopIncludeAssignment_2.eContents().get(0);
		private final RuleCall cAopIncludeComponentValidStringParserRuleCall_2_0_1 = (RuleCall)cAopIncludeComponentCrossReference_2_0.eContents().get(1);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Keyword cSolidusGreaterThanSignKeyword_3_0 = (Keyword)cAlternatives_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Keyword cAopIncludeKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		
		///** Include @AspectJ aspect  use with Spring AOP*/ AopInclude:
		//	'include' 'name=' aopInclude=[Component|ValidString] ('/>' | '>' '</aop:include>');
		@Override public ParserRule getRule() { return rule; }
		
		//'include' 'name=' aopInclude=[Component|ValidString] ('/>' | '>' '</aop:include>')
		public Group getGroup() { return cGroup; }
		
		//'include'
		public Keyword getIncludeKeyword_0() { return cIncludeKeyword_0; }
		
		//'name='
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//aopInclude=[Component|ValidString]
		public Assignment getAopIncludeAssignment_2() { return cAopIncludeAssignment_2; }
		
		//[Component|ValidString]
		public CrossReference getAopIncludeComponentCrossReference_2_0() { return cAopIncludeComponentCrossReference_2_0; }
		
		//ValidString
		public RuleCall getAopIncludeComponentValidStringParserRuleCall_2_0_1() { return cAopIncludeComponentValidStringParserRuleCall_2_0_1; }
		
		//'/>' | '>' '</aop:include>'
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_3_0() { return cSolidusGreaterThanSignKeyword_3_0; }
		
		//'>' '</aop:include>'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_3_1_0() { return cGreaterThanSignKeyword_3_1_0; }
		
		//'</aop:include>'
		public Keyword getAopIncludeKeyword_3_1_1() { return cAopIncludeKeyword_3_1_1; }
	}
	public class AopConfigElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.AopConfig");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAopConfigAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cConfigKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1_1 = (UnorderedGroup)cGroup_1.eContents().get(1);
		private final Group cGroup_1_1_0 = (Group)cUnorderedGroup_1_1.eContents().get(0);
		private final Keyword cExposeProxyKeyword_1_1_0_0 = (Keyword)cGroup_1_1_0.eContents().get(0);
		private final Assignment cExposeProxyAssignment_1_1_0_1 = (Assignment)cGroup_1_1_0.eContents().get(1);
		private final RuleCall cExposeProxySBooleanEnumRuleCall_1_1_0_1_0 = (RuleCall)cExposeProxyAssignment_1_1_0_1.eContents().get(0);
		private final Group cGroup_1_1_1 = (Group)cUnorderedGroup_1_1.eContents().get(1);
		private final Keyword cProxyTargetClassKeyword_1_1_1_0 = (Keyword)cGroup_1_1_1.eContents().get(0);
		private final Assignment cProxyTrajetClassAssignment_1_1_1_1 = (Assignment)cGroup_1_1_1.eContents().get(1);
		private final RuleCall cProxyTrajetClassSBooleanEnumRuleCall_1_1_1_1_0 = (RuleCall)cProxyTrajetClassAssignment_1_1_1_1.eContents().get(0);
		private final Alternatives cAlternatives_1_2 = (Alternatives)cGroup_1.eContents().get(2);
		private final Keyword cSolidusGreaterThanSignKeyword_1_2_0 = (Keyword)cAlternatives_1_2.eContents().get(0);
		private final Group cGroup_1_2_1 = (Group)cAlternatives_1_2.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_1_2_1_0 = (Keyword)cGroup_1_2_1.eContents().get(0);
		private final Group cGroup_1_2_1_1 = (Group)cGroup_1_2_1.eContents().get(1);
		private final Assignment cAopPointcutsAssignment_1_2_1_1_0 = (Assignment)cGroup_1_2_1_1.eContents().get(0);
		private final RuleCall cAopPointcutsAopPointcutParserRuleCall_1_2_1_1_0_0 = (RuleCall)cAopPointcutsAssignment_1_2_1_1_0.eContents().get(0);
		private final Assignment cAopAdvisorsAssignment_1_2_1_1_1 = (Assignment)cGroup_1_2_1_1.eContents().get(1);
		private final RuleCall cAopAdvisorsAopAdvisorParserRuleCall_1_2_1_1_1_0 = (RuleCall)cAopAdvisorsAssignment_1_2_1_1_1.eContents().get(0);
		private final Assignment cAspectsAssignment_1_2_1_1_2 = (Assignment)cGroup_1_2_1_1.eContents().get(2);
		private final RuleCall cAspectsAopAspectParserRuleCall_1_2_1_1_2_0 = (RuleCall)cAspectsAssignment_1_2_1_1_2.eContents().get(0);
		private final Keyword cAopConfigKeyword_1_2_1_2 = (Keyword)cGroup_1_2_1.eContents().get(2);
		
		//AopConfig:
		//	{AopConfig} ('config' (('expose-proxy=' exposeProxy=sBoolean)? & ('proxy-target-class=' proxyTrajetClass=sBoolean)?)
		//	('/>' | '>' (aopPointcuts+=AopPointcut* aopAdvisors+=AopAdvisor* aspects+=AopAspect*) '</aop:config>'));
		@Override public ParserRule getRule() { return rule; }
		
		//{AopConfig} ('config' (('expose-proxy=' exposeProxy=sBoolean)? & ('proxy-target-class=' proxyTrajetClass=sBoolean)?)
		//('/>' | '>' (aopPointcuts+=AopPointcut* aopAdvisors+=AopAdvisor* aspects+=AopAspect*) '</aop:config>'))
		public Group getGroup() { return cGroup; }
		
		//{AopConfig}
		public Action getAopConfigAction_0() { return cAopConfigAction_0; }
		
		//'config' (('expose-proxy=' exposeProxy=sBoolean)? & ('proxy-target-class=' proxyTrajetClass=sBoolean)?) ('/>' | '>'
		//(aopPointcuts+=AopPointcut* aopAdvisors+=AopAdvisor* aspects+=AopAspect*) '</aop:config>')
		public Group getGroup_1() { return cGroup_1; }
		
		//'config'
		public Keyword getConfigKeyword_1_0() { return cConfigKeyword_1_0; }
		
		//('expose-proxy=' exposeProxy=sBoolean)? & ('proxy-target-class=' proxyTrajetClass=sBoolean)?
		public UnorderedGroup getUnorderedGroup_1_1() { return cUnorderedGroup_1_1; }
		
		//('expose-proxy=' exposeProxy=sBoolean)?
		public Group getGroup_1_1_0() { return cGroup_1_1_0; }
		
		//'expose-proxy='
		public Keyword getExposeProxyKeyword_1_1_0_0() { return cExposeProxyKeyword_1_1_0_0; }
		
		//exposeProxy=sBoolean
		public Assignment getExposeProxyAssignment_1_1_0_1() { return cExposeProxyAssignment_1_1_0_1; }
		
		//sBoolean
		public RuleCall getExposeProxySBooleanEnumRuleCall_1_1_0_1_0() { return cExposeProxySBooleanEnumRuleCall_1_1_0_1_0; }
		
		//('proxy-target-class=' proxyTrajetClass=sBoolean)?
		public Group getGroup_1_1_1() { return cGroup_1_1_1; }
		
		//'proxy-target-class='
		public Keyword getProxyTargetClassKeyword_1_1_1_0() { return cProxyTargetClassKeyword_1_1_1_0; }
		
		//proxyTrajetClass=sBoolean
		public Assignment getProxyTrajetClassAssignment_1_1_1_1() { return cProxyTrajetClassAssignment_1_1_1_1; }
		
		//sBoolean
		public RuleCall getProxyTrajetClassSBooleanEnumRuleCall_1_1_1_1_0() { return cProxyTrajetClassSBooleanEnumRuleCall_1_1_1_1_0; }
		
		//'/>' | '>' (aopPointcuts+=AopPointcut* aopAdvisors+=AopAdvisor* aspects+=AopAspect*) '</aop:config>'
		public Alternatives getAlternatives_1_2() { return cAlternatives_1_2; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_1_2_0() { return cSolidusGreaterThanSignKeyword_1_2_0; }
		
		//'>' (aopPointcuts+=AopPointcut* aopAdvisors+=AopAdvisor* aspects+=AopAspect*) '</aop:config>'
		public Group getGroup_1_2_1() { return cGroup_1_2_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_1_2_1_0() { return cGreaterThanSignKeyword_1_2_1_0; }
		
		//aopPointcuts+=AopPointcut* aopAdvisors+=AopAdvisor* aspects+=AopAspect*
		public Group getGroup_1_2_1_1() { return cGroup_1_2_1_1; }
		
		//aopPointcuts+=AopPointcut*
		public Assignment getAopPointcutsAssignment_1_2_1_1_0() { return cAopPointcutsAssignment_1_2_1_1_0; }
		
		//AopPointcut
		public RuleCall getAopPointcutsAopPointcutParserRuleCall_1_2_1_1_0_0() { return cAopPointcutsAopPointcutParserRuleCall_1_2_1_1_0_0; }
		
		//aopAdvisors+=AopAdvisor*
		public Assignment getAopAdvisorsAssignment_1_2_1_1_1() { return cAopAdvisorsAssignment_1_2_1_1_1; }
		
		//AopAdvisor
		public RuleCall getAopAdvisorsAopAdvisorParserRuleCall_1_2_1_1_1_0() { return cAopAdvisorsAopAdvisorParserRuleCall_1_2_1_1_1_0; }
		
		//aspects+=AopAspect*
		public Assignment getAspectsAssignment_1_2_1_1_2() { return cAspectsAssignment_1_2_1_1_2; }
		
		//AopAspect
		public RuleCall getAspectsAopAspectParserRuleCall_1_2_1_1_2_0() { return cAspectsAopAspectParserRuleCall_1_2_1_1_2_0; }
		
		//'</aop:config>'
		public Keyword getAopConfigKeyword_1_2_1_2() { return cAopConfigKeyword_1_2_1_2; }
	}
	public class AopPointcutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.AopPointcut");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAopPointcutKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cExpressionKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cExpressionAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cExpressionValidStringParserRuleCall_1_0_1_0 = (RuleCall)cExpressionAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cIdKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cNameValidStringParserRuleCall_1_1_1_0 = (RuleCall)cNameAssignment_1_1_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cSolidusGreaterThanSignKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cAopPointcutKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		
		//AopPointcut:
		//	'<aop:pointcut' ('expression=' expression=ValidString & 'id=' name=ValidString) ('/>' | '>' '</aop:pointcut>');
		@Override public ParserRule getRule() { return rule; }
		
		//'<aop:pointcut' ('expression=' expression=ValidString & 'id=' name=ValidString) ('/>' | '>' '</aop:pointcut>')
		public Group getGroup() { return cGroup; }
		
		//'<aop:pointcut'
		public Keyword getAopPointcutKeyword_0() { return cAopPointcutKeyword_0; }
		
		//'expression=' expression=ValidString & 'id=' name=ValidString
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//'expression=' expression=ValidString
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'expression='
		public Keyword getExpressionKeyword_1_0_0() { return cExpressionKeyword_1_0_0; }
		
		//expression=ValidString
		public Assignment getExpressionAssignment_1_0_1() { return cExpressionAssignment_1_0_1; }
		
		//ValidString
		public RuleCall getExpressionValidStringParserRuleCall_1_0_1_0() { return cExpressionValidStringParserRuleCall_1_0_1_0; }
		
		//'id=' name=ValidString
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'id='
		public Keyword getIdKeyword_1_1_0() { return cIdKeyword_1_1_0; }
		
		//name=ValidString
		public Assignment getNameAssignment_1_1_1() { return cNameAssignment_1_1_1; }
		
		//ValidString
		public RuleCall getNameValidStringParserRuleCall_1_1_1_0() { return cNameValidStringParserRuleCall_1_1_1_0; }
		
		//'/>' | '>' '</aop:pointcut>'
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_2_0() { return cSolidusGreaterThanSignKeyword_2_0; }
		
		//'>' '</aop:pointcut>'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_1_0() { return cGreaterThanSignKeyword_2_1_0; }
		
		//'</aop:pointcut>'
		public Keyword getAopPointcutKeyword_2_1_1() { return cAopPointcutKeyword_2_1_1; }
	}
	public class AopAdvisorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.AopAdvisor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAopAdvisorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cAdviceRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cAdviceRefAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final CrossReference cAdviceRefTxAdviseCrossReference_1_0_1_0 = (CrossReference)cAdviceRefAssignment_1_0_1.eContents().get(0);
		private final RuleCall cAdviceRefTxAdviseValidStringParserRuleCall_1_0_1_0_1 = (RuleCall)cAdviceRefTxAdviseCrossReference_1_0_1_0.eContents().get(1);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cIdKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cNameValidStringParserRuleCall_1_1_1_0 = (RuleCall)cNameAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cOrderKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cOrderAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cOrderValidStringParserRuleCall_1_2_1_0 = (RuleCall)cOrderAssignment_1_2_1.eContents().get(0);
		private final Alternatives cAlternatives_1_3 = (Alternatives)cUnorderedGroup_1.eContents().get(3);
		private final Assignment cPointcutAssignment_1_3_0 = (Assignment)cAlternatives_1_3.eContents().get(0);
		private final RuleCall cPointcutPointCutExpressionParserRuleCall_1_3_0_0 = (RuleCall)cPointcutAssignment_1_3_0.eContents().get(0);
		private final Group cGroup_1_3_1 = (Group)cAlternatives_1_3.eContents().get(1);
		private final Keyword cPointcutRefKeyword_1_3_1_0 = (Keyword)cGroup_1_3_1.eContents().get(0);
		private final Assignment cPointcutRefAssignment_1_3_1_1 = (Assignment)cGroup_1_3_1.eContents().get(1);
		private final CrossReference cPointcutRefAopPointcutCrossReference_1_3_1_1_0 = (CrossReference)cPointcutRefAssignment_1_3_1_1.eContents().get(0);
		private final RuleCall cPointcutRefAopPointcutValidStringParserRuleCall_1_3_1_1_0_1 = (RuleCall)cPointcutRefAopPointcutCrossReference_1_3_1_1_0.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cSolidusGreaterThanSignKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cAopAdvisorKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		
		///*  (pointcut|pointcut-ref)*/ AopAdvisor:
		//	'<aop:advisor' ('advice-ref=' adviceRef=[TxAdvise|ValidString] & ('id=' name=ValidString)? & ('order='
		//	order=ValidString)? & (pointcut=PointCutExpression | 'pointcut-ref=' pointcutRef=[AopPointcut|ValidString])) ('/>' |
		//	'>' '</aop:advisor>');
		@Override public ParserRule getRule() { return rule; }
		
		//'<aop:advisor' ('advice-ref=' adviceRef=[TxAdvise|ValidString] & ('id=' name=ValidString)? & ('order='
		//order=ValidString)? & (pointcut=PointCutExpression | 'pointcut-ref=' pointcutRef=[AopPointcut|ValidString])) ('/>' |
		//'>' '</aop:advisor>')
		public Group getGroup() { return cGroup; }
		
		//'<aop:advisor'
		public Keyword getAopAdvisorKeyword_0() { return cAopAdvisorKeyword_0; }
		
		//'advice-ref=' adviceRef=[TxAdvise|ValidString] & ('id=' name=ValidString)? & ('order=' order=ValidString)? &
		//(pointcut=PointCutExpression | 'pointcut-ref=' pointcutRef=[AopPointcut|ValidString])
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//'advice-ref=' adviceRef=[TxAdvise|ValidString]
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'advice-ref='
		public Keyword getAdviceRefKeyword_1_0_0() { return cAdviceRefKeyword_1_0_0; }
		
		//adviceRef=[TxAdvise|ValidString]
		public Assignment getAdviceRefAssignment_1_0_1() { return cAdviceRefAssignment_1_0_1; }
		
		//[TxAdvise|ValidString]
		public CrossReference getAdviceRefTxAdviseCrossReference_1_0_1_0() { return cAdviceRefTxAdviseCrossReference_1_0_1_0; }
		
		//ValidString
		public RuleCall getAdviceRefTxAdviseValidStringParserRuleCall_1_0_1_0_1() { return cAdviceRefTxAdviseValidStringParserRuleCall_1_0_1_0_1; }
		
		//('id=' name=ValidString)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'id='
		public Keyword getIdKeyword_1_1_0() { return cIdKeyword_1_1_0; }
		
		//name=ValidString
		public Assignment getNameAssignment_1_1_1() { return cNameAssignment_1_1_1; }
		
		//ValidString
		public RuleCall getNameValidStringParserRuleCall_1_1_1_0() { return cNameValidStringParserRuleCall_1_1_1_0; }
		
		//('order=' order=ValidString)?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'order='
		public Keyword getOrderKeyword_1_2_0() { return cOrderKeyword_1_2_0; }
		
		//order=ValidString
		public Assignment getOrderAssignment_1_2_1() { return cOrderAssignment_1_2_1; }
		
		//ValidString
		public RuleCall getOrderValidStringParserRuleCall_1_2_1_0() { return cOrderValidStringParserRuleCall_1_2_1_0; }
		
		//(pointcut=PointCutExpression | 'pointcut-ref=' pointcutRef=[AopPointcut|ValidString])
		public Alternatives getAlternatives_1_3() { return cAlternatives_1_3; }
		
		//pointcut=PointCutExpression
		public Assignment getPointcutAssignment_1_3_0() { return cPointcutAssignment_1_3_0; }
		
		//PointCutExpression
		public RuleCall getPointcutPointCutExpressionParserRuleCall_1_3_0_0() { return cPointcutPointCutExpressionParserRuleCall_1_3_0_0; }
		
		//'pointcut-ref=' pointcutRef=[AopPointcut|ValidString]
		public Group getGroup_1_3_1() { return cGroup_1_3_1; }
		
		//'pointcut-ref='
		public Keyword getPointcutRefKeyword_1_3_1_0() { return cPointcutRefKeyword_1_3_1_0; }
		
		//pointcutRef=[AopPointcut|ValidString]
		public Assignment getPointcutRefAssignment_1_3_1_1() { return cPointcutRefAssignment_1_3_1_1; }
		
		//[AopPointcut|ValidString]
		public CrossReference getPointcutRefAopPointcutCrossReference_1_3_1_1_0() { return cPointcutRefAopPointcutCrossReference_1_3_1_1_0; }
		
		//ValidString
		public RuleCall getPointcutRefAopPointcutValidStringParserRuleCall_1_3_1_1_0_1() { return cPointcutRefAopPointcutValidStringParserRuleCall_1_3_1_1_0_1; }
		
		//'/>' | '>' '</aop:advisor>'
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_2_0() { return cSolidusGreaterThanSignKeyword_2_0; }
		
		//'>' '</aop:advisor>'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_1_0() { return cGreaterThanSignKeyword_2_1_0; }
		
		//'</aop:advisor>'
		public Keyword getAopAdvisorKeyword_2_1_1() { return cAopAdvisorKeyword_2_1_1; }
	}
	public class PointCutExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.PointCutExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPointcutKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cExpressionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cExpressionValidStringParserRuleCall_1_0 = (RuleCall)cExpressionAssignment_1.eContents().get(0);
		
		//PointCutExpression AopPointcut:
		//	'pointcut=' expression=ValidString;
		@Override public ParserRule getRule() { return rule; }
		
		//'pointcut=' expression=ValidString
		public Group getGroup() { return cGroup; }
		
		//'pointcut='
		public Keyword getPointcutKeyword_0() { return cPointcutKeyword_0; }
		
		//expression=ValidString
		public Assignment getExpressionAssignment_1() { return cExpressionAssignment_1; }
		
		//ValidString
		public RuleCall getExpressionValidStringParserRuleCall_1_0() { return cExpressionValidStringParserRuleCall_1_0; }
	}
	public class AopAspectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.AopAspect");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAopAspectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cIdKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cNameAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cNameValidStringParserRuleCall_1_0_1_0 = (RuleCall)cNameAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cOrderKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cOrderAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cOrderValidStringParserRuleCall_1_1_1_0 = (RuleCall)cOrderAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cRefKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cBackingBeanRefAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final CrossReference cBackingBeanRefComponentCrossReference_1_2_1_0 = (CrossReference)cBackingBeanRefAssignment_1_2_1.eContents().get(0);
		private final RuleCall cBackingBeanRefComponentValidStringParserRuleCall_1_2_1_0_1 = (RuleCall)cBackingBeanRefComponentCrossReference_1_2_1_0.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cAopPointcutsAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cAopPointcutsAopPointcutParserRuleCall_3_0_0 = (RuleCall)cAopPointcutsAssignment_3_0.eContents().get(0);
		private final Assignment cDeclaredParentsAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cDeclaredParentsDeclareParentsParserRuleCall_3_1_0 = (RuleCall)cDeclaredParentsAssignment_3_1.eContents().get(0);
		private final Assignment cAdvisesAssignment_3_2 = (Assignment)cAlternatives_3.eContents().get(2);
		private final RuleCall cAdvisesAdviseParserRuleCall_3_2_0 = (RuleCall)cAdvisesAssignment_3_2.eContents().get(0);
		private final Keyword cAopAspectKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		///**(pointcut | declare-parents | before | after | after-returning | after-throwing | around)* */ AopAspect:
		//	'<aop:aspect' ('id=' name=ValidString & 'order=' order=ValidString & 'ref=' backingBeanRef=[Component|ValidString])
		//	'>' (aopPointcuts+=AopPointcut | declaredParents+=DeclareParents | advises+=Advise)* '</aop:aspect>';
		@Override public ParserRule getRule() { return rule; }
		
		//'<aop:aspect' ('id=' name=ValidString & 'order=' order=ValidString & 'ref=' backingBeanRef=[Component|ValidString]) '>'
		//(aopPointcuts+=AopPointcut | declaredParents+=DeclareParents | advises+=Advise)* '</aop:aspect>'
		public Group getGroup() { return cGroup; }
		
		//'<aop:aspect'
		public Keyword getAopAspectKeyword_0() { return cAopAspectKeyword_0; }
		
		//'id=' name=ValidString & 'order=' order=ValidString & 'ref=' backingBeanRef=[Component|ValidString]
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//'id=' name=ValidString
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'id='
		public Keyword getIdKeyword_1_0_0() { return cIdKeyword_1_0_0; }
		
		//name=ValidString
		public Assignment getNameAssignment_1_0_1() { return cNameAssignment_1_0_1; }
		
		//ValidString
		public RuleCall getNameValidStringParserRuleCall_1_0_1_0() { return cNameValidStringParserRuleCall_1_0_1_0; }
		
		//'order=' order=ValidString
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'order='
		public Keyword getOrderKeyword_1_1_0() { return cOrderKeyword_1_1_0; }
		
		//order=ValidString
		public Assignment getOrderAssignment_1_1_1() { return cOrderAssignment_1_1_1; }
		
		//ValidString
		public RuleCall getOrderValidStringParserRuleCall_1_1_1_0() { return cOrderValidStringParserRuleCall_1_1_1_0; }
		
		//'ref=' backingBeanRef=[Component|ValidString]
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'ref='
		public Keyword getRefKeyword_1_2_0() { return cRefKeyword_1_2_0; }
		
		//backingBeanRef=[Component|ValidString]
		public Assignment getBackingBeanRefAssignment_1_2_1() { return cBackingBeanRefAssignment_1_2_1; }
		
		//[Component|ValidString]
		public CrossReference getBackingBeanRefComponentCrossReference_1_2_1_0() { return cBackingBeanRefComponentCrossReference_1_2_1_0; }
		
		//ValidString
		public RuleCall getBackingBeanRefComponentValidStringParserRuleCall_1_2_1_0_1() { return cBackingBeanRefComponentValidStringParserRuleCall_1_2_1_0_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2() { return cGreaterThanSignKeyword_2; }
		
		//(aopPointcuts+=AopPointcut | declaredParents+=DeclareParents | advises+=Advise)*
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//aopPointcuts+=AopPointcut
		public Assignment getAopPointcutsAssignment_3_0() { return cAopPointcutsAssignment_3_0; }
		
		//AopPointcut
		public RuleCall getAopPointcutsAopPointcutParserRuleCall_3_0_0() { return cAopPointcutsAopPointcutParserRuleCall_3_0_0; }
		
		//declaredParents+=DeclareParents
		public Assignment getDeclaredParentsAssignment_3_1() { return cDeclaredParentsAssignment_3_1; }
		
		//DeclareParents
		public RuleCall getDeclaredParentsDeclareParentsParserRuleCall_3_1_0() { return cDeclaredParentsDeclareParentsParserRuleCall_3_1_0; }
		
		//advises+=Advise
		public Assignment getAdvisesAssignment_3_2() { return cAdvisesAssignment_3_2; }
		
		//Advise
		public RuleCall getAdvisesAdviseParserRuleCall_3_2_0() { return cAdvisesAdviseParserRuleCall_3_2_0; }
		
		//'</aop:aspect>'
		public Keyword getAopAspectKeyword_4() { return cAopAspectKeyword_4; }
	}
	public class DeclareParentsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.DeclareParents");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAopDeclareParentsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cTypesMatchingKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cTypeMatchingAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cTypeMatchingValidStringParserRuleCall_1_0_1_0 = (RuleCall)cTypeMatchingAssignment_1_0_1.eContents().get(0);
		private final Assignment cImplementInterfaceAssignment_1_1 = (Assignment)cUnorderedGroup_1.eContents().get(1);
		private final RuleCall cImplementInterfaceAopImplInterfaceParserRuleCall_1_1_0 = (RuleCall)cImplementInterfaceAssignment_1_1.eContents().get(0);
		private final Alternatives cAlternatives_1_2 = (Alternatives)cUnorderedGroup_1.eContents().get(2);
		private final Assignment cDefaultImplInterfaceAssignment_1_2_0 = (Assignment)cAlternatives_1_2.eContents().get(0);
		private final RuleCall cDefaultImplInterfaceAopDefaultImplInterfaceParserRuleCall_1_2_0_0 = (RuleCall)cDefaultImplInterfaceAssignment_1_2_0.eContents().get(0);
		private final Assignment cDelegateImplRefAssignment_1_2_1 = (Assignment)cAlternatives_1_2.eContents().get(1);
		private final RuleCall cDelegateImplRefAopDelegateImplRefParserRuleCall_1_2_1_0 = (RuleCall)cDelegateImplRefAssignment_1_2_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cSolidusGreaterThanSignKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cAopDeclareParentsKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		
		///* Introductions
		// * Allows this aspect to introduce additional interfaces that the 
		// advised object will transparently implement. */ DeclareParents:
		//	'<aop:declare-parents' ('types-matching=' typeMatching=ValidString & implementInterface=AopImplInterface &
		//	(defaultImplInterface=AopDefaultImplInterface | delegateImplRef=AopDelegateImplRef)) ('/>' | '>'
		//	'</aop:declare-parents>');
		@Override public ParserRule getRule() { return rule; }
		
		//'<aop:declare-parents' ('types-matching=' typeMatching=ValidString & implementInterface=AopImplInterface &
		//(defaultImplInterface=AopDefaultImplInterface | delegateImplRef=AopDelegateImplRef)) ('/>' | '>'
		//'</aop:declare-parents>')
		public Group getGroup() { return cGroup; }
		
		//'<aop:declare-parents'
		public Keyword getAopDeclareParentsKeyword_0() { return cAopDeclareParentsKeyword_0; }
		
		//'types-matching=' typeMatching=ValidString & implementInterface=AopImplInterface &
		//(defaultImplInterface=AopDefaultImplInterface | delegateImplRef=AopDelegateImplRef)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//'types-matching=' typeMatching=ValidString
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'types-matching='
		public Keyword getTypesMatchingKeyword_1_0_0() { return cTypesMatchingKeyword_1_0_0; }
		
		//typeMatching=ValidString
		public Assignment getTypeMatchingAssignment_1_0_1() { return cTypeMatchingAssignment_1_0_1; }
		
		//ValidString
		public RuleCall getTypeMatchingValidStringParserRuleCall_1_0_1_0() { return cTypeMatchingValidStringParserRuleCall_1_0_1_0; }
		
		//implementInterface=AopImplInterface
		public Assignment getImplementInterfaceAssignment_1_1() { return cImplementInterfaceAssignment_1_1; }
		
		//AopImplInterface
		public RuleCall getImplementInterfaceAopImplInterfaceParserRuleCall_1_1_0() { return cImplementInterfaceAopImplInterfaceParserRuleCall_1_1_0; }
		
		//(defaultImplInterface=AopDefaultImplInterface | delegateImplRef=AopDelegateImplRef)
		public Alternatives getAlternatives_1_2() { return cAlternatives_1_2; }
		
		//defaultImplInterface=AopDefaultImplInterface
		public Assignment getDefaultImplInterfaceAssignment_1_2_0() { return cDefaultImplInterfaceAssignment_1_2_0; }
		
		//AopDefaultImplInterface
		public RuleCall getDefaultImplInterfaceAopDefaultImplInterfaceParserRuleCall_1_2_0_0() { return cDefaultImplInterfaceAopDefaultImplInterfaceParserRuleCall_1_2_0_0; }
		
		//delegateImplRef=AopDelegateImplRef
		public Assignment getDelegateImplRefAssignment_1_2_1() { return cDelegateImplRefAssignment_1_2_1; }
		
		//AopDelegateImplRef
		public RuleCall getDelegateImplRefAopDelegateImplRefParserRuleCall_1_2_1_0() { return cDelegateImplRefAopDelegateImplRefParserRuleCall_1_2_1_0; }
		
		//'/>' | '>' '</aop:declare-parents>'
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_2_0() { return cSolidusGreaterThanSignKeyword_2_0; }
		
		//'>' '</aop:declare-parents>'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_1_0() { return cGreaterThanSignKeyword_2_1_0; }
		
		//'</aop:declare-parents>'
		public Keyword getAopDeclareParentsKeyword_2_1_1() { return cAopDeclareParentsKeyword_2_1_1; }
	}
	public class AopImplInterfaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.AopImplInterface");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImplementInterfaceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameValidStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		///**The fully qualified name of the interface that will be introduced. */ AopImplInterface Interface:
		//	'implement-interface=' name=ValidString;
		@Override public ParserRule getRule() { return rule; }
		
		//'implement-interface=' name=ValidString
		public Group getGroup() { return cGroup; }
		
		//'implement-interface='
		public Keyword getImplementInterfaceKeyword_0() { return cImplementInterfaceKeyword_0; }
		
		//name=ValidString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ValidString
		public RuleCall getNameValidStringParserRuleCall_1_0() { return cNameValidStringParserRuleCall_1_0; }
	}
	public class AopDefaultImplInterfaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.AopDefaultImplInterface");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDefaultImplKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameValidStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		///*The fully qualified name of the interface that will be introduced. */ AopDefaultImplInterface:
		//	'default-impl=' name=ValidString;
		@Override public ParserRule getRule() { return rule; }
		
		//'default-impl=' name=ValidString
		public Group getGroup() { return cGroup; }
		
		//'default-impl='
		public Keyword getDefaultImplKeyword_0() { return cDefaultImplKeyword_0; }
		
		//name=ValidString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ValidString
		public RuleCall getNameValidStringParserRuleCall_1_0() { return cNameValidStringParserRuleCall_1_0; }
	}
	public class AopDelegateImplRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.AopDelegateImplRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDelegateRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRefComponentCrossReference_1_0 = (CrossReference)cRefAssignment_1.eContents().get(0);
		private final RuleCall cRefComponentValidStringParserRuleCall_1_0_1 = (RuleCall)cRefComponentCrossReference_1_0.eContents().get(1);
		
		///*A reference to the bean that will serve as the default implementation of the introduced 
		// interface. */ AopDelegateImplRef:
		//	'delegate-ref=' ref=[Component|ValidString];
		@Override public ParserRule getRule() { return rule; }
		
		//'delegate-ref=' ref=[Component|ValidString]
		public Group getGroup() { return cGroup; }
		
		//'delegate-ref='
		public Keyword getDelegateRefKeyword_0() { return cDelegateRefKeyword_0; }
		
		//ref=[Component|ValidString]
		public Assignment getRefAssignment_1() { return cRefAssignment_1; }
		
		//[Component|ValidString]
		public CrossReference getRefComponentCrossReference_1_0() { return cRefComponentCrossReference_1_0; }
		
		//ValidString
		public RuleCall getRefComponentValidStringParserRuleCall_1_0_1() { return cRefComponentValidStringParserRuleCall_1_0_1; }
	}
	public class AdviseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.Advise");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBeforeAdviseParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAfterAdviseParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAroundAdviseParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cAfterReturningParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cAfterThowingParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//Advise:
		//	BeforeAdvise | AfterAdvise | AroundAdvise | AfterReturning | AfterThowing;
		@Override public ParserRule getRule() { return rule; }
		
		//BeforeAdvise | AfterAdvise | AroundAdvise | AfterReturning | AfterThowing
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BeforeAdvise
		public RuleCall getBeforeAdviseParserRuleCall_0() { return cBeforeAdviseParserRuleCall_0; }
		
		//AfterAdvise
		public RuleCall getAfterAdviseParserRuleCall_1() { return cAfterAdviseParserRuleCall_1; }
		
		//AroundAdvise
		public RuleCall getAroundAdviseParserRuleCall_2() { return cAroundAdviseParserRuleCall_2; }
		
		//AfterReturning
		public RuleCall getAfterReturningParserRuleCall_3() { return cAfterReturningParserRuleCall_3; }
		
		//AfterThowing
		public RuleCall getAfterThowingParserRuleCall_4() { return cAfterThowingParserRuleCall_4; }
	}
	public class BeforeAdviseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.BeforeAdvise");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAopBeforeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cUnorderedGroup_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cAlternatives_1_0.eContents().get(0);
		private final Keyword cPointcutRefKeyword_1_0_0_0 = (Keyword)cGroup_1_0_0.eContents().get(0);
		private final Assignment cPointcutRefAssignment_1_0_0_1 = (Assignment)cGroup_1_0_0.eContents().get(1);
		private final CrossReference cPointcutRefAopPointcutCrossReference_1_0_0_1_0 = (CrossReference)cPointcutRefAssignment_1_0_0_1.eContents().get(0);
		private final RuleCall cPointcutRefAopPointcutValidStringParserRuleCall_1_0_0_1_0_1 = (RuleCall)cPointcutRefAopPointcutCrossReference_1_0_0_1_0.eContents().get(1);
		private final Group cGroup_1_0_1 = (Group)cAlternatives_1_0.eContents().get(1);
		private final Keyword cPointcutKeyword_1_0_1_0 = (Keyword)cGroup_1_0_1.eContents().get(0);
		private final Assignment cPointcutExpressionAssignment_1_0_1_1 = (Assignment)cGroup_1_0_1.eContents().get(1);
		private final RuleCall cPointcutExpressionValidStringParserRuleCall_1_0_1_1_0 = (RuleCall)cPointcutExpressionAssignment_1_0_1_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cMethodKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cMethodAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cMethodValidStringParserRuleCall_1_1_1_0 = (RuleCall)cMethodAssignment_1_1_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cSolidusGreaterThanSignKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cAopBeforeKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		
		//BeforeAdvise:
		//	'<aop:before' (('pointcut-ref=' pointcutRef=[AopPointcut|ValidString] | 'pointcut=' PointcutExpression=ValidString) &
		//	'method=' method=ValidString) ('/>' | '>' '</aop:before>');
		@Override public ParserRule getRule() { return rule; }
		
		//'<aop:before' (('pointcut-ref=' pointcutRef=[AopPointcut|ValidString] | 'pointcut=' PointcutExpression=ValidString) &
		//'method=' method=ValidString) ('/>' | '>' '</aop:before>')
		public Group getGroup() { return cGroup; }
		
		//'<aop:before'
		public Keyword getAopBeforeKeyword_0() { return cAopBeforeKeyword_0; }
		
		//('pointcut-ref=' pointcutRef=[AopPointcut|ValidString] | 'pointcut=' PointcutExpression=ValidString) & 'method='
		//method=ValidString
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//('pointcut-ref=' pointcutRef=[AopPointcut|ValidString] | 'pointcut=' PointcutExpression=ValidString)
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }
		
		//'pointcut-ref=' pointcutRef=[AopPointcut|ValidString]
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }
		
		//'pointcut-ref='
		public Keyword getPointcutRefKeyword_1_0_0_0() { return cPointcutRefKeyword_1_0_0_0; }
		
		//pointcutRef=[AopPointcut|ValidString]
		public Assignment getPointcutRefAssignment_1_0_0_1() { return cPointcutRefAssignment_1_0_0_1; }
		
		//[AopPointcut|ValidString]
		public CrossReference getPointcutRefAopPointcutCrossReference_1_0_0_1_0() { return cPointcutRefAopPointcutCrossReference_1_0_0_1_0; }
		
		//ValidString
		public RuleCall getPointcutRefAopPointcutValidStringParserRuleCall_1_0_0_1_0_1() { return cPointcutRefAopPointcutValidStringParserRuleCall_1_0_0_1_0_1; }
		
		//'pointcut=' PointcutExpression=ValidString
		public Group getGroup_1_0_1() { return cGroup_1_0_1; }
		
		//'pointcut='
		public Keyword getPointcutKeyword_1_0_1_0() { return cPointcutKeyword_1_0_1_0; }
		
		//PointcutExpression=ValidString
		public Assignment getPointcutExpressionAssignment_1_0_1_1() { return cPointcutExpressionAssignment_1_0_1_1; }
		
		//ValidString
		public RuleCall getPointcutExpressionValidStringParserRuleCall_1_0_1_1_0() { return cPointcutExpressionValidStringParserRuleCall_1_0_1_1_0; }
		
		//'method=' method=ValidString
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'method='
		public Keyword getMethodKeyword_1_1_0() { return cMethodKeyword_1_1_0; }
		
		//method=ValidString
		public Assignment getMethodAssignment_1_1_1() { return cMethodAssignment_1_1_1; }
		
		//ValidString
		public RuleCall getMethodValidStringParserRuleCall_1_1_1_0() { return cMethodValidStringParserRuleCall_1_1_1_0; }
		
		//'/>' | '>' '</aop:before>'
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_2_0() { return cSolidusGreaterThanSignKeyword_2_0; }
		
		//'>' '</aop:before>'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_1_0() { return cGreaterThanSignKeyword_2_1_0; }
		
		//'</aop:before>'
		public Keyword getAopBeforeKeyword_2_1_1() { return cAopBeforeKeyword_2_1_1; }
	}
	public class AfterAdviseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.AfterAdvise");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAopAfterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cUnorderedGroup_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cAlternatives_1_0.eContents().get(0);
		private final Keyword cPointcutRefKeyword_1_0_0_0 = (Keyword)cGroup_1_0_0.eContents().get(0);
		private final Assignment cPointcutRefAssignment_1_0_0_1 = (Assignment)cGroup_1_0_0.eContents().get(1);
		private final CrossReference cPointcutRefAopPointcutCrossReference_1_0_0_1_0 = (CrossReference)cPointcutRefAssignment_1_0_0_1.eContents().get(0);
		private final RuleCall cPointcutRefAopPointcutValidStringParserRuleCall_1_0_0_1_0_1 = (RuleCall)cPointcutRefAopPointcutCrossReference_1_0_0_1_0.eContents().get(1);
		private final Group cGroup_1_0_1 = (Group)cAlternatives_1_0.eContents().get(1);
		private final Keyword cPointcutKeyword_1_0_1_0 = (Keyword)cGroup_1_0_1.eContents().get(0);
		private final Assignment cPointcutExpressionAssignment_1_0_1_1 = (Assignment)cGroup_1_0_1.eContents().get(1);
		private final RuleCall cPointcutExpressionValidStringParserRuleCall_1_0_1_1_0 = (RuleCall)cPointcutExpressionAssignment_1_0_1_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cMethodKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cMethodAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cMethodValidStringParserRuleCall_1_1_1_0 = (RuleCall)cMethodAssignment_1_1_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cSolidusGreaterThanSignKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cAopAfterKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		
		//AfterAdvise:
		//	'<aop:after' (('pointcut-ref=' pointcutRef=[AopPointcut|ValidString] | 'pointcut=' PointcutExpression=ValidString) &
		//	'method=' method=ValidString) ('/>' | '>' '</aop:after>');
		@Override public ParserRule getRule() { return rule; }
		
		//'<aop:after' (('pointcut-ref=' pointcutRef=[AopPointcut|ValidString] | 'pointcut=' PointcutExpression=ValidString) &
		//'method=' method=ValidString) ('/>' | '>' '</aop:after>')
		public Group getGroup() { return cGroup; }
		
		//'<aop:after'
		public Keyword getAopAfterKeyword_0() { return cAopAfterKeyword_0; }
		
		//('pointcut-ref=' pointcutRef=[AopPointcut|ValidString] | 'pointcut=' PointcutExpression=ValidString) & 'method='
		//method=ValidString
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//('pointcut-ref=' pointcutRef=[AopPointcut|ValidString] | 'pointcut=' PointcutExpression=ValidString)
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }
		
		//'pointcut-ref=' pointcutRef=[AopPointcut|ValidString]
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }
		
		//'pointcut-ref='
		public Keyword getPointcutRefKeyword_1_0_0_0() { return cPointcutRefKeyword_1_0_0_0; }
		
		//pointcutRef=[AopPointcut|ValidString]
		public Assignment getPointcutRefAssignment_1_0_0_1() { return cPointcutRefAssignment_1_0_0_1; }
		
		//[AopPointcut|ValidString]
		public CrossReference getPointcutRefAopPointcutCrossReference_1_0_0_1_0() { return cPointcutRefAopPointcutCrossReference_1_0_0_1_0; }
		
		//ValidString
		public RuleCall getPointcutRefAopPointcutValidStringParserRuleCall_1_0_0_1_0_1() { return cPointcutRefAopPointcutValidStringParserRuleCall_1_0_0_1_0_1; }
		
		//'pointcut=' PointcutExpression=ValidString
		public Group getGroup_1_0_1() { return cGroup_1_0_1; }
		
		//'pointcut='
		public Keyword getPointcutKeyword_1_0_1_0() { return cPointcutKeyword_1_0_1_0; }
		
		//PointcutExpression=ValidString
		public Assignment getPointcutExpressionAssignment_1_0_1_1() { return cPointcutExpressionAssignment_1_0_1_1; }
		
		//ValidString
		public RuleCall getPointcutExpressionValidStringParserRuleCall_1_0_1_1_0() { return cPointcutExpressionValidStringParserRuleCall_1_0_1_1_0; }
		
		//'method=' method=ValidString
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'method='
		public Keyword getMethodKeyword_1_1_0() { return cMethodKeyword_1_1_0; }
		
		//method=ValidString
		public Assignment getMethodAssignment_1_1_1() { return cMethodAssignment_1_1_1; }
		
		//ValidString
		public RuleCall getMethodValidStringParserRuleCall_1_1_1_0() { return cMethodValidStringParserRuleCall_1_1_1_0; }
		
		//'/>' | '>' '</aop:after>'
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_2_0() { return cSolidusGreaterThanSignKeyword_2_0; }
		
		//'>' '</aop:after>'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_1_0() { return cGreaterThanSignKeyword_2_1_0; }
		
		//'</aop:after>'
		public Keyword getAopAfterKeyword_2_1_1() { return cAopAfterKeyword_2_1_1; }
	}
	public class AroundAdviseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.AroundAdvise");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAopAroundKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cUnorderedGroup_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cAlternatives_1_0.eContents().get(0);
		private final Keyword cPointcutRefKeyword_1_0_0_0 = (Keyword)cGroup_1_0_0.eContents().get(0);
		private final Assignment cPointcutRefAssignment_1_0_0_1 = (Assignment)cGroup_1_0_0.eContents().get(1);
		private final CrossReference cPointcutRefAopPointcutCrossReference_1_0_0_1_0 = (CrossReference)cPointcutRefAssignment_1_0_0_1.eContents().get(0);
		private final RuleCall cPointcutRefAopPointcutValidStringParserRuleCall_1_0_0_1_0_1 = (RuleCall)cPointcutRefAopPointcutCrossReference_1_0_0_1_0.eContents().get(1);
		private final Group cGroup_1_0_1 = (Group)cAlternatives_1_0.eContents().get(1);
		private final Keyword cPointcutKeyword_1_0_1_0 = (Keyword)cGroup_1_0_1.eContents().get(0);
		private final Assignment cPointcutExpressionAssignment_1_0_1_1 = (Assignment)cGroup_1_0_1.eContents().get(1);
		private final RuleCall cPointcutExpressionValidStringParserRuleCall_1_0_1_1_0 = (RuleCall)cPointcutExpressionAssignment_1_0_1_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cMethodKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cMethodAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cMethodValidStringParserRuleCall_1_1_1_0 = (RuleCall)cMethodAssignment_1_1_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cSolidusGreaterThanSignKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cAopAroundKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		
		//AroundAdvise:
		//	'<aop:around' (('pointcut-ref=' pointcutRef=[AopPointcut|ValidString] | 'pointcut=' PointcutExpression=ValidString) &
		//	'method=' method=ValidString) ('/>' | '>' '</aop:around>');
		@Override public ParserRule getRule() { return rule; }
		
		//'<aop:around' (('pointcut-ref=' pointcutRef=[AopPointcut|ValidString] | 'pointcut=' PointcutExpression=ValidString) &
		//'method=' method=ValidString) ('/>' | '>' '</aop:around>')
		public Group getGroup() { return cGroup; }
		
		//'<aop:around'
		public Keyword getAopAroundKeyword_0() { return cAopAroundKeyword_0; }
		
		//('pointcut-ref=' pointcutRef=[AopPointcut|ValidString] | 'pointcut=' PointcutExpression=ValidString) & 'method='
		//method=ValidString
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//('pointcut-ref=' pointcutRef=[AopPointcut|ValidString] | 'pointcut=' PointcutExpression=ValidString)
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }
		
		//'pointcut-ref=' pointcutRef=[AopPointcut|ValidString]
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }
		
		//'pointcut-ref='
		public Keyword getPointcutRefKeyword_1_0_0_0() { return cPointcutRefKeyword_1_0_0_0; }
		
		//pointcutRef=[AopPointcut|ValidString]
		public Assignment getPointcutRefAssignment_1_0_0_1() { return cPointcutRefAssignment_1_0_0_1; }
		
		//[AopPointcut|ValidString]
		public CrossReference getPointcutRefAopPointcutCrossReference_1_0_0_1_0() { return cPointcutRefAopPointcutCrossReference_1_0_0_1_0; }
		
		//ValidString
		public RuleCall getPointcutRefAopPointcutValidStringParserRuleCall_1_0_0_1_0_1() { return cPointcutRefAopPointcutValidStringParserRuleCall_1_0_0_1_0_1; }
		
		//'pointcut=' PointcutExpression=ValidString
		public Group getGroup_1_0_1() { return cGroup_1_0_1; }
		
		//'pointcut='
		public Keyword getPointcutKeyword_1_0_1_0() { return cPointcutKeyword_1_0_1_0; }
		
		//PointcutExpression=ValidString
		public Assignment getPointcutExpressionAssignment_1_0_1_1() { return cPointcutExpressionAssignment_1_0_1_1; }
		
		//ValidString
		public RuleCall getPointcutExpressionValidStringParserRuleCall_1_0_1_1_0() { return cPointcutExpressionValidStringParserRuleCall_1_0_1_1_0; }
		
		//'method=' method=ValidString
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'method='
		public Keyword getMethodKeyword_1_1_0() { return cMethodKeyword_1_1_0; }
		
		//method=ValidString
		public Assignment getMethodAssignment_1_1_1() { return cMethodAssignment_1_1_1; }
		
		//ValidString
		public RuleCall getMethodValidStringParserRuleCall_1_1_1_0() { return cMethodValidStringParserRuleCall_1_1_1_0; }
		
		//'/>' | '>' '</aop:around>'
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_2_0() { return cSolidusGreaterThanSignKeyword_2_0; }
		
		//'>' '</aop:around>'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_1_0() { return cGreaterThanSignKeyword_2_1_0; }
		
		//'</aop:around>'
		public Keyword getAopAroundKeyword_2_1_1() { return cAopAroundKeyword_2_1_1; }
	}
	public class AfterReturningElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.AfterReturning");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAopAfterReturningKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cUnorderedGroup_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cAlternatives_1_0.eContents().get(0);
		private final Keyword cPointcutRefKeyword_1_0_0_0 = (Keyword)cGroup_1_0_0.eContents().get(0);
		private final Assignment cPointcutRefAssignment_1_0_0_1 = (Assignment)cGroup_1_0_0.eContents().get(1);
		private final CrossReference cPointcutRefAopPointcutCrossReference_1_0_0_1_0 = (CrossReference)cPointcutRefAssignment_1_0_0_1.eContents().get(0);
		private final RuleCall cPointcutRefAopPointcutValidStringParserRuleCall_1_0_0_1_0_1 = (RuleCall)cPointcutRefAopPointcutCrossReference_1_0_0_1_0.eContents().get(1);
		private final Group cGroup_1_0_1 = (Group)cAlternatives_1_0.eContents().get(1);
		private final Keyword cPointcutKeyword_1_0_1_0 = (Keyword)cGroup_1_0_1.eContents().get(0);
		private final Assignment cPointcutExpressionAssignment_1_0_1_1 = (Assignment)cGroup_1_0_1.eContents().get(1);
		private final RuleCall cPointcutExpressionValidStringParserRuleCall_1_0_1_1_0 = (RuleCall)cPointcutExpressionAssignment_1_0_1_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cMethodKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cMethodAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cMethodValidStringParserRuleCall_1_1_1_0 = (RuleCall)cMethodAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cReturningKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cReturningValueAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cReturningValueValidStringParserRuleCall_1_2_1_0 = (RuleCall)cReturningValueAssignment_1_2_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cSolidusGreaterThanSignKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cAopAfterReturningKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		
		//AfterReturning:
		//	'<aop:after-returning' (('pointcut-ref=' pointcutRef=[AopPointcut|ValidString] | 'pointcut='
		//	PointcutExpression=ValidString) & 'method=' method=ValidString & 'returning=' returningValue=ValidString) ('/>' | '>'
		//	'</aop:after-returning>');
		@Override public ParserRule getRule() { return rule; }
		
		//'<aop:after-returning' (('pointcut-ref=' pointcutRef=[AopPointcut|ValidString] | 'pointcut='
		//PointcutExpression=ValidString) & 'method=' method=ValidString & 'returning=' returningValue=ValidString) ('/>' | '>'
		//'</aop:after-returning>')
		public Group getGroup() { return cGroup; }
		
		//'<aop:after-returning'
		public Keyword getAopAfterReturningKeyword_0() { return cAopAfterReturningKeyword_0; }
		
		//('pointcut-ref=' pointcutRef=[AopPointcut|ValidString] | 'pointcut=' PointcutExpression=ValidString) & 'method='
		//method=ValidString & 'returning=' returningValue=ValidString
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//('pointcut-ref=' pointcutRef=[AopPointcut|ValidString] | 'pointcut=' PointcutExpression=ValidString)
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }
		
		//'pointcut-ref=' pointcutRef=[AopPointcut|ValidString]
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }
		
		//'pointcut-ref='
		public Keyword getPointcutRefKeyword_1_0_0_0() { return cPointcutRefKeyword_1_0_0_0; }
		
		//pointcutRef=[AopPointcut|ValidString]
		public Assignment getPointcutRefAssignment_1_0_0_1() { return cPointcutRefAssignment_1_0_0_1; }
		
		//[AopPointcut|ValidString]
		public CrossReference getPointcutRefAopPointcutCrossReference_1_0_0_1_0() { return cPointcutRefAopPointcutCrossReference_1_0_0_1_0; }
		
		//ValidString
		public RuleCall getPointcutRefAopPointcutValidStringParserRuleCall_1_0_0_1_0_1() { return cPointcutRefAopPointcutValidStringParserRuleCall_1_0_0_1_0_1; }
		
		//'pointcut=' PointcutExpression=ValidString
		public Group getGroup_1_0_1() { return cGroup_1_0_1; }
		
		//'pointcut='
		public Keyword getPointcutKeyword_1_0_1_0() { return cPointcutKeyword_1_0_1_0; }
		
		//PointcutExpression=ValidString
		public Assignment getPointcutExpressionAssignment_1_0_1_1() { return cPointcutExpressionAssignment_1_0_1_1; }
		
		//ValidString
		public RuleCall getPointcutExpressionValidStringParserRuleCall_1_0_1_1_0() { return cPointcutExpressionValidStringParserRuleCall_1_0_1_1_0; }
		
		//'method=' method=ValidString
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'method='
		public Keyword getMethodKeyword_1_1_0() { return cMethodKeyword_1_1_0; }
		
		//method=ValidString
		public Assignment getMethodAssignment_1_1_1() { return cMethodAssignment_1_1_1; }
		
		//ValidString
		public RuleCall getMethodValidStringParserRuleCall_1_1_1_0() { return cMethodValidStringParserRuleCall_1_1_1_0; }
		
		//'returning=' returningValue=ValidString
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'returning='
		public Keyword getReturningKeyword_1_2_0() { return cReturningKeyword_1_2_0; }
		
		//returningValue=ValidString
		public Assignment getReturningValueAssignment_1_2_1() { return cReturningValueAssignment_1_2_1; }
		
		//ValidString
		public RuleCall getReturningValueValidStringParserRuleCall_1_2_1_0() { return cReturningValueValidStringParserRuleCall_1_2_1_0; }
		
		//'/>' | '>' '</aop:after-returning>'
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_2_0() { return cSolidusGreaterThanSignKeyword_2_0; }
		
		//'>' '</aop:after-returning>'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_1_0() { return cGreaterThanSignKeyword_2_1_0; }
		
		//'</aop:after-returning>'
		public Keyword getAopAfterReturningKeyword_2_1_1() { return cAopAfterReturningKeyword_2_1_1; }
	}
	public class AfterThowingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.AfterThowing");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAopAfterThrowingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cUnorderedGroup_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cAlternatives_1_0.eContents().get(0);
		private final Keyword cPointcutRefKeyword_1_0_0_0 = (Keyword)cGroup_1_0_0.eContents().get(0);
		private final Assignment cPointcutRefAssignment_1_0_0_1 = (Assignment)cGroup_1_0_0.eContents().get(1);
		private final CrossReference cPointcutRefAopPointcutCrossReference_1_0_0_1_0 = (CrossReference)cPointcutRefAssignment_1_0_0_1.eContents().get(0);
		private final RuleCall cPointcutRefAopPointcutValidStringParserRuleCall_1_0_0_1_0_1 = (RuleCall)cPointcutRefAopPointcutCrossReference_1_0_0_1_0.eContents().get(1);
		private final Group cGroup_1_0_1 = (Group)cAlternatives_1_0.eContents().get(1);
		private final Keyword cPointcutKeyword_1_0_1_0 = (Keyword)cGroup_1_0_1.eContents().get(0);
		private final Assignment cPointcutExpressionAssignment_1_0_1_1 = (Assignment)cGroup_1_0_1.eContents().get(1);
		private final RuleCall cPointcutExpressionValidStringParserRuleCall_1_0_1_1_0 = (RuleCall)cPointcutExpressionAssignment_1_0_1_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cMethodKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cMethodAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cMethodValidStringParserRuleCall_1_1_1_0 = (RuleCall)cMethodAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cThrowingKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cThrowingValueAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cThrowingValueValidStringParserRuleCall_1_2_1_0 = (RuleCall)cThrowingValueAssignment_1_2_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cSolidusGreaterThanSignKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cAopAfterThrowingKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		
		//AfterThowing:
		//	'<aop:after-throwing' (('pointcut-ref=' pointcutRef=[AopPointcut|ValidString] | 'pointcut='
		//	PointcutExpression=ValidString) & 'method=' method=ValidString & 'throwing=' throwingValue=ValidString) ('/>' | '>'
		//	'</aop:after-throwing>');
		@Override public ParserRule getRule() { return rule; }
		
		//'<aop:after-throwing' (('pointcut-ref=' pointcutRef=[AopPointcut|ValidString] | 'pointcut='
		//PointcutExpression=ValidString) & 'method=' method=ValidString & 'throwing=' throwingValue=ValidString) ('/>' | '>'
		//'</aop:after-throwing>')
		public Group getGroup() { return cGroup; }
		
		//'<aop:after-throwing'
		public Keyword getAopAfterThrowingKeyword_0() { return cAopAfterThrowingKeyword_0; }
		
		//('pointcut-ref=' pointcutRef=[AopPointcut|ValidString] | 'pointcut=' PointcutExpression=ValidString) & 'method='
		//method=ValidString & 'throwing=' throwingValue=ValidString
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//('pointcut-ref=' pointcutRef=[AopPointcut|ValidString] | 'pointcut=' PointcutExpression=ValidString)
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }
		
		//'pointcut-ref=' pointcutRef=[AopPointcut|ValidString]
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }
		
		//'pointcut-ref='
		public Keyword getPointcutRefKeyword_1_0_0_0() { return cPointcutRefKeyword_1_0_0_0; }
		
		//pointcutRef=[AopPointcut|ValidString]
		public Assignment getPointcutRefAssignment_1_0_0_1() { return cPointcutRefAssignment_1_0_0_1; }
		
		//[AopPointcut|ValidString]
		public CrossReference getPointcutRefAopPointcutCrossReference_1_0_0_1_0() { return cPointcutRefAopPointcutCrossReference_1_0_0_1_0; }
		
		//ValidString
		public RuleCall getPointcutRefAopPointcutValidStringParserRuleCall_1_0_0_1_0_1() { return cPointcutRefAopPointcutValidStringParserRuleCall_1_0_0_1_0_1; }
		
		//'pointcut=' PointcutExpression=ValidString
		public Group getGroup_1_0_1() { return cGroup_1_0_1; }
		
		//'pointcut='
		public Keyword getPointcutKeyword_1_0_1_0() { return cPointcutKeyword_1_0_1_0; }
		
		//PointcutExpression=ValidString
		public Assignment getPointcutExpressionAssignment_1_0_1_1() { return cPointcutExpressionAssignment_1_0_1_1; }
		
		//ValidString
		public RuleCall getPointcutExpressionValidStringParserRuleCall_1_0_1_1_0() { return cPointcutExpressionValidStringParserRuleCall_1_0_1_1_0; }
		
		//'method=' method=ValidString
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'method='
		public Keyword getMethodKeyword_1_1_0() { return cMethodKeyword_1_1_0; }
		
		//method=ValidString
		public Assignment getMethodAssignment_1_1_1() { return cMethodAssignment_1_1_1; }
		
		//ValidString
		public RuleCall getMethodValidStringParserRuleCall_1_1_1_0() { return cMethodValidStringParserRuleCall_1_1_1_0; }
		
		//'throwing=' throwingValue=ValidString
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'throwing='
		public Keyword getThrowingKeyword_1_2_0() { return cThrowingKeyword_1_2_0; }
		
		//throwingValue=ValidString
		public Assignment getThrowingValueAssignment_1_2_1() { return cThrowingValueAssignment_1_2_1; }
		
		//ValidString
		public RuleCall getThrowingValueValidStringParserRuleCall_1_2_1_0() { return cThrowingValueValidStringParserRuleCall_1_2_1_0; }
		
		//'/>' | '>' '</aop:after-throwing>'
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_2_0() { return cSolidusGreaterThanSignKeyword_2_0; }
		
		//'>' '</aop:after-throwing>'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_1_0() { return cGreaterThanSignKeyword_2_1_0; }
		
		//'</aop:after-throwing>'
		public Keyword getAopAfterThrowingKeyword_2_1_1() { return cAopAfterThrowingKeyword_2_1_1; }
	}
	public class TxAdviseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.TxAdvise");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTxAdviceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cIdKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cNameAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cNameValidStringParserRuleCall_1_0_1_0 = (RuleCall)cNameAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cTransactionManagerKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cTransactionManagerAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cTransactionManagerValidStringParserRuleCall_1_1_1_0 = (RuleCall)cTransactionManagerAssignment_1_1_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTxAttributeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTxAttributeTxAttributeParserRuleCall_3_0 = (RuleCall)cTxAttributeAssignment_3.eContents().get(0);
		private final Keyword cTxAdviceKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//TxAdvise:
		//	'<tx:advice' ('id=' name=ValidString & ('transaction-manager=' transactionManager=ValidString)? //Default value="transactionManager"
		//)
		//	'>'
		//	txAttribute=TxAttribute?
		//	'</tx:advice>';
		@Override public ParserRule getRule() { return rule; }
		
		//'<tx:advice' ('id=' name=ValidString & ('transaction-manager=' transactionManager=ValidString)? //Default value="transactionManager"
		//) '>' txAttribute=TxAttribute? '</tx:advice>'
		public Group getGroup() { return cGroup; }
		
		//'<tx:advice'
		public Keyword getTxAdviceKeyword_0() { return cTxAdviceKeyword_0; }
		
		//'id=' name=ValidString & ('transaction-manager=' transactionManager=ValidString)?
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//'id=' name=ValidString
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'id='
		public Keyword getIdKeyword_1_0_0() { return cIdKeyword_1_0_0; }
		
		//name=ValidString
		public Assignment getNameAssignment_1_0_1() { return cNameAssignment_1_0_1; }
		
		//ValidString
		public RuleCall getNameValidStringParserRuleCall_1_0_1_0() { return cNameValidStringParserRuleCall_1_0_1_0; }
		
		//('transaction-manager=' transactionManager=ValidString)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'transaction-manager='
		public Keyword getTransactionManagerKeyword_1_1_0() { return cTransactionManagerKeyword_1_1_0; }
		
		//transactionManager=ValidString
		public Assignment getTransactionManagerAssignment_1_1_1() { return cTransactionManagerAssignment_1_1_1; }
		
		//ValidString
		public RuleCall getTransactionManagerValidStringParserRuleCall_1_1_1_0() { return cTransactionManagerValidStringParserRuleCall_1_1_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2() { return cGreaterThanSignKeyword_2; }
		
		//txAttribute=TxAttribute?
		public Assignment getTxAttributeAssignment_3() { return cTxAttributeAssignment_3; }
		
		//TxAttribute
		public RuleCall getTxAttributeTxAttributeParserRuleCall_3_0() { return cTxAttributeTxAttributeParserRuleCall_3_0; }
		
		//'</tx:advice>'
		public Keyword getTxAdviceKeyword_4() { return cTxAdviceKeyword_4; }
	}
	public class TxAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.TxAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTxAttributeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTxAttributesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTxMethodsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTxMethodsTxMethodParserRuleCall_3_0 = (RuleCall)cTxMethodsAssignment_3.eContents().get(0);
		private final Keyword cTxAttributesKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//TxAttribute:
		//	{TxAttribute}
		//	'<tx:attributes' '>'
		//	txMethods+=TxMethod+
		//	'</tx:attributes>';
		@Override public ParserRule getRule() { return rule; }
		
		//{TxAttribute} '<tx:attributes' '>' txMethods+=TxMethod+ '</tx:attributes>'
		public Group getGroup() { return cGroup; }
		
		//{TxAttribute}
		public Action getTxAttributeAction_0() { return cTxAttributeAction_0; }
		
		//'<tx:attributes'
		public Keyword getTxAttributesKeyword_1() { return cTxAttributesKeyword_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2() { return cGreaterThanSignKeyword_2; }
		
		//txMethods+=TxMethod+
		public Assignment getTxMethodsAssignment_3() { return cTxMethodsAssignment_3; }
		
		//TxMethod
		public RuleCall getTxMethodsTxMethodParserRuleCall_3_0() { return cTxMethodsTxMethodParserRuleCall_3_0; }
		
		//'</tx:attributes>'
		public Keyword getTxAttributesKeyword_4() { return cTxAttributesKeyword_4; }
	}
	public class TxMethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.TxMethod");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTxMethodKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cNameKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cNameAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cNameValidStringParserRuleCall_1_0_1_0 = (RuleCall)cNameAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cIsolationKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cIsolationAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cIsolationEnumIsolationEnumRuleCall_1_1_1_0 = (RuleCall)cIsolationAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cNoRollbackForKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cNoRollBackForAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cNoRollBackForValidStringParserRuleCall_1_2_1_0 = (RuleCall)cNoRollBackForAssignment_1_2_1.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cUnorderedGroup_1.eContents().get(3);
		private final Keyword cPropagationKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cPropagationAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cPropagationEnumIsolationEnumRuleCall_1_3_1_0 = (RuleCall)cPropagationAssignment_1_3_1.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cUnorderedGroup_1.eContents().get(4);
		private final Keyword cReadOnlyKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Assignment cReadOnlyAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final RuleCall cReadOnlySBooleanEnumRuleCall_1_4_1_0 = (RuleCall)cReadOnlyAssignment_1_4_1.eContents().get(0);
		private final Group cGroup_1_5 = (Group)cUnorderedGroup_1.eContents().get(5);
		private final Keyword cRollbackForKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final Assignment cRollbackForAssignment_1_5_1 = (Assignment)cGroup_1_5.eContents().get(1);
		private final RuleCall cRollbackForValidStringParserRuleCall_1_5_1_0 = (RuleCall)cRollbackForAssignment_1_5_1.eContents().get(0);
		private final Group cGroup_1_6 = (Group)cUnorderedGroup_1.eContents().get(6);
		private final Keyword cTimeoutKeyword_1_6_0 = (Keyword)cGroup_1_6.eContents().get(0);
		private final Assignment cTimeOutAssignment_1_6_1 = (Assignment)cGroup_1_6.eContents().get(1);
		private final RuleCall cTimeOutValidStringParserRuleCall_1_6_1_0 = (RuleCall)cTimeOutAssignment_1_6_1.eContents().get(0);
		
		//TxMethod:
		//	'<tx:method' ('name=' name=ValidString & ('isolation=' isolation=EnumIsolation)?
		//	& ('no-rollback-for=' noRollBackFor=ValidString)? //ref Exeption
		//	& ('propagation=' propagation=EnumIsolation)?
		//	& ('read-only=' readOnly=sBoolean)?
		//	& ('rollback-for=' rollbackFor=ValidString)? //ref Exeption
		//	& ('timeout=' timeOut=ValidString)? //int default value:-1
		//);
		@Override public ParserRule getRule() { return rule; }
		
		//'<tx:method' ('name=' name=ValidString & ('isolation=' isolation=EnumIsolation)? & ('no-rollback-for='
		//noRollBackFor=ValidString)? //ref Exeption
		//& ('propagation=' propagation=EnumIsolation)? & ('read-only=' readOnly=sBoolean)? & ('rollback-for='
		//rollbackFor=ValidString)? //ref Exeption
		//& ('timeout=' timeOut=ValidString)? //int default value:-1
		//)
		public Group getGroup() { return cGroup; }
		
		//'<tx:method'
		public Keyword getTxMethodKeyword_0() { return cTxMethodKeyword_0; }
		
		//'name=' name=ValidString & ('isolation=' isolation=EnumIsolation)? & ('no-rollback-for=' noRollBackFor=ValidString)? //ref Exeption
		//& ('propagation=' propagation=EnumIsolation)? & ('read-only=' readOnly=sBoolean)? & ('rollback-for='
		//rollbackFor=ValidString)? //ref Exeption
		//& ('timeout=' timeOut=ValidString)?
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//'name=' name=ValidString
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'name='
		public Keyword getNameKeyword_1_0_0() { return cNameKeyword_1_0_0; }
		
		//name=ValidString
		public Assignment getNameAssignment_1_0_1() { return cNameAssignment_1_0_1; }
		
		//ValidString
		public RuleCall getNameValidStringParserRuleCall_1_0_1_0() { return cNameValidStringParserRuleCall_1_0_1_0; }
		
		//('isolation=' isolation=EnumIsolation)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'isolation='
		public Keyword getIsolationKeyword_1_1_0() { return cIsolationKeyword_1_1_0; }
		
		//isolation=EnumIsolation
		public Assignment getIsolationAssignment_1_1_1() { return cIsolationAssignment_1_1_1; }
		
		//EnumIsolation
		public RuleCall getIsolationEnumIsolationEnumRuleCall_1_1_1_0() { return cIsolationEnumIsolationEnumRuleCall_1_1_1_0; }
		
		//('no-rollback-for=' noRollBackFor=ValidString)?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'no-rollback-for='
		public Keyword getNoRollbackForKeyword_1_2_0() { return cNoRollbackForKeyword_1_2_0; }
		
		//noRollBackFor=ValidString
		public Assignment getNoRollBackForAssignment_1_2_1() { return cNoRollBackForAssignment_1_2_1; }
		
		//ValidString
		public RuleCall getNoRollBackForValidStringParserRuleCall_1_2_1_0() { return cNoRollBackForValidStringParserRuleCall_1_2_1_0; }
		
		//('propagation=' propagation=EnumIsolation)?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'propagation='
		public Keyword getPropagationKeyword_1_3_0() { return cPropagationKeyword_1_3_0; }
		
		//propagation=EnumIsolation
		public Assignment getPropagationAssignment_1_3_1() { return cPropagationAssignment_1_3_1; }
		
		//EnumIsolation
		public RuleCall getPropagationEnumIsolationEnumRuleCall_1_3_1_0() { return cPropagationEnumIsolationEnumRuleCall_1_3_1_0; }
		
		//('read-only=' readOnly=sBoolean)?
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//'read-only='
		public Keyword getReadOnlyKeyword_1_4_0() { return cReadOnlyKeyword_1_4_0; }
		
		//readOnly=sBoolean
		public Assignment getReadOnlyAssignment_1_4_1() { return cReadOnlyAssignment_1_4_1; }
		
		//sBoolean
		public RuleCall getReadOnlySBooleanEnumRuleCall_1_4_1_0() { return cReadOnlySBooleanEnumRuleCall_1_4_1_0; }
		
		//('rollback-for=' rollbackFor=ValidString)?
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//'rollback-for='
		public Keyword getRollbackForKeyword_1_5_0() { return cRollbackForKeyword_1_5_0; }
		
		//rollbackFor=ValidString
		public Assignment getRollbackForAssignment_1_5_1() { return cRollbackForAssignment_1_5_1; }
		
		//ValidString
		public RuleCall getRollbackForValidStringParserRuleCall_1_5_1_0() { return cRollbackForValidStringParserRuleCall_1_5_1_0; }
		
		//('timeout=' timeOut=ValidString)?
		public Group getGroup_1_6() { return cGroup_1_6; }
		
		//'timeout='
		public Keyword getTimeoutKeyword_1_6_0() { return cTimeoutKeyword_1_6_0; }
		
		//timeOut=ValidString
		public Assignment getTimeOutAssignment_1_6_1() { return cTimeOutAssignment_1_6_1; }
		
		//ValidString
		public RuleCall getTimeOutValidStringParserRuleCall_1_6_1_0() { return cTimeOutValidStringParserRuleCall_1_6_1_0; }
	}
	public class TxJtaTransactionManagerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.TxJtaTransactionManager");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTxJtaTransactionManagerAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTxJtaTransactionManagerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cSolidusGreaterThanSignKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cTxJtaTransactionManagerKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		
		//TxJtaTransactionManager:
		//	{TxJtaTransactionManager}
		//	'<tx:jta-transaction-manager' ('/>' | '>' '</tx:jta-transaction-manager>');
		@Override public ParserRule getRule() { return rule; }
		
		//{TxJtaTransactionManager} '<tx:jta-transaction-manager' ('/>' | '>' '</tx:jta-transaction-manager>')
		public Group getGroup() { return cGroup; }
		
		//{TxJtaTransactionManager}
		public Action getTxJtaTransactionManagerAction_0() { return cTxJtaTransactionManagerAction_0; }
		
		//'<tx:jta-transaction-manager'
		public Keyword getTxJtaTransactionManagerKeyword_1() { return cTxJtaTransactionManagerKeyword_1; }
		
		//'/>' | '>' '</tx:jta-transaction-manager>'
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_2_0() { return cSolidusGreaterThanSignKeyword_2_0; }
		
		//'>' '</tx:jta-transaction-manager>'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_1_0() { return cGreaterThanSignKeyword_2_1_0; }
		
		//'</tx:jta-transaction-manager>'
		public Keyword getTxJtaTransactionManagerKeyword_2_1_1() { return cTxJtaTransactionManagerKeyword_2_1_1; }
	}
	public class ComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.Component");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cComponentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBeanKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cIdKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cNameAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cNameValidStringParserRuleCall_2_0_1_0 = (RuleCall)cNameAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cNameKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cNamesAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cNamesValidStringParserRuleCall_2_1_1_0 = (RuleCall)cNamesAssignment_2_1_1.eContents().get(0);
		private final Assignment cClassAssignment_2_2 = (Assignment)cUnorderedGroup_2.eContents().get(2);
		private final RuleCall cClassCreationMethodParserRuleCall_2_2_0 = (RuleCall)cClassAssignment_2_2.eContents().get(0);
		private final Assignment cFeaturesAssignment_2_3 = (Assignment)cUnorderedGroup_2.eContents().get(3);
		private final RuleCall cFeaturesPNamespaceParserRuleCall_2_3_0 = (RuleCall)cFeaturesAssignment_2_3.eContents().get(0);
		private final Assignment cFeaturesAssignment_2_4 = (Assignment)cUnorderedGroup_2.eContents().get(4);
		private final RuleCall cFeaturesCNamespaceParserRuleCall_2_4_0 = (RuleCall)cFeaturesAssignment_2_4.eContents().get(0);
		private final Group cGroup_2_5 = (Group)cUnorderedGroup_2.eContents().get(5);
		private final Keyword cAbstractKeyword_2_5_0 = (Keyword)cGroup_2_5.eContents().get(0);
		private final Assignment cAbstractAssignment_2_5_1 = (Assignment)cGroup_2_5.eContents().get(1);
		private final RuleCall cAbstractSBooleanEnumRuleCall_2_5_1_0 = (RuleCall)cAbstractAssignment_2_5_1.eContents().get(0);
		private final Group cGroup_2_6 = (Group)cUnorderedGroup_2.eContents().get(6);
		private final Keyword cAutowireCandidateKeyword_2_6_0 = (Keyword)cGroup_2_6.eContents().get(0);
		private final Assignment cAutowireCandidateAssignment_2_6_1 = (Assignment)cGroup_2_6.eContents().get(1);
		private final RuleCall cAutowireCandidateDefaultableBooleanEnumRuleCall_2_6_1_0 = (RuleCall)cAutowireCandidateAssignment_2_6_1.eContents().get(0);
		private final Group cGroup_2_7 = (Group)cUnorderedGroup_2.eContents().get(7);
		private final Keyword cAutowireKeyword_2_7_0 = (Keyword)cGroup_2_7.eContents().get(0);
		private final Assignment cAutowireAssignment_2_7_1 = (Assignment)cGroup_2_7.eContents().get(1);
		private final RuleCall cAutowireDefaultableBooleanEnumRuleCall_2_7_1_0 = (RuleCall)cAutowireAssignment_2_7_1.eContents().get(0);
		private final Group cGroup_2_8 = (Group)cUnorderedGroup_2.eContents().get(8);
		private final Keyword cDependsOnKeyword_2_8_0 = (Keyword)cGroup_2_8.eContents().get(0);
		private final Assignment cDependsOnAssignment_2_8_1 = (Assignment)cGroup_2_8.eContents().get(1);
		private final CrossReference cDependsOnComponentCrossReference_2_8_1_0 = (CrossReference)cDependsOnAssignment_2_8_1.eContents().get(0);
		private final RuleCall cDependsOnComponentValidStringParserRuleCall_2_8_1_0_1 = (RuleCall)cDependsOnComponentCrossReference_2_8_1_0.eContents().get(1);
		private final Group cGroup_2_9 = (Group)cUnorderedGroup_2.eContents().get(9);
		private final Keyword cDestroyMethodKeyword_2_9_0 = (Keyword)cGroup_2_9.eContents().get(0);
		private final Assignment cDetroyMethodAssignment_2_9_1 = (Assignment)cGroup_2_9.eContents().get(1);
		private final RuleCall cDetroyMethodValidStringParserRuleCall_2_9_1_0 = (RuleCall)cDetroyMethodAssignment_2_9_1.eContents().get(0);
		private final Group cGroup_2_10 = (Group)cUnorderedGroup_2.eContents().get(10);
		private final Keyword cInitMethodKeyword_2_10_0 = (Keyword)cGroup_2_10.eContents().get(0);
		private final Assignment cInitMethodAssignment_2_10_1 = (Assignment)cGroup_2_10.eContents().get(1);
		private final RuleCall cInitMethodValidStringParserRuleCall_2_10_1_0 = (RuleCall)cInitMethodAssignment_2_10_1.eContents().get(0);
		private final Group cGroup_2_11 = (Group)cUnorderedGroup_2.eContents().get(11);
		private final Keyword cLazyInitKeyword_2_11_0 = (Keyword)cGroup_2_11.eContents().get(0);
		private final Assignment cLazyInitAssignment_2_11_1 = (Assignment)cGroup_2_11.eContents().get(1);
		private final RuleCall cLazyInitDefaultableBooleanEnumRuleCall_2_11_1_0 = (RuleCall)cLazyInitAssignment_2_11_1.eContents().get(0);
		private final Group cGroup_2_12 = (Group)cUnorderedGroup_2.eContents().get(12);
		private final Keyword cParentKeyword_2_12_0 = (Keyword)cGroup_2_12.eContents().get(0);
		private final Assignment cParentAssignment_2_12_1 = (Assignment)cGroup_2_12.eContents().get(1);
		private final CrossReference cParentComponentCrossReference_2_12_1_0 = (CrossReference)cParentAssignment_2_12_1.eContents().get(0);
		private final RuleCall cParentComponentValidStringParserRuleCall_2_12_1_0_1 = (RuleCall)cParentComponentCrossReference_2_12_1_0.eContents().get(1);
		private final Group cGroup_2_13 = (Group)cUnorderedGroup_2.eContents().get(13);
		private final Keyword cPrimaryKeyword_2_13_0 = (Keyword)cGroup_2_13.eContents().get(0);
		private final Assignment cPrimaryAssignment_2_13_1 = (Assignment)cGroup_2_13.eContents().get(1);
		private final RuleCall cPrimarySBooleanEnumRuleCall_2_13_1_0 = (RuleCall)cPrimaryAssignment_2_13_1.eContents().get(0);
		private final Group cGroup_2_14 = (Group)cUnorderedGroup_2.eContents().get(14);
		private final Keyword cScopeKeyword_2_14_0 = (Keyword)cGroup_2_14.eContents().get(0);
		private final Assignment cScopeAssignment_2_14_1 = (Assignment)cGroup_2_14.eContents().get(1);
		private final RuleCall cScopeValidStringParserRuleCall_2_14_1_0 = (RuleCall)cScopeAssignment_2_14_1.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Keyword cSolidusGreaterThanSignKeyword_3_0 = (Keyword)cAlternatives_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cDescriptionDescriptionParserRuleCall_3_1_1_0 = (RuleCall)cDescriptionAssignment_3_1_1.eContents().get(0);
		private final Alternatives cAlternatives_3_1_2 = (Alternatives)cGroup_3_1.eContents().get(2);
		private final Assignment cFeaturesAssignment_3_1_2_0 = (Assignment)cAlternatives_3_1_2.eContents().get(0);
		private final RuleCall cFeaturesFeatureParserRuleCall_3_1_2_0_0 = (RuleCall)cFeaturesAssignment_3_1_2_0.eContents().get(0);
		private final Assignment cLookupMethodsAssignment_3_1_2_1 = (Assignment)cAlternatives_3_1_2.eContents().get(1);
		private final RuleCall cLookupMethodsLookupMethodParserRuleCall_3_1_2_1_0 = (RuleCall)cLookupMethodsAssignment_3_1_2_1.eContents().get(0);
		private final Assignment cQualifiersAssignment_3_1_2_2 = (Assignment)cAlternatives_3_1_2.eContents().get(2);
		private final RuleCall cQualifiersQualifierParserRuleCall_3_1_2_2_0 = (RuleCall)cQualifiersAssignment_3_1_2_2.eContents().get(0);
		private final Assignment cMetaAssignment_3_1_2_3 = (Assignment)cAlternatives_3_1_2.eContents().get(3);
		private final RuleCall cMetaMetaTagParserRuleCall_3_1_2_3_0 = (RuleCall)cMetaAssignment_3_1_2_3.eContents().get(0);
		private final Assignment cAopScopedProxyAssignment_3_1_2_4 = (Assignment)cAlternatives_3_1_2.eContents().get(4);
		private final RuleCall cAopScopedProxyAopScopedProxyParserRuleCall_3_1_2_4_0 = (RuleCall)cAopScopedProxyAssignment_3_1_2_4.eContents().get(0);
		private final Assignment cUtilPropertiesPathAssignment_3_1_2_5 = (Assignment)cAlternatives_3_1_2.eContents().get(5);
		private final RuleCall cUtilPropertiesPathUtilPropertyPathParserRuleCall_3_1_2_5_0 = (RuleCall)cUtilPropertiesPathAssignment_3_1_2_5.eContents().get(0);
		private final Keyword cBeanKeyword_3_1_3 = (Keyword)cGroup_3_1.eContents().get(3);
		
		///*<bean/> */ Component:
		//	{Component}
		//	'<bean' (('id=' name=ValidString)? & ('name=' names+=ValidString)?
		//	& class=CreationMethod
		//	& features+=PNamespace*
		//	& features+=CNamespace*
		//	& ('abstract=' abstract=sBoolean)? //bool
		//	& ('autowire-candidate=' autowireCandidate=DefaultableBoolean)? //enum
		//	& ('autowire=' autowire=DefaultableBoolean)? //enum
		//	& ('depends-on=' dependsOn=[Component|ValidString])? //ref a bean
		//	& ('destroy-method=' detroyMethod=ValidString)? //ref a method
		//	& ('init-method=' initMethod=ValidString)? //ref a method
		//	& ('lazy-init=' lazyInit=DefaultableBoolean)? //enum
		//	& ('parent=' parent=[Component|ValidString])? //ref a bean
		//	& ('primary=' primary=sBoolean)? //bool
		//	& ('scope=' scope=ValidString)?) ('/>' | '>'
		//	description=Description? (features+=Feature | lookupMethods+=LookupMethod | qualifiers+=Qualifier | meta+=MetaTag
		//	| aopScopedProxy=AopScopedProxy | utilPropertiesPath+=UtilPropertyPath)*
		//	'</bean>');
		@Override public ParserRule getRule() { return rule; }
		
		//{Component} '<bean' (('id=' name=ValidString)? & ('name=' names+=ValidString)? & class=CreationMethod &
		//features+=PNamespace* & features+=CNamespace* & ('abstract=' abstract=sBoolean)? //bool
		//& ('autowire-candidate=' autowireCandidate=DefaultableBoolean)? //enum
		//& ('autowire=' autowire=DefaultableBoolean)? //enum
		//& ('depends-on=' dependsOn=[Component|ValidString])? //ref a bean
		//& ('destroy-method=' detroyMethod=ValidString)? //ref a method
		//& ('init-method=' initMethod=ValidString)? //ref a method
		//& ('lazy-init=' lazyInit=DefaultableBoolean)? //enum
		//& ('parent=' parent=[Component|ValidString])? //ref a bean
		//& ('primary=' primary=sBoolean)? //bool
		//& ('scope=' scope=ValidString)?) ('/>' | '>' description=Description? (features+=Feature | lookupMethods+=LookupMethod |
		//qualifiers+=Qualifier | meta+=MetaTag | aopScopedProxy=AopScopedProxy | utilPropertiesPath+=UtilPropertyPath)*
		//'</bean>')
		public Group getGroup() { return cGroup; }
		
		//{Component}
		public Action getComponentAction_0() { return cComponentAction_0; }
		
		//'<bean'
		public Keyword getBeanKeyword_1() { return cBeanKeyword_1; }
		
		//('id=' name=ValidString)? & ('name=' names+=ValidString)? & class=CreationMethod & features+=PNamespace* &
		//features+=CNamespace* & ('abstract=' abstract=sBoolean)? //bool
		//& ('autowire-candidate=' autowireCandidate=DefaultableBoolean)? //enum
		//& ('autowire=' autowire=DefaultableBoolean)? //enum
		//& ('depends-on=' dependsOn=[Component|ValidString])? //ref a bean
		//& ('destroy-method=' detroyMethod=ValidString)? //ref a method
		//& ('init-method=' initMethod=ValidString)? //ref a method
		//& ('lazy-init=' lazyInit=DefaultableBoolean)? //enum
		//& ('parent=' parent=[Component|ValidString])? //ref a bean
		//& ('primary=' primary=sBoolean)? //bool
		//& ('scope=' scope=ValidString)?
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//('id=' name=ValidString)?
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'id='
		public Keyword getIdKeyword_2_0_0() { return cIdKeyword_2_0_0; }
		
		//name=ValidString
		public Assignment getNameAssignment_2_0_1() { return cNameAssignment_2_0_1; }
		
		//ValidString
		public RuleCall getNameValidStringParserRuleCall_2_0_1_0() { return cNameValidStringParserRuleCall_2_0_1_0; }
		
		//('name=' names+=ValidString)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'name='
		public Keyword getNameKeyword_2_1_0() { return cNameKeyword_2_1_0; }
		
		//names+=ValidString
		public Assignment getNamesAssignment_2_1_1() { return cNamesAssignment_2_1_1; }
		
		//ValidString
		public RuleCall getNamesValidStringParserRuleCall_2_1_1_0() { return cNamesValidStringParserRuleCall_2_1_1_0; }
		
		//class=CreationMethod
		public Assignment getClassAssignment_2_2() { return cClassAssignment_2_2; }
		
		//CreationMethod
		public RuleCall getClassCreationMethodParserRuleCall_2_2_0() { return cClassCreationMethodParserRuleCall_2_2_0; }
		
		//features+=PNamespace*
		public Assignment getFeaturesAssignment_2_3() { return cFeaturesAssignment_2_3; }
		
		//PNamespace
		public RuleCall getFeaturesPNamespaceParserRuleCall_2_3_0() { return cFeaturesPNamespaceParserRuleCall_2_3_0; }
		
		//features+=CNamespace*
		public Assignment getFeaturesAssignment_2_4() { return cFeaturesAssignment_2_4; }
		
		//CNamespace
		public RuleCall getFeaturesCNamespaceParserRuleCall_2_4_0() { return cFeaturesCNamespaceParserRuleCall_2_4_0; }
		
		//('abstract=' abstract=sBoolean)?
		public Group getGroup_2_5() { return cGroup_2_5; }
		
		//'abstract='
		public Keyword getAbstractKeyword_2_5_0() { return cAbstractKeyword_2_5_0; }
		
		//abstract=sBoolean
		public Assignment getAbstractAssignment_2_5_1() { return cAbstractAssignment_2_5_1; }
		
		//sBoolean
		public RuleCall getAbstractSBooleanEnumRuleCall_2_5_1_0() { return cAbstractSBooleanEnumRuleCall_2_5_1_0; }
		
		//('autowire-candidate=' autowireCandidate=DefaultableBoolean)?
		public Group getGroup_2_6() { return cGroup_2_6; }
		
		//'autowire-candidate='
		public Keyword getAutowireCandidateKeyword_2_6_0() { return cAutowireCandidateKeyword_2_6_0; }
		
		//autowireCandidate=DefaultableBoolean
		public Assignment getAutowireCandidateAssignment_2_6_1() { return cAutowireCandidateAssignment_2_6_1; }
		
		//DefaultableBoolean
		public RuleCall getAutowireCandidateDefaultableBooleanEnumRuleCall_2_6_1_0() { return cAutowireCandidateDefaultableBooleanEnumRuleCall_2_6_1_0; }
		
		//('autowire=' autowire=DefaultableBoolean)?
		public Group getGroup_2_7() { return cGroup_2_7; }
		
		//'autowire='
		public Keyword getAutowireKeyword_2_7_0() { return cAutowireKeyword_2_7_0; }
		
		//autowire=DefaultableBoolean
		public Assignment getAutowireAssignment_2_7_1() { return cAutowireAssignment_2_7_1; }
		
		//DefaultableBoolean
		public RuleCall getAutowireDefaultableBooleanEnumRuleCall_2_7_1_0() { return cAutowireDefaultableBooleanEnumRuleCall_2_7_1_0; }
		
		//('depends-on=' dependsOn=[Component|ValidString])?
		public Group getGroup_2_8() { return cGroup_2_8; }
		
		//'depends-on='
		public Keyword getDependsOnKeyword_2_8_0() { return cDependsOnKeyword_2_8_0; }
		
		//dependsOn=[Component|ValidString]
		public Assignment getDependsOnAssignment_2_8_1() { return cDependsOnAssignment_2_8_1; }
		
		//[Component|ValidString]
		public CrossReference getDependsOnComponentCrossReference_2_8_1_0() { return cDependsOnComponentCrossReference_2_8_1_0; }
		
		//ValidString
		public RuleCall getDependsOnComponentValidStringParserRuleCall_2_8_1_0_1() { return cDependsOnComponentValidStringParserRuleCall_2_8_1_0_1; }
		
		//('destroy-method=' detroyMethod=ValidString)?
		public Group getGroup_2_9() { return cGroup_2_9; }
		
		//'destroy-method='
		public Keyword getDestroyMethodKeyword_2_9_0() { return cDestroyMethodKeyword_2_9_0; }
		
		//detroyMethod=ValidString
		public Assignment getDetroyMethodAssignment_2_9_1() { return cDetroyMethodAssignment_2_9_1; }
		
		//ValidString
		public RuleCall getDetroyMethodValidStringParserRuleCall_2_9_1_0() { return cDetroyMethodValidStringParserRuleCall_2_9_1_0; }
		
		//('init-method=' initMethod=ValidString)?
		public Group getGroup_2_10() { return cGroup_2_10; }
		
		//'init-method='
		public Keyword getInitMethodKeyword_2_10_0() { return cInitMethodKeyword_2_10_0; }
		
		//initMethod=ValidString
		public Assignment getInitMethodAssignment_2_10_1() { return cInitMethodAssignment_2_10_1; }
		
		//ValidString
		public RuleCall getInitMethodValidStringParserRuleCall_2_10_1_0() { return cInitMethodValidStringParserRuleCall_2_10_1_0; }
		
		//('lazy-init=' lazyInit=DefaultableBoolean)?
		public Group getGroup_2_11() { return cGroup_2_11; }
		
		//'lazy-init='
		public Keyword getLazyInitKeyword_2_11_0() { return cLazyInitKeyword_2_11_0; }
		
		//lazyInit=DefaultableBoolean
		public Assignment getLazyInitAssignment_2_11_1() { return cLazyInitAssignment_2_11_1; }
		
		//DefaultableBoolean
		public RuleCall getLazyInitDefaultableBooleanEnumRuleCall_2_11_1_0() { return cLazyInitDefaultableBooleanEnumRuleCall_2_11_1_0; }
		
		//('parent=' parent=[Component|ValidString])?
		public Group getGroup_2_12() { return cGroup_2_12; }
		
		//'parent='
		public Keyword getParentKeyword_2_12_0() { return cParentKeyword_2_12_0; }
		
		//parent=[Component|ValidString]
		public Assignment getParentAssignment_2_12_1() { return cParentAssignment_2_12_1; }
		
		//[Component|ValidString]
		public CrossReference getParentComponentCrossReference_2_12_1_0() { return cParentComponentCrossReference_2_12_1_0; }
		
		//ValidString
		public RuleCall getParentComponentValidStringParserRuleCall_2_12_1_0_1() { return cParentComponentValidStringParserRuleCall_2_12_1_0_1; }
		
		//('primary=' primary=sBoolean)?
		public Group getGroup_2_13() { return cGroup_2_13; }
		
		//'primary='
		public Keyword getPrimaryKeyword_2_13_0() { return cPrimaryKeyword_2_13_0; }
		
		//primary=sBoolean
		public Assignment getPrimaryAssignment_2_13_1() { return cPrimaryAssignment_2_13_1; }
		
		//sBoolean
		public RuleCall getPrimarySBooleanEnumRuleCall_2_13_1_0() { return cPrimarySBooleanEnumRuleCall_2_13_1_0; }
		
		//('scope=' scope=ValidString)?
		public Group getGroup_2_14() { return cGroup_2_14; }
		
		//'scope='
		public Keyword getScopeKeyword_2_14_0() { return cScopeKeyword_2_14_0; }
		
		//scope=ValidString
		public Assignment getScopeAssignment_2_14_1() { return cScopeAssignment_2_14_1; }
		
		//ValidString
		public RuleCall getScopeValidStringParserRuleCall_2_14_1_0() { return cScopeValidStringParserRuleCall_2_14_1_0; }
		
		//'/>' | '>' description=Description? (features+=Feature | lookupMethods+=LookupMethod | qualifiers+=Qualifier |
		//meta+=MetaTag | aopScopedProxy=AopScopedProxy | utilPropertiesPath+=UtilPropertyPath)* '</bean>'
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_3_0() { return cSolidusGreaterThanSignKeyword_3_0; }
		
		//'>' description=Description? (features+=Feature | lookupMethods+=LookupMethod | qualifiers+=Qualifier | meta+=MetaTag |
		//aopScopedProxy=AopScopedProxy | utilPropertiesPath+=UtilPropertyPath)* '</bean>'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_3_1_0() { return cGreaterThanSignKeyword_3_1_0; }
		
		//description=Description?
		public Assignment getDescriptionAssignment_3_1_1() { return cDescriptionAssignment_3_1_1; }
		
		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_3_1_1_0() { return cDescriptionDescriptionParserRuleCall_3_1_1_0; }
		
		//(features+=Feature | lookupMethods+=LookupMethod | qualifiers+=Qualifier | meta+=MetaTag | aopScopedProxy=AopScopedProxy
		//| utilPropertiesPath+=UtilPropertyPath)*
		public Alternatives getAlternatives_3_1_2() { return cAlternatives_3_1_2; }
		
		//features+=Feature
		public Assignment getFeaturesAssignment_3_1_2_0() { return cFeaturesAssignment_3_1_2_0; }
		
		//Feature
		public RuleCall getFeaturesFeatureParserRuleCall_3_1_2_0_0() { return cFeaturesFeatureParserRuleCall_3_1_2_0_0; }
		
		//lookupMethods+=LookupMethod
		public Assignment getLookupMethodsAssignment_3_1_2_1() { return cLookupMethodsAssignment_3_1_2_1; }
		
		//LookupMethod
		public RuleCall getLookupMethodsLookupMethodParserRuleCall_3_1_2_1_0() { return cLookupMethodsLookupMethodParserRuleCall_3_1_2_1_0; }
		
		//qualifiers+=Qualifier
		public Assignment getQualifiersAssignment_3_1_2_2() { return cQualifiersAssignment_3_1_2_2; }
		
		//Qualifier
		public RuleCall getQualifiersQualifierParserRuleCall_3_1_2_2_0() { return cQualifiersQualifierParserRuleCall_3_1_2_2_0; }
		
		//meta+=MetaTag
		public Assignment getMetaAssignment_3_1_2_3() { return cMetaAssignment_3_1_2_3; }
		
		//MetaTag
		public RuleCall getMetaMetaTagParserRuleCall_3_1_2_3_0() { return cMetaMetaTagParserRuleCall_3_1_2_3_0; }
		
		//aopScopedProxy=AopScopedProxy
		public Assignment getAopScopedProxyAssignment_3_1_2_4() { return cAopScopedProxyAssignment_3_1_2_4; }
		
		//AopScopedProxy
		public RuleCall getAopScopedProxyAopScopedProxyParserRuleCall_3_1_2_4_0() { return cAopScopedProxyAopScopedProxyParserRuleCall_3_1_2_4_0; }
		
		//utilPropertiesPath+=UtilPropertyPath
		public Assignment getUtilPropertiesPathAssignment_3_1_2_5() { return cUtilPropertiesPathAssignment_3_1_2_5; }
		
		//UtilPropertyPath
		public RuleCall getUtilPropertiesPathUtilPropertyPathParserRuleCall_3_1_2_5_0() { return cUtilPropertiesPathUtilPropertyPathParserRuleCall_3_1_2_5_0; }
		
		//'</bean>'
		public Keyword getBeanKeyword_3_1_3() { return cBeanKeyword_3_1_3; }
	}
	public class CreationMethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.CreationMethod");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cFactoryMethodKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cFactoryMethodAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cFactoryMethodValidStringParserRuleCall_0_1_0 = (RuleCall)cFactoryMethodAssignment_0_1.eContents().get(0);
		private final Assignment cClassAssignment_1 = (Assignment)cUnorderedGroup.eContents().get(1);
		private final Alternatives cClassAlternatives_1_0 = (Alternatives)cClassAssignment_1.eContents().get(0);
		private final RuleCall cClassClassParserRuleCall_1_0_0 = (RuleCall)cClassAlternatives_1_0.eContents().get(0);
		private final RuleCall cClassFactoryParserRuleCall_1_0_1 = (RuleCall)cClassAlternatives_1_0.eContents().get(1);
		
		//CreationMethod:
		//	('factory-method=' factoryMethod=ValidString)? & class=(Class | Factory);
		@Override public ParserRule getRule() { return rule; }
		
		//('factory-method=' factoryMethod=ValidString)? & class=(Class | Factory)
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//('factory-method=' factoryMethod=ValidString)?
		public Group getGroup_0() { return cGroup_0; }
		
		//'factory-method='
		public Keyword getFactoryMethodKeyword_0_0() { return cFactoryMethodKeyword_0_0; }
		
		//factoryMethod=ValidString
		public Assignment getFactoryMethodAssignment_0_1() { return cFactoryMethodAssignment_0_1; }
		
		//ValidString
		public RuleCall getFactoryMethodValidStringParserRuleCall_0_1_0() { return cFactoryMethodValidStringParserRuleCall_0_1_0; }
		
		//class=(Class | Factory)
		public Assignment getClassAssignment_1() { return cClassAssignment_1; }
		
		//(Class | Factory)
		public Alternatives getClassAlternatives_1_0() { return cClassAlternatives_1_0; }
		
		//Class
		public RuleCall getClassClassParserRuleCall_1_0_0() { return cClassClassParserRuleCall_1_0_0; }
		
		//Factory
		public RuleCall getClassFactoryParserRuleCall_1_0_1() { return cClassFactoryParserRuleCall_1_0_1; }
	}
	public class ClassOrFactoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.ClassOrFactory");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cClassParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFactoryParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///*If the bean is created by a factory */ ClassOrFactory:
		//	Class | Factory;
		@Override public ParserRule getRule() { return rule; }
		
		//Class | Factory
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Class
		public RuleCall getClassParserRuleCall_0() { return cClassParserRuleCall_0; }
		
		//Factory
		public RuleCall getFactoryParserRuleCall_1() { return cFactoryParserRuleCall_1; }
	}
	public class FactoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.Factory");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFactoryBeanKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFactoryBeanAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cFactoryBeanComponentCrossReference_1_0 = (CrossReference)cFactoryBeanAssignment_1.eContents().get(0);
		private final RuleCall cFactoryBeanComponentValidStringParserRuleCall_1_0_1 = (RuleCall)cFactoryBeanComponentCrossReference_1_0.eContents().get(1);
		
		//Factory:
		//	'factory-bean=' factoryBean=[Component|ValidString];
		@Override public ParserRule getRule() { return rule; }
		
		//'factory-bean=' factoryBean=[Component|ValidString]
		public Group getGroup() { return cGroup; }
		
		//'factory-bean='
		public Keyword getFactoryBeanKeyword_0() { return cFactoryBeanKeyword_0; }
		
		//factoryBean=[Component|ValidString]
		public Assignment getFactoryBeanAssignment_1() { return cFactoryBeanAssignment_1; }
		
		//[Component|ValidString]
		public CrossReference getFactoryBeanComponentCrossReference_1_0() { return cFactoryBeanComponentCrossReference_1_0; }
		
		//ValidString
		public RuleCall getFactoryBeanComponentValidStringParserRuleCall_1_0_1() { return cFactoryBeanComponentValidStringParserRuleCall_1_0_1; }
	}
	public class ClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.Class");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cClassKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cClassnameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cClassnameValidStringParserRuleCall_1_0 = (RuleCall)cClassnameAssignment_1.eContents().get(0);
		
		//Class:
		//	'class=' /*(path=Path '.' )? classname=ID */ classname=ValidString;
		@Override public ParserRule getRule() { return rule; }
		
		//'class=' /*(path=Path '.' )? classname=ID */ classname=ValidString
		public Group getGroup() { return cGroup; }
		
		//'class='
		public Keyword getClassKeyword_0() { return cClassKeyword_0; }
		
		///*(path=Path '.' )? classname=ID */ classname=ValidString
		public Assignment getClassnameAssignment_1() { return cClassnameAssignment_1; }
		
		//ValidString
		public RuleCall getClassnameValidStringParserRuleCall_1_0() { return cClassnameValidStringParserRuleCall_1_0; }
	}
	public class AopScopedProxyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.AopScopedProxy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAopScopedProxyAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAopScopedProxyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cProxyTargetClassKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cProxyTargetClassAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cProxyTargetClassValidStringParserRuleCall_2_1_0 = (RuleCall)cProxyTargetClassAssignment_2_1.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Keyword cSolidusGreaterThanSignKeyword_3_0 = (Keyword)cAlternatives_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Keyword cAopScopedProxyKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		
		///*Path of the class */ /*Path returns ecore::EString:
		//(ID ('.'ID)*)
		//;
		//*/ AopScopedProxy:
		//	{AopScopedProxy} '<aop:scoped-proxy' ('proxy-target-class=' proxyTargetClass=ValidString)? ('/>' | '>'
		//	'</aop:scoped-proxy>');
		@Override public ParserRule getRule() { return rule; }
		
		//{AopScopedProxy} '<aop:scoped-proxy' ('proxy-target-class=' proxyTargetClass=ValidString)? ('/>' | '>'
		//'</aop:scoped-proxy>')
		public Group getGroup() { return cGroup; }
		
		//{AopScopedProxy}
		public Action getAopScopedProxyAction_0() { return cAopScopedProxyAction_0; }
		
		//'<aop:scoped-proxy'
		public Keyword getAopScopedProxyKeyword_1() { return cAopScopedProxyKeyword_1; }
		
		//('proxy-target-class=' proxyTargetClass=ValidString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'proxy-target-class='
		public Keyword getProxyTargetClassKeyword_2_0() { return cProxyTargetClassKeyword_2_0; }
		
		//proxyTargetClass=ValidString
		public Assignment getProxyTargetClassAssignment_2_1() { return cProxyTargetClassAssignment_2_1; }
		
		//ValidString
		public RuleCall getProxyTargetClassValidStringParserRuleCall_2_1_0() { return cProxyTargetClassValidStringParserRuleCall_2_1_0; }
		
		//'/>' | '>' '</aop:scoped-proxy>'
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_3_0() { return cSolidusGreaterThanSignKeyword_3_0; }
		
		//'>' '</aop:scoped-proxy>'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_3_1_0() { return cGreaterThanSignKeyword_3_1_0; }
		
		//'</aop:scoped-proxy>'
		public Keyword getAopScopedProxyKeyword_3_1_1() { return cAopScopedProxyKeyword_3_1_1; }
	}
	public class FeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.Feature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPropertyParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cConstructorArgParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Feature:
		//	Property | ConstructorArg;
		@Override public ParserRule getRule() { return rule; }
		
		//Property | ConstructorArg
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Property
		public RuleCall getPropertyParserRuleCall_0() { return cPropertyParserRuleCall_0; }
		
		//ConstructorArg
		public RuleCall getConstructorArgParserRuleCall_1() { return cConstructorArgParserRuleCall_1; }
	}
	public class PropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.Property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPropertyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1_0_0 = (UnorderedGroup)cGroup_1_0.eContents().get(0);
		private final Group cGroup_1_0_0_0 = (Group)cUnorderedGroup_1_0_0.eContents().get(0);
		private final Keyword cNameKeyword_1_0_0_0_0 = (Keyword)cGroup_1_0_0_0.eContents().get(0);
		private final Assignment cNameAssignment_1_0_0_0_1 = (Assignment)cGroup_1_0_0_0.eContents().get(1);
		private final RuleCall cNameValidStringParserRuleCall_1_0_0_0_1_0 = (RuleCall)cNameAssignment_1_0_0_0_1.eContents().get(0);
		private final Assignment cArtefactAssignment_1_0_0_1 = (Assignment)cUnorderedGroup_1_0_0.eContents().get(1);
		private final Alternatives cArtefactAlternatives_1_0_0_1_0 = (Alternatives)cArtefactAssignment_1_0_0_1.eContents().get(0);
		private final RuleCall cArtefactReferenceAttParserRuleCall_1_0_0_1_0_0 = (RuleCall)cArtefactAlternatives_1_0_0_1_0.eContents().get(0);
		private final RuleCall cArtefactAttributeAttParserRuleCall_1_0_0_1_0_1 = (RuleCall)cArtefactAlternatives_1_0_0_1_0.eContents().get(1);
		private final Alternatives cAlternatives_1_0_1 = (Alternatives)cGroup_1_0.eContents().get(1);
		private final Keyword cSolidusGreaterThanSignKeyword_1_0_1_0 = (Keyword)cAlternatives_1_0_1.eContents().get(0);
		private final Group cGroup_1_0_1_1 = (Group)cAlternatives_1_0_1.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_1_0_1_1_0 = (Keyword)cGroup_1_0_1_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_1_0_1_1_1 = (Assignment)cGroup_1_0_1_1.eContents().get(1);
		private final RuleCall cDescriptionDescriptionParserRuleCall_1_0_1_1_1_0 = (RuleCall)cDescriptionAssignment_1_0_1_1_1.eContents().get(0);
		private final Keyword cPropertyKeyword_1_0_1_1_2 = (Keyword)cGroup_1_0_1_1.eContents().get(2);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Group cGroup_1_1_0 = (Group)cGroup_1_1.eContents().get(0);
		private final Keyword cNameKeyword_1_1_0_0 = (Keyword)cGroup_1_1_0.eContents().get(0);
		private final Assignment cNameAssignment_1_1_0_1 = (Assignment)cGroup_1_1_0.eContents().get(1);
		private final RuleCall cNameValidStringParserRuleCall_1_1_0_1_0 = (RuleCall)cNameAssignment_1_1_0_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_1_1_1 = (Keyword)cGroup_1_1.eContents().get(1);
		private final Assignment cDescriptionAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cDescriptionDescriptionParserRuleCall_1_1_2_0 = (RuleCall)cDescriptionAssignment_1_1_2.eContents().get(0);
		private final Alternatives cAlternatives_1_1_3 = (Alternatives)cGroup_1_1.eContents().get(3);
		private final Assignment cArtefactAssignment_1_1_3_0 = (Assignment)cAlternatives_1_1_3.eContents().get(0);
		private final RuleCall cArtefactAbstractArtefactParserRuleCall_1_1_3_0_0 = (RuleCall)cArtefactAssignment_1_1_3_0.eContents().get(0);
		private final RuleCall cNullTagParserRuleCall_1_1_3_1 = (RuleCall)cAlternatives_1_1_3.eContents().get(1);
		private final Keyword cPropertyKeyword_1_1_4 = (Keyword)cGroup_1_1.eContents().get(4);
		
		///*<property/> */ Property Feature:
		//	'<property' (('name=' name=ValidString & artefact=(ReferenceAtt | AttributeAtt)) ('/>' | '>' description=Description?
		//	'</property>') | ('name=' name=ValidString) '>' description=Description? (artefact=AbstractArtefact | NullTag)
		//	'</property>');
		@Override public ParserRule getRule() { return rule; }
		
		//'<property' (('name=' name=ValidString & artefact=(ReferenceAtt | AttributeAtt)) ('/>' | '>' description=Description?
		//'</property>') | ('name=' name=ValidString) '>' description=Description? (artefact=AbstractArtefact | NullTag)
		//'</property>')
		public Group getGroup() { return cGroup; }
		
		//'<property'
		public Keyword getPropertyKeyword_0() { return cPropertyKeyword_0; }
		
		//('name=' name=ValidString & artefact=(ReferenceAtt | AttributeAtt)) ('/>' | '>' description=Description? '</property>')
		//| ('name=' name=ValidString) '>' description=Description? (artefact=AbstractArtefact | NullTag) '</property>'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//('name=' name=ValidString & artefact=(ReferenceAtt | AttributeAtt)) ('/>' | '>' description=Description? '</property>')
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'name=' name=ValidString & artefact=(ReferenceAtt | AttributeAtt)
		public UnorderedGroup getUnorderedGroup_1_0_0() { return cUnorderedGroup_1_0_0; }
		
		//'name=' name=ValidString
		public Group getGroup_1_0_0_0() { return cGroup_1_0_0_0; }
		
		//'name='
		public Keyword getNameKeyword_1_0_0_0_0() { return cNameKeyword_1_0_0_0_0; }
		
		//name=ValidString
		public Assignment getNameAssignment_1_0_0_0_1() { return cNameAssignment_1_0_0_0_1; }
		
		//ValidString
		public RuleCall getNameValidStringParserRuleCall_1_0_0_0_1_0() { return cNameValidStringParserRuleCall_1_0_0_0_1_0; }
		
		//artefact=(ReferenceAtt | AttributeAtt)
		public Assignment getArtefactAssignment_1_0_0_1() { return cArtefactAssignment_1_0_0_1; }
		
		//(ReferenceAtt | AttributeAtt)
		public Alternatives getArtefactAlternatives_1_0_0_1_0() { return cArtefactAlternatives_1_0_0_1_0; }
		
		//ReferenceAtt
		public RuleCall getArtefactReferenceAttParserRuleCall_1_0_0_1_0_0() { return cArtefactReferenceAttParserRuleCall_1_0_0_1_0_0; }
		
		//AttributeAtt
		public RuleCall getArtefactAttributeAttParserRuleCall_1_0_0_1_0_1() { return cArtefactAttributeAttParserRuleCall_1_0_0_1_0_1; }
		
		//'/>' | '>' description=Description? '</property>'
		public Alternatives getAlternatives_1_0_1() { return cAlternatives_1_0_1; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_1_0_1_0() { return cSolidusGreaterThanSignKeyword_1_0_1_0; }
		
		//'>' description=Description? '</property>'
		public Group getGroup_1_0_1_1() { return cGroup_1_0_1_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_1_0_1_1_0() { return cGreaterThanSignKeyword_1_0_1_1_0; }
		
		//description=Description?
		public Assignment getDescriptionAssignment_1_0_1_1_1() { return cDescriptionAssignment_1_0_1_1_1; }
		
		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_1_0_1_1_1_0() { return cDescriptionDescriptionParserRuleCall_1_0_1_1_1_0; }
		
		//'</property>'
		public Keyword getPropertyKeyword_1_0_1_1_2() { return cPropertyKeyword_1_0_1_1_2; }
		
		//('name=' name=ValidString) '>' description=Description? (artefact=AbstractArtefact | NullTag) '</property>'
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'name=' name=ValidString
		public Group getGroup_1_1_0() { return cGroup_1_1_0; }
		
		//'name='
		public Keyword getNameKeyword_1_1_0_0() { return cNameKeyword_1_1_0_0; }
		
		//name=ValidString
		public Assignment getNameAssignment_1_1_0_1() { return cNameAssignment_1_1_0_1; }
		
		//ValidString
		public RuleCall getNameValidStringParserRuleCall_1_1_0_1_0() { return cNameValidStringParserRuleCall_1_1_0_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_1_1_1() { return cGreaterThanSignKeyword_1_1_1; }
		
		//description=Description?
		public Assignment getDescriptionAssignment_1_1_2() { return cDescriptionAssignment_1_1_2; }
		
		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_1_1_2_0() { return cDescriptionDescriptionParserRuleCall_1_1_2_0; }
		
		//artefact=AbstractArtefact | NullTag
		public Alternatives getAlternatives_1_1_3() { return cAlternatives_1_1_3; }
		
		//artefact=AbstractArtefact
		public Assignment getArtefactAssignment_1_1_3_0() { return cArtefactAssignment_1_1_3_0; }
		
		//AbstractArtefact
		public RuleCall getArtefactAbstractArtefactParserRuleCall_1_1_3_0_0() { return cArtefactAbstractArtefactParserRuleCall_1_1_3_0_0; }
		
		//NullTag
		public RuleCall getNullTagParserRuleCall_1_1_3_1() { return cNullTagParserRuleCall_1_1_3_1; }
		
		//'</property>'
		public Keyword getPropertyKeyword_1_1_4() { return cPropertyKeyword_1_1_4; }
	}
	public class AttributeAttElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.AttributeAtt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAttributeAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cValueKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cValueAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cValueValidStringParserRuleCall_1_1_0 = (RuleCall)cValueAssignment_1_1.eContents().get(0);
		
		///** If Attribute is a attribute of <property/>/<Constructor-arg/> */ AttributeAtt Attribute:
		//	{Attribute} ('value=' value=ValidString);
		@Override public ParserRule getRule() { return rule; }
		
		//{Attribute} ('value=' value=ValidString)
		public Group getGroup() { return cGroup; }
		
		//{Attribute}
		public Action getAttributeAction_0() { return cAttributeAction_0; }
		
		//'value=' value=ValidString
		public Group getGroup_1() { return cGroup_1; }
		
		//'value='
		public Keyword getValueKeyword_1_0() { return cValueKeyword_1_0; }
		
		//value=ValidString
		public Assignment getValueAssignment_1_1() { return cValueAssignment_1_1; }
		
		//ValidString
		public RuleCall getValueValidStringParserRuleCall_1_1_0() { return cValueValidStringParserRuleCall_1_1_0; }
	}
	public class AttributeTagElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.AttributeTag");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cAttributeAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Keyword cValueKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Group cGroup_0_2 = (Group)cGroup_0.eContents().get(2);
		private final Keyword cTypeKeyword_0_2_0 = (Keyword)cGroup_0_2.eContents().get(0);
		private final Assignment cTypeAssignment_0_2_1 = (Assignment)cGroup_0_2.eContents().get(1);
		private final RuleCall cTypeValidStringParserRuleCall_0_2_1_0 = (RuleCall)cTypeAssignment_0_2_1.eContents().get(0);
		private final Alternatives cAlternatives_0_3 = (Alternatives)cGroup_0.eContents().get(3);
		private final Group cGroup_0_3_0 = (Group)cAlternatives_0_3.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_0_3_0_0 = (Keyword)cGroup_0_3_0.eContents().get(0);
		private final Assignment cValueAssignment_0_3_0_1 = (Assignment)cGroup_0_3_0.eContents().get(1);
		private final RuleCall cValueQSTRINGParserRuleCall_0_3_0_1_0 = (RuleCall)cValueAssignment_0_3_0_1.eContents().get(0);
		private final Keyword cValueKeyword_0_3_0_2 = (Keyword)cGroup_0_3_0.eContents().get(2);
		private final Keyword cSolidusGreaterThanSignKeyword_0_3_1 = (Keyword)cAlternatives_0_3.eContents().get(1);
		private final RuleCall cUtilConstantParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///**Attribute create by a tag */ AttributeTag Attribute:
		//	{Attribute}
		//	'<value' ('type=' type=ValidString)? ('>' value=QSTRING '</value>' | '/>') | UtilConstant;
		@Override public ParserRule getRule() { return rule; }
		
		//{Attribute} '<value' ('type=' type=ValidString)? ('>' value=QSTRING '</value>' | '/>') | UtilConstant
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{Attribute} '<value' ('type=' type=ValidString)? ('>' value=QSTRING '</value>' | '/>')
		public Group getGroup_0() { return cGroup_0; }
		
		//{Attribute}
		public Action getAttributeAction_0_0() { return cAttributeAction_0_0; }
		
		//'<value'
		public Keyword getValueKeyword_0_1() { return cValueKeyword_0_1; }
		
		//('type=' type=ValidString)?
		public Group getGroup_0_2() { return cGroup_0_2; }
		
		//'type='
		public Keyword getTypeKeyword_0_2_0() { return cTypeKeyword_0_2_0; }
		
		//type=ValidString
		public Assignment getTypeAssignment_0_2_1() { return cTypeAssignment_0_2_1; }
		
		//ValidString
		public RuleCall getTypeValidStringParserRuleCall_0_2_1_0() { return cTypeValidStringParserRuleCall_0_2_1_0; }
		
		//'>' value=QSTRING '</value>' | '/>'
		public Alternatives getAlternatives_0_3() { return cAlternatives_0_3; }
		
		//'>' value=QSTRING '</value>'
		public Group getGroup_0_3_0() { return cGroup_0_3_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_0_3_0_0() { return cGreaterThanSignKeyword_0_3_0_0; }
		
		//value=QSTRING
		public Assignment getValueAssignment_0_3_0_1() { return cValueAssignment_0_3_0_1; }
		
		//QSTRING
		public RuleCall getValueQSTRINGParserRuleCall_0_3_0_1_0() { return cValueQSTRINGParserRuleCall_0_3_0_1_0; }
		
		//'</value>'
		public Keyword getValueKeyword_0_3_0_2() { return cValueKeyword_0_3_0_2; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_0_3_1() { return cSolidusGreaterThanSignKeyword_0_3_1; }
		
		//UtilConstant
		public RuleCall getUtilConstantParserRuleCall_1() { return cUtilConstantParserRuleCall_1; }
	}
	public class AttributSimpleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.AttributSimple");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueValidStringParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//AttributSimple Attribute:
		//	value=ValidString;
		@Override public ParserRule getRule() { return rule; }
		
		//value=ValidString
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//ValidString
		public RuleCall getValueValidStringParserRuleCall_0() { return cValueValidStringParserRuleCall_0; }
	}
	public class AttributSimpleValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.AttributSimpleValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cValueKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueValidStringParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		
		//AttributSimpleValue Attribute:
		//	'value=' value=ValidString;
		@Override public ParserRule getRule() { return rule; }
		
		//'value=' value=ValidString
		public Group getGroup() { return cGroup; }
		
		//'value='
		public Keyword getValueKeyword_0() { return cValueKeyword_0; }
		
		//value=ValidString
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }
		
		//ValidString
		public RuleCall getValueValidStringParserRuleCall_1_0() { return cValueValidStringParserRuleCall_1_0; }
	}
	public class IdRefTagElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.IdRefTag");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAttributeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cIdrefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cBeanKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueValidStringParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Keyword cSolidusGreaterThanSignKeyword_4_0 = (Keyword)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Keyword cIdrefKeyword_4_1_1 = (Keyword)cGroup_4_1.eContents().get(1);
		
		///** <Idref/> */ IdRefTag Attribute:
		//	{Attribute}
		//	'<idref' 'bean=' value=ValidString ('/>' | '>' '</idref>');
		@Override public ParserRule getRule() { return rule; }
		
		//{Attribute} '<idref' 'bean=' value=ValidString ('/>' | '>' '</idref>')
		public Group getGroup() { return cGroup; }
		
		//{Attribute}
		public Action getAttributeAction_0() { return cAttributeAction_0; }
		
		//'<idref'
		public Keyword getIdrefKeyword_1() { return cIdrefKeyword_1; }
		
		//'bean='
		public Keyword getBeanKeyword_2() { return cBeanKeyword_2; }
		
		//value=ValidString
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//ValidString
		public RuleCall getValueValidStringParserRuleCall_3_0() { return cValueValidStringParserRuleCall_3_0; }
		
		//'/>' | '>' '</idref>'
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_4_0() { return cSolidusGreaterThanSignKeyword_4_0; }
		
		//'>' '</idref>'
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_4_1_0() { return cGreaterThanSignKeyword_4_1_0; }
		
		//'</idref>'
		public Keyword getIdrefKeyword_4_1_1() { return cIdrefKeyword_4_1_1; }
	}
	public class ReferenceAttElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.ReferenceAtt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cReferenceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRefAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cRefComponentCrossReference_2_0 = (CrossReference)cRefAssignment_2.eContents().get(0);
		private final RuleCall cRefComponentValidStringParserRuleCall_2_0_1 = (RuleCall)cRefComponentCrossReference_2_0.eContents().get(1);
		
		///** If Reference is a attribute of <property/>/<Constructor-arg/> */ ReferenceAtt Reference:
		//	{Reference}
		//	'ref=' ref=[Component|ValidString];
		@Override public ParserRule getRule() { return rule; }
		
		//{Reference} 'ref=' ref=[Component|ValidString]
		public Group getGroup() { return cGroup; }
		
		//{Reference}
		public Action getReferenceAction_0() { return cReferenceAction_0; }
		
		//'ref='
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//ref=[Component|ValidString]
		public Assignment getRefAssignment_2() { return cRefAssignment_2; }
		
		//[Component|ValidString]
		public CrossReference getRefComponentCrossReference_2_0() { return cRefComponentCrossReference_2_0; }
		
		//ValidString
		public RuleCall getRefComponentValidStringParserRuleCall_2_0_1() { return cRefComponentValidStringParserRuleCall_2_0_1; }
	}
	public class ReferenceTagElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.ReferenceTag");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cReferenceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cBeanKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRefAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cRefAbstractArtefactCrossReference_3_0 = (CrossReference)cRefAssignment_3.eContents().get(0);
		private final RuleCall cRefAbstractArtefactValidStringParserRuleCall_3_0_1 = (RuleCall)cRefAbstractArtefactCrossReference_3_0.eContents().get(1);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Keyword cSolidusGreaterThanSignKeyword_4_0 = (Keyword)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Keyword cRefKeyword_4_1_1 = (Keyword)cGroup_4_1.eContents().get(1);
		
		///**Reference create by a tag */ ReferenceTag Reference:
		//	{Reference}
		//	'<ref' 'bean=' ref=[AbstractArtefact|ValidString] ('/>' | '>' '</ref>');
		@Override public ParserRule getRule() { return rule; }
		
		//{Reference} '<ref' 'bean=' ref=[AbstractArtefact|ValidString] ('/>' | '>' '</ref>')
		public Group getGroup() { return cGroup; }
		
		//{Reference}
		public Action getReferenceAction_0() { return cReferenceAction_0; }
		
		//'<ref'
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//'bean='
		public Keyword getBeanKeyword_2() { return cBeanKeyword_2; }
		
		//ref=[AbstractArtefact|ValidString]
		public Assignment getRefAssignment_3() { return cRefAssignment_3; }
		
		//[AbstractArtefact|ValidString]
		public CrossReference getRefAbstractArtefactCrossReference_3_0() { return cRefAbstractArtefactCrossReference_3_0; }
		
		//ValidString
		public RuleCall getRefAbstractArtefactValidStringParserRuleCall_3_0_1() { return cRefAbstractArtefactValidStringParserRuleCall_3_0_1; }
		
		//'/>' | '>' '</ref>'
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_4_0() { return cSolidusGreaterThanSignKeyword_4_0; }
		
		//'>' '</ref>'
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_4_1_0() { return cGreaterThanSignKeyword_4_1_0; }
		
		//'</ref>'
		public Keyword getRefKeyword_4_1_1() { return cRefKeyword_4_1_1; }
	}
	public class ReferenceComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.ReferenceComponent");
		private final Assignment cRefAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cRefComponentCrossReference_0 = (CrossReference)cRefAssignment.eContents().get(0);
		private final RuleCall cRefComponentValidStringParserRuleCall_0_1 = (RuleCall)cRefComponentCrossReference_0.eContents().get(1);
		
		//ReferenceComponent Reference:
		//	ref=[Component|ValidString];
		@Override public ParserRule getRule() { return rule; }
		
		//ref=[Component|ValidString]
		public Assignment getRefAssignment() { return cRefAssignment; }
		
		//[Component|ValidString]
		public CrossReference getRefComponentCrossReference_0() { return cRefComponentCrossReference_0; }
		
		//ValidString
		public RuleCall getRefComponentValidStringParserRuleCall_0_1() { return cRefComponentValidStringParserRuleCall_0_1; }
	}
	public class ConstructorArgElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.ConstructorArg");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConstructorArgKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final RuleCall cConstructorArgAttParserRuleCall_1_0_0 = (RuleCall)cGroup_1_0.eContents().get(0);
		private final Alternatives cAlternatives_1_0_1 = (Alternatives)cGroup_1_0.eContents().get(1);
		private final Group cGroup_1_0_1_0 = (Group)cAlternatives_1_0_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_1_0_1_0_0 = (Keyword)cGroup_1_0_1_0.eContents().get(0);
		private final Assignment cDescriptionAssignment_1_0_1_0_1 = (Assignment)cGroup_1_0_1_0.eContents().get(1);
		private final RuleCall cDescriptionDescriptionParserRuleCall_1_0_1_0_1_0 = (RuleCall)cDescriptionAssignment_1_0_1_0_1.eContents().get(0);
		private final Keyword cConstructorArgKeyword_1_0_1_0_2 = (Keyword)cGroup_1_0_1_0.eContents().get(2);
		private final Keyword cSolidusGreaterThanSignKeyword_1_0_1_1 = (Keyword)cAlternatives_1_0_1.eContents().get(1);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Action cFeatureAction_1_1_0 = (Action)cGroup_1_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1_1_1 = (UnorderedGroup)cGroup_1_1.eContents().get(1);
		private final Group cGroup_1_1_1_0 = (Group)cUnorderedGroup_1_1_1.eContents().get(0);
		private final Keyword cIndexKeyword_1_1_1_0_0 = (Keyword)cGroup_1_1_1_0.eContents().get(0);
		private final Assignment cIndexAssignment_1_1_1_0_1 = (Assignment)cGroup_1_1_1_0.eContents().get(1);
		private final RuleCall cIndexValidStringParserRuleCall_1_1_1_0_1_0 = (RuleCall)cIndexAssignment_1_1_1_0_1.eContents().get(0);
		private final Group cGroup_1_1_1_1 = (Group)cUnorderedGroup_1_1_1.eContents().get(1);
		private final Keyword cNameKeyword_1_1_1_1_0 = (Keyword)cGroup_1_1_1_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1_1_1_1 = (Assignment)cGroup_1_1_1_1.eContents().get(1);
		private final RuleCall cNameValidStringParserRuleCall_1_1_1_1_1_0 = (RuleCall)cNameAssignment_1_1_1_1_1.eContents().get(0);
		private final Group cGroup_1_1_1_2 = (Group)cUnorderedGroup_1_1_1.eContents().get(2);
		private final Keyword cTypeKeyword_1_1_1_2_0 = (Keyword)cGroup_1_1_1_2.eContents().get(0);
		private final Assignment cTypeAssignment_1_1_1_2_1 = (Assignment)cGroup_1_1_1_2.eContents().get(1);
		private final RuleCall cTypeValidStringParserRuleCall_1_1_1_2_1_0 = (RuleCall)cTypeAssignment_1_1_1_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_1_1_2 = (Keyword)cGroup_1_1.eContents().get(2);
		private final Assignment cDescriptionAssignment_1_1_3 = (Assignment)cGroup_1_1.eContents().get(3);
		private final RuleCall cDescriptionDescriptionParserRuleCall_1_1_3_0 = (RuleCall)cDescriptionAssignment_1_1_3.eContents().get(0);
		private final Alternatives cAlternatives_1_1_4 = (Alternatives)cGroup_1_1.eContents().get(4);
		private final Assignment cArtefactAssignment_1_1_4_0 = (Assignment)cAlternatives_1_1_4.eContents().get(0);
		private final RuleCall cArtefactAbstractArtefactParserRuleCall_1_1_4_0_0 = (RuleCall)cArtefactAssignment_1_1_4_0.eContents().get(0);
		private final RuleCall cNullTagParserRuleCall_1_1_4_1 = (RuleCall)cAlternatives_1_1_4.eContents().get(1);
		private final Keyword cConstructorArgKeyword_1_1_5 = (Keyword)cGroup_1_1.eContents().get(5);
		
		///** <constructor-arg/>*/ ConstructorArg Feature:
		//	'<constructor-arg' (ConstructorArgAtt ('>' description=Description? '</constructor-arg>' | '/>') | {Feature}
		//	(('index=' index=ValidString)? & ("name=" name=ValidString)? & ("type=" type=ValidString)?) '>'
		//	description=Description? (artefact=AbstractArtefact | NullTag)
		//	'</constructor-arg>');
		@Override public ParserRule getRule() { return rule; }
		
		//'<constructor-arg' (ConstructorArgAtt ('>' description=Description? '</constructor-arg>' | '/>') | {Feature} (('index='
		//index=ValidString)? & ("name=" name=ValidString)? & ("type=" type=ValidString)?) '>' description=Description?
		//(artefact=AbstractArtefact | NullTag) '</constructor-arg>')
		public Group getGroup() { return cGroup; }
		
		//'<constructor-arg'
		public Keyword getConstructorArgKeyword_0() { return cConstructorArgKeyword_0; }
		
		//ConstructorArgAtt ('>' description=Description? '</constructor-arg>' | '/>') | {Feature} (('index=' index=ValidString)?
		//& ("name=" name=ValidString)? & ("type=" type=ValidString)?) '>' description=Description? (artefact=AbstractArtefact |
		//NullTag) '</constructor-arg>'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//ConstructorArgAtt ('>' description=Description? '</constructor-arg>' | '/>')
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//ConstructorArgAtt
		public RuleCall getConstructorArgAttParserRuleCall_1_0_0() { return cConstructorArgAttParserRuleCall_1_0_0; }
		
		//'>' description=Description? '</constructor-arg>' | '/>'
		public Alternatives getAlternatives_1_0_1() { return cAlternatives_1_0_1; }
		
		//'>' description=Description? '</constructor-arg>'
		public Group getGroup_1_0_1_0() { return cGroup_1_0_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_1_0_1_0_0() { return cGreaterThanSignKeyword_1_0_1_0_0; }
		
		//description=Description?
		public Assignment getDescriptionAssignment_1_0_1_0_1() { return cDescriptionAssignment_1_0_1_0_1; }
		
		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_1_0_1_0_1_0() { return cDescriptionDescriptionParserRuleCall_1_0_1_0_1_0; }
		
		//'</constructor-arg>'
		public Keyword getConstructorArgKeyword_1_0_1_0_2() { return cConstructorArgKeyword_1_0_1_0_2; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_1_0_1_1() { return cSolidusGreaterThanSignKeyword_1_0_1_1; }
		
		//{Feature} (('index=' index=ValidString)? & ("name=" name=ValidString)? & ("type=" type=ValidString)?) '>'
		//description=Description? (artefact=AbstractArtefact | NullTag) '</constructor-arg>'
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//{Feature}
		public Action getFeatureAction_1_1_0() { return cFeatureAction_1_1_0; }
		
		//('index=' index=ValidString)? & ("name=" name=ValidString)? & ("type=" type=ValidString)?
		public UnorderedGroup getUnorderedGroup_1_1_1() { return cUnorderedGroup_1_1_1; }
		
		//('index=' index=ValidString)?
		public Group getGroup_1_1_1_0() { return cGroup_1_1_1_0; }
		
		//'index='
		public Keyword getIndexKeyword_1_1_1_0_0() { return cIndexKeyword_1_1_1_0_0; }
		
		//index=ValidString
		public Assignment getIndexAssignment_1_1_1_0_1() { return cIndexAssignment_1_1_1_0_1; }
		
		//ValidString
		public RuleCall getIndexValidStringParserRuleCall_1_1_1_0_1_0() { return cIndexValidStringParserRuleCall_1_1_1_0_1_0; }
		
		//("name=" name=ValidString)?
		public Group getGroup_1_1_1_1() { return cGroup_1_1_1_1; }
		
		//"name="
		public Keyword getNameKeyword_1_1_1_1_0() { return cNameKeyword_1_1_1_1_0; }
		
		//name=ValidString
		public Assignment getNameAssignment_1_1_1_1_1() { return cNameAssignment_1_1_1_1_1; }
		
		//ValidString
		public RuleCall getNameValidStringParserRuleCall_1_1_1_1_1_0() { return cNameValidStringParserRuleCall_1_1_1_1_1_0; }
		
		//("type=" type=ValidString)?
		public Group getGroup_1_1_1_2() { return cGroup_1_1_1_2; }
		
		//"type="
		public Keyword getTypeKeyword_1_1_1_2_0() { return cTypeKeyword_1_1_1_2_0; }
		
		//type=ValidString
		public Assignment getTypeAssignment_1_1_1_2_1() { return cTypeAssignment_1_1_1_2_1; }
		
		//ValidString
		public RuleCall getTypeValidStringParserRuleCall_1_1_1_2_1_0() { return cTypeValidStringParserRuleCall_1_1_1_2_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_1_1_2() { return cGreaterThanSignKeyword_1_1_2; }
		
		//description=Description?
		public Assignment getDescriptionAssignment_1_1_3() { return cDescriptionAssignment_1_1_3; }
		
		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_1_1_3_0() { return cDescriptionDescriptionParserRuleCall_1_1_3_0; }
		
		//artefact=AbstractArtefact | NullTag
		public Alternatives getAlternatives_1_1_4() { return cAlternatives_1_1_4; }
		
		//artefact=AbstractArtefact
		public Assignment getArtefactAssignment_1_1_4_0() { return cArtefactAssignment_1_1_4_0; }
		
		//AbstractArtefact
		public RuleCall getArtefactAbstractArtefactParserRuleCall_1_1_4_0_0() { return cArtefactAbstractArtefactParserRuleCall_1_1_4_0_0; }
		
		//NullTag
		public RuleCall getNullTagParserRuleCall_1_1_4_1() { return cNullTagParserRuleCall_1_1_4_1; }
		
		//'</constructor-arg>'
		public Keyword getConstructorArgKeyword_1_1_5() { return cConstructorArgKeyword_1_1_5; }
	}
	public class ConstructorArgAttElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.ConstructorArgAtt");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cIndexKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cIndexAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cIndexValidStringParserRuleCall_0_1_0 = (RuleCall)cIndexAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cNameKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNameValidStringParserRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		private final Assignment cArtefactAssignment_2 = (Assignment)cUnorderedGroup.eContents().get(2);
		private final RuleCall cArtefactAttributesConsParserRuleCall_2_0 = (RuleCall)cArtefactAssignment_2.eContents().get(0);
		
		///*If the parameter is a attribute */ ConstructorArgAtt Feature:
		//	('index=' index=ValidString)?
		//	& ("name=" name=ValidString)?
		//	& artefact=AttributesCons;
		@Override public ParserRule getRule() { return rule; }
		
		//('index=' index=ValidString)? & ("name=" name=ValidString)? & artefact=AttributesCons
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//('index=' index=ValidString)?
		public Group getGroup_0() { return cGroup_0; }
		
		//'index='
		public Keyword getIndexKeyword_0_0() { return cIndexKeyword_0_0; }
		
		//index=ValidString
		public Assignment getIndexAssignment_0_1() { return cIndexAssignment_0_1; }
		
		//ValidString
		public RuleCall getIndexValidStringParserRuleCall_0_1_0() { return cIndexValidStringParserRuleCall_0_1_0; }
		
		//("name=" name=ValidString)?
		public Group getGroup_1() { return cGroup_1; }
		
		//"name="
		public Keyword getNameKeyword_1_0() { return cNameKeyword_1_0; }
		
		//name=ValidString
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }
		
		//ValidString
		public RuleCall getNameValidStringParserRuleCall_1_1_0() { return cNameValidStringParserRuleCall_1_1_0; }
		
		//artefact=AttributesCons
		public Assignment getArtefactAssignment_2() { return cArtefactAssignment_2; }
		
		//AttributesCons
		public RuleCall getArtefactAttributesConsParserRuleCall_2_0() { return cArtefactAttributesConsParserRuleCall_2_0; }
	}
	public class AttributesConsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.AttributesCons");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cAttributeAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_0_1 = (UnorderedGroup)cGroup_0.eContents().get(1);
		private final Group cGroup_0_1_0 = (Group)cUnorderedGroup_0_1.eContents().get(0);
		private final Keyword cValueKeyword_0_1_0_0 = (Keyword)cGroup_0_1_0.eContents().get(0);
		private final Assignment cValueAssignment_0_1_0_1 = (Assignment)cGroup_0_1_0.eContents().get(1);
		private final RuleCall cValueValidStringParserRuleCall_0_1_0_1_0 = (RuleCall)cValueAssignment_0_1_0_1.eContents().get(0);
		private final Group cGroup_0_1_1 = (Group)cUnorderedGroup_0_1.eContents().get(1);
		private final Keyword cTypeKeyword_0_1_1_0 = (Keyword)cGroup_0_1_1.eContents().get(0);
		private final Assignment cTypeAssignment_0_1_1_1 = (Assignment)cGroup_0_1_1.eContents().get(1);
		private final RuleCall cTypeValidStringParserRuleCall_0_1_1_1_0 = (RuleCall)cTypeAssignment_0_1_1_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cReferenceAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cRefKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cRefAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final CrossReference cRefComponentCrossReference_1_1_1_0 = (CrossReference)cRefAssignment_1_1_1.eContents().get(0);
		private final RuleCall cRefComponentValidStringParserRuleCall_1_1_1_0_1 = (RuleCall)cRefComponentCrossReference_1_1_1_0.eContents().get(1);
		
		//AttributesCons AbstractArtefact:
		//	{Attribute} ('value=' value=ValidString & ('type=' type=ValidString)?) | {Reference} ('ref='
		//	ref=[Component|ValidString]);
		@Override public ParserRule getRule() { return rule; }
		
		//{Attribute} ('value=' value=ValidString & ('type=' type=ValidString)?) | {Reference} ('ref='
		//ref=[Component|ValidString])
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{Attribute} ('value=' value=ValidString & ('type=' type=ValidString)?)
		public Group getGroup_0() { return cGroup_0; }
		
		//{Attribute}
		public Action getAttributeAction_0_0() { return cAttributeAction_0_0; }
		
		//'value=' value=ValidString & ('type=' type=ValidString)?
		public UnorderedGroup getUnorderedGroup_0_1() { return cUnorderedGroup_0_1; }
		
		//'value=' value=ValidString
		public Group getGroup_0_1_0() { return cGroup_0_1_0; }
		
		//'value='
		public Keyword getValueKeyword_0_1_0_0() { return cValueKeyword_0_1_0_0; }
		
		//value=ValidString
		public Assignment getValueAssignment_0_1_0_1() { return cValueAssignment_0_1_0_1; }
		
		//ValidString
		public RuleCall getValueValidStringParserRuleCall_0_1_0_1_0() { return cValueValidStringParserRuleCall_0_1_0_1_0; }
		
		//('type=' type=ValidString)?
		public Group getGroup_0_1_1() { return cGroup_0_1_1; }
		
		//'type='
		public Keyword getTypeKeyword_0_1_1_0() { return cTypeKeyword_0_1_1_0; }
		
		//type=ValidString
		public Assignment getTypeAssignment_0_1_1_1() { return cTypeAssignment_0_1_1_1; }
		
		//ValidString
		public RuleCall getTypeValidStringParserRuleCall_0_1_1_1_0() { return cTypeValidStringParserRuleCall_0_1_1_1_0; }
		
		//{Reference} ('ref=' ref=[Component|ValidString])
		public Group getGroup_1() { return cGroup_1; }
		
		//{Reference}
		public Action getReferenceAction_1_0() { return cReferenceAction_1_0; }
		
		//'ref=' ref=[Component|ValidString]
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'ref='
		public Keyword getRefKeyword_1_1_0() { return cRefKeyword_1_1_0; }
		
		//ref=[Component|ValidString]
		public Assignment getRefAssignment_1_1_1() { return cRefAssignment_1_1_1; }
		
		//[Component|ValidString]
		public CrossReference getRefComponentCrossReference_1_1_1_0() { return cRefComponentCrossReference_1_1_1_0; }
		
		//ValidString
		public RuleCall getRefComponentValidStringParserRuleCall_1_1_1_0_1() { return cRefComponentValidStringParserRuleCall_1_1_1_0_1; }
	}
	public class PNamespaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.PNamespace");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Keyword cRefKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_0_1 = (Keyword)cGroup_2_0.eContents().get(1);
		private final Assignment cArtefactAssignment_2_0_2 = (Assignment)cGroup_2_0.eContents().get(2);
		private final RuleCall cArtefactReferenceComponentParserRuleCall_2_0_2_0 = (RuleCall)cArtefactAssignment_2_0_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cArtefactAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cArtefactAttributSimpleParserRuleCall_2_1_1_0 = (RuleCall)cArtefactAssignment_2_1_1.eContents().get(0);
		
		///*Attribute created in <constructor-arg/> */ /*AttributeAttCons returns Attribute:
		//	{Attribute}
		//	( ( ('value='STRING)& ('type='type=STRING)?)) 
		//;*/ /*Attribute created in <constructor-arg/> */ /*ReferenceAttCons returns Reference:
		//	{Reference}
		//	( ( ('ref='ref=[Component|STRING]) & ('type='STRING)?)) 
		//;*/ PNamespace Feature:
		//	'p:' name=ID ('-ref' '=' artefact=ReferenceComponent | '=' artefact=AttributSimple);
		@Override public ParserRule getRule() { return rule; }
		
		//'p:' name=ID ('-ref' '=' artefact=ReferenceComponent | '=' artefact=AttributSimple)
		public Group getGroup() { return cGroup; }
		
		//'p:'
		public Keyword getPKeyword_0() { return cPKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'-ref' '=' artefact=ReferenceComponent | '=' artefact=AttributSimple
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'-ref' '=' artefact=ReferenceComponent
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'-ref'
		public Keyword getRefKeyword_2_0_0() { return cRefKeyword_2_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_0_1() { return cEqualsSignKeyword_2_0_1; }
		
		//artefact=ReferenceComponent
		public Assignment getArtefactAssignment_2_0_2() { return cArtefactAssignment_2_0_2; }
		
		//ReferenceComponent
		public RuleCall getArtefactReferenceComponentParserRuleCall_2_0_2_0() { return cArtefactReferenceComponentParserRuleCall_2_0_2_0; }
		
		//'=' artefact=AttributSimple
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_1_0() { return cEqualsSignKeyword_2_1_0; }
		
		//artefact=AttributSimple
		public Assignment getArtefactAssignment_2_1_1() { return cArtefactAssignment_2_1_1; }
		
		//AttributSimple
		public RuleCall getArtefactAttributSimpleParserRuleCall_2_1_1_0() { return cArtefactAttributSimpleParserRuleCall_2_1_1_0; }
	}
	public class CNamespaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.CNamespace");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Keyword cRefKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_0_1 = (Keyword)cGroup_2_0.eContents().get(1);
		private final Assignment cArtefactAssignment_2_0_2 = (Assignment)cGroup_2_0.eContents().get(2);
		private final RuleCall cArtefactReferenceComponentParserRuleCall_2_0_2_0 = (RuleCall)cArtefactAssignment_2_0_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cArtefactAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cArtefactAttributSimpleParserRuleCall_2_1_1_0 = (RuleCall)cArtefactAssignment_2_1_1.eContents().get(0);
		
		//CNamespace Feature:
		//	'c:' name=ID ('-ref' '=' artefact=ReferenceComponent | '=' artefact=AttributSimple);
		@Override public ParserRule getRule() { return rule; }
		
		//'c:' name=ID ('-ref' '=' artefact=ReferenceComponent | '=' artefact=AttributSimple)
		public Group getGroup() { return cGroup; }
		
		//'c:'
		public Keyword getCKeyword_0() { return cCKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'-ref' '=' artefact=ReferenceComponent | '=' artefact=AttributSimple
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'-ref' '=' artefact=ReferenceComponent
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'-ref'
		public Keyword getRefKeyword_2_0_0() { return cRefKeyword_2_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_0_1() { return cEqualsSignKeyword_2_0_1; }
		
		//artefact=ReferenceComponent
		public Assignment getArtefactAssignment_2_0_2() { return cArtefactAssignment_2_0_2; }
		
		//ReferenceComponent
		public RuleCall getArtefactReferenceComponentParserRuleCall_2_0_2_0() { return cArtefactReferenceComponentParserRuleCall_2_0_2_0; }
		
		//'=' artefact=AttributSimple
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_1_0() { return cEqualsSignKeyword_2_1_0; }
		
		//artefact=AttributSimple
		public Assignment getArtefactAssignment_2_1_1() { return cArtefactAssignment_2_1_1; }
		
		//AttributSimple
		public RuleCall getArtefactAttributSimpleParserRuleCall_2_1_1_0() { return cArtefactAttributSimpleParserRuleCall_2_1_1_0; }
	}
	public class LookupMethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.LookupMethod");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLookupMethodKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cNameKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cNameAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cNameValidStringParserRuleCall_1_0_1_0 = (RuleCall)cNameAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cBeanKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cRefAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final CrossReference cRefComponentCrossReference_1_1_1_0 = (CrossReference)cRefAssignment_1_1_1.eContents().get(0);
		private final RuleCall cRefComponentValidStringParserRuleCall_1_1_1_0_1 = (RuleCall)cRefComponentCrossReference_1_1_1_0.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cSolidusGreaterThanSignKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cLookupMethodKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		
		//LookupMethod:
		//	'<lookup-method' ('name=' name=ValidString & 'bean=' ref=[Component|ValidString]) ('/>' | '>' '</lookup-method>');
		@Override public ParserRule getRule() { return rule; }
		
		//'<lookup-method' ('name=' name=ValidString & 'bean=' ref=[Component|ValidString]) ('/>' | '>' '</lookup-method>')
		public Group getGroup() { return cGroup; }
		
		//'<lookup-method'
		public Keyword getLookupMethodKeyword_0() { return cLookupMethodKeyword_0; }
		
		//'name=' name=ValidString & 'bean=' ref=[Component|ValidString]
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//'name=' name=ValidString
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'name='
		public Keyword getNameKeyword_1_0_0() { return cNameKeyword_1_0_0; }
		
		//name=ValidString
		public Assignment getNameAssignment_1_0_1() { return cNameAssignment_1_0_1; }
		
		//ValidString
		public RuleCall getNameValidStringParserRuleCall_1_0_1_0() { return cNameValidStringParserRuleCall_1_0_1_0; }
		
		//'bean=' ref=[Component|ValidString]
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'bean='
		public Keyword getBeanKeyword_1_1_0() { return cBeanKeyword_1_1_0; }
		
		//ref=[Component|ValidString]
		public Assignment getRefAssignment_1_1_1() { return cRefAssignment_1_1_1; }
		
		//[Component|ValidString]
		public CrossReference getRefComponentCrossReference_1_1_1_0() { return cRefComponentCrossReference_1_1_1_0; }
		
		//ValidString
		public RuleCall getRefComponentValidStringParserRuleCall_1_1_1_0_1() { return cRefComponentValidStringParserRuleCall_1_1_1_0_1; }
		
		//'/>' | '>' '</lookup-method>'
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_2_0() { return cSolidusGreaterThanSignKeyword_2_0; }
		
		//'>' '</lookup-method>'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_1_0() { return cGreaterThanSignKeyword_2_1_0; }
		
		//'</lookup-method>'
		public Keyword getLookupMethodKeyword_2_1_1() { return cLookupMethodKeyword_2_1_1; }
	}
	public class QualifierElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.Qualifier");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cQualifierKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cTypeKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cTypeAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cTypeValidStringParserRuleCall_1_0_1_0 = (RuleCall)cTypeAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cValueKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cValueAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cValueValidStringParserRuleCall_1_1_1_0 = (RuleCall)cValueAssignment_1_1_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cSolidusGreaterThanSignKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cQualifierAttributesAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cQualifierAttributesQualifierAttributeParserRuleCall_2_1_1_0 = (RuleCall)cQualifierAttributesAssignment_2_1_1.eContents().get(0);
		private final Keyword cQualifierKeyword_2_1_2 = (Keyword)cGroup_2_1.eContents().get(2);
		
		//Qualifier:
		//	'<qualifier' ('type=' type=ValidString & ('value=' value=ValidString)?) ('/>' | '>'
		//	qualifierAttributes+=QualifierAttribute* '</qualifier>');
		@Override public ParserRule getRule() { return rule; }
		
		//'<qualifier' ('type=' type=ValidString & ('value=' value=ValidString)?) ('/>' | '>'
		//qualifierAttributes+=QualifierAttribute* '</qualifier>')
		public Group getGroup() { return cGroup; }
		
		//'<qualifier'
		public Keyword getQualifierKeyword_0() { return cQualifierKeyword_0; }
		
		//'type=' type=ValidString & ('value=' value=ValidString)?
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//'type=' type=ValidString
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'type='
		public Keyword getTypeKeyword_1_0_0() { return cTypeKeyword_1_0_0; }
		
		//type=ValidString
		public Assignment getTypeAssignment_1_0_1() { return cTypeAssignment_1_0_1; }
		
		//ValidString
		public RuleCall getTypeValidStringParserRuleCall_1_0_1_0() { return cTypeValidStringParserRuleCall_1_0_1_0; }
		
		//('value=' value=ValidString)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'value='
		public Keyword getValueKeyword_1_1_0() { return cValueKeyword_1_1_0; }
		
		//value=ValidString
		public Assignment getValueAssignment_1_1_1() { return cValueAssignment_1_1_1; }
		
		//ValidString
		public RuleCall getValueValidStringParserRuleCall_1_1_1_0() { return cValueValidStringParserRuleCall_1_1_1_0; }
		
		//'/>' | '>' qualifierAttributes+=QualifierAttribute* '</qualifier>'
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_2_0() { return cSolidusGreaterThanSignKeyword_2_0; }
		
		//'>' qualifierAttributes+=QualifierAttribute* '</qualifier>'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_1_0() { return cGreaterThanSignKeyword_2_1_0; }
		
		//qualifierAttributes+=QualifierAttribute*
		public Assignment getQualifierAttributesAssignment_2_1_1() { return cQualifierAttributesAssignment_2_1_1; }
		
		//QualifierAttribute
		public RuleCall getQualifierAttributesQualifierAttributeParserRuleCall_2_1_1_0() { return cQualifierAttributesQualifierAttributeParserRuleCall_2_1_1_0; }
		
		//'</qualifier>'
		public Keyword getQualifierKeyword_2_1_2() { return cQualifierKeyword_2_1_2; }
	}
	public class MetaTagElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.MetaTag");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMetaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cKeyKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cKeyAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cKeyValidStringParserRuleCall_1_0_1_0 = (RuleCall)cKeyAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cValueKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cValueAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cValueValidStringParserRuleCall_1_1_1_0 = (RuleCall)cValueAssignment_1_1_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cSolidusGreaterThanSignKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cMetaKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		
		//MetaTag Meta:
		//	'<meta' ('key=' key=ValidString & 'value=' value=ValidString) ('/>' | '>' '</meta>');
		@Override public ParserRule getRule() { return rule; }
		
		//'<meta' ('key=' key=ValidString & 'value=' value=ValidString) ('/>' | '>' '</meta>')
		public Group getGroup() { return cGroup; }
		
		//'<meta'
		public Keyword getMetaKeyword_0() { return cMetaKeyword_0; }
		
		//'key=' key=ValidString & 'value=' value=ValidString
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//'key=' key=ValidString
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'key='
		public Keyword getKeyKeyword_1_0_0() { return cKeyKeyword_1_0_0; }
		
		//key=ValidString
		public Assignment getKeyAssignment_1_0_1() { return cKeyAssignment_1_0_1; }
		
		//ValidString
		public RuleCall getKeyValidStringParserRuleCall_1_0_1_0() { return cKeyValidStringParserRuleCall_1_0_1_0; }
		
		//'value=' value=ValidString
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'value='
		public Keyword getValueKeyword_1_1_0() { return cValueKeyword_1_1_0; }
		
		//value=ValidString
		public Assignment getValueAssignment_1_1_1() { return cValueAssignment_1_1_1; }
		
		//ValidString
		public RuleCall getValueValidStringParserRuleCall_1_1_1_0() { return cValueValidStringParserRuleCall_1_1_1_0; }
		
		//'/>' | '>' '</meta>'
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_2_0() { return cSolidusGreaterThanSignKeyword_2_0; }
		
		//'>' '</meta>'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_1_0() { return cGreaterThanSignKeyword_2_1_0; }
		
		//'</meta>'
		public Keyword getMetaKeyword_2_1_1() { return cMetaKeyword_2_1_1; }
	}
	public class QualifierAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.QualifierAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cKeyKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cKeyAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cKeyValidStringParserRuleCall_1_0_1_0 = (RuleCall)cKeyAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cValueKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cValueAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cValueValidStringParserRuleCall_1_1_1_0 = (RuleCall)cValueAssignment_1_1_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cSolidusGreaterThanSignKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cAttributeKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		
		//QualifierAttribute:
		//	'<attribute' ('key=' key=ValidString & 'value=' value=ValidString) ('/>' | '>' '</attribute>');
		@Override public ParserRule getRule() { return rule; }
		
		//'<attribute' ('key=' key=ValidString & 'value=' value=ValidString) ('/>' | '>' '</attribute>')
		public Group getGroup() { return cGroup; }
		
		//'<attribute'
		public Keyword getAttributeKeyword_0() { return cAttributeKeyword_0; }
		
		//'key=' key=ValidString & 'value=' value=ValidString
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//'key=' key=ValidString
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'key='
		public Keyword getKeyKeyword_1_0_0() { return cKeyKeyword_1_0_0; }
		
		//key=ValidString
		public Assignment getKeyAssignment_1_0_1() { return cKeyAssignment_1_0_1; }
		
		//ValidString
		public RuleCall getKeyValidStringParserRuleCall_1_0_1_0() { return cKeyValidStringParserRuleCall_1_0_1_0; }
		
		//'value=' value=ValidString
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'value='
		public Keyword getValueKeyword_1_1_0() { return cValueKeyword_1_1_0; }
		
		//value=ValidString
		public Assignment getValueAssignment_1_1_1() { return cValueAssignment_1_1_1; }
		
		//ValidString
		public RuleCall getValueValidStringParserRuleCall_1_1_1_0() { return cValueValidStringParserRuleCall_1_1_1_0; }
		
		//'/>' | '>' '</attribute>'
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_2_0() { return cSolidusGreaterThanSignKeyword_2_0; }
		
		//'>' '</attribute>'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_1_0() { return cGreaterThanSignKeyword_2_1_0; }
		
		//'</attribute>'
		public Keyword getAttributeKeyword_2_1_1() { return cAttributeKeyword_2_1_1; }
	}
	public class SListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.sList");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cSListAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final Keyword cListKeyword_0_1_0 = (Keyword)cGroup_0_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_0_1_1 = (UnorderedGroup)cGroup_0_1.eContents().get(1);
		private final Group cGroup_0_1_1_0 = (Group)cUnorderedGroup_0_1_1.eContents().get(0);
		private final Keyword cValueTypeKeyword_0_1_1_0_0 = (Keyword)cGroup_0_1_1_0.eContents().get(0);
		private final Assignment cValueTypeAssignment_0_1_1_0_1 = (Assignment)cGroup_0_1_1_0.eContents().get(1);
		private final RuleCall cValueTypeValidStringParserRuleCall_0_1_1_0_1_0 = (RuleCall)cValueTypeAssignment_0_1_1_0_1.eContents().get(0);
		private final Group cGroup_0_1_1_1 = (Group)cUnorderedGroup_0_1_1.eContents().get(1);
		private final Keyword cMergeKeyword_0_1_1_1_0 = (Keyword)cGroup_0_1_1_1.eContents().get(0);
		private final Assignment cMergeAssignment_0_1_1_1_1 = (Assignment)cGroup_0_1_1_1.eContents().get(1);
		private final RuleCall cMergeDefaultableBooleanEnumRuleCall_0_1_1_1_1_0 = (RuleCall)cMergeAssignment_0_1_1_1_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_0_1_2 = (Keyword)cGroup_0_1.eContents().get(2);
		private final Assignment cDescriptionAssignment_0_1_3 = (Assignment)cGroup_0_1.eContents().get(3);
		private final RuleCall cDescriptionDescriptionParserRuleCall_0_1_3_0 = (RuleCall)cDescriptionAssignment_0_1_3.eContents().get(0);
		private final Alternatives cAlternatives_0_1_4 = (Alternatives)cGroup_0_1.eContents().get(4);
		private final Assignment cArtefactsAssignment_0_1_4_0 = (Assignment)cAlternatives_0_1_4.eContents().get(0);
		private final RuleCall cArtefactsAbstractArtefactParserRuleCall_0_1_4_0_0 = (RuleCall)cArtefactsAssignment_0_1_4_0.eContents().get(0);
		private final RuleCall cNullTagParserRuleCall_0_1_4_1 = (RuleCall)cAlternatives_0_1_4.eContents().get(1);
		private final Keyword cListKeyword_0_1_5 = (Keyword)cGroup_0_1.eContents().get(5);
		private final RuleCall cUtilListParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///*<list/> */ sList:
		//	{sList} ('<list' (('value-type=' valueType=ValidString)? & ('merge=' merge=DefaultableBoolean)?) '>'
		//	description=Description? (artefacts+=AbstractArtefact | NullTag)*
		//	'</list>') | UtilList;
		@Override public ParserRule getRule() { return rule; }
		
		//{sList} ('<list' (('value-type=' valueType=ValidString)? & ('merge=' merge=DefaultableBoolean)?) '>'
		//description=Description? (artefacts+=AbstractArtefact | NullTag)* '</list>') | UtilList
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{sList} ('<list' (('value-type=' valueType=ValidString)? & ('merge=' merge=DefaultableBoolean)?) '>'
		//description=Description? (artefacts+=AbstractArtefact | NullTag)* '</list>')
		public Group getGroup_0() { return cGroup_0; }
		
		//{sList}
		public Action getSListAction_0_0() { return cSListAction_0_0; }
		
		//'<list' (('value-type=' valueType=ValidString)? & ('merge=' merge=DefaultableBoolean)?) '>' description=Description?
		//(artefacts+=AbstractArtefact | NullTag)* '</list>'
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//'<list'
		public Keyword getListKeyword_0_1_0() { return cListKeyword_0_1_0; }
		
		//('value-type=' valueType=ValidString)? & ('merge=' merge=DefaultableBoolean)?
		public UnorderedGroup getUnorderedGroup_0_1_1() { return cUnorderedGroup_0_1_1; }
		
		//('value-type=' valueType=ValidString)?
		public Group getGroup_0_1_1_0() { return cGroup_0_1_1_0; }
		
		//'value-type='
		public Keyword getValueTypeKeyword_0_1_1_0_0() { return cValueTypeKeyword_0_1_1_0_0; }
		
		//valueType=ValidString
		public Assignment getValueTypeAssignment_0_1_1_0_1() { return cValueTypeAssignment_0_1_1_0_1; }
		
		//ValidString
		public RuleCall getValueTypeValidStringParserRuleCall_0_1_1_0_1_0() { return cValueTypeValidStringParserRuleCall_0_1_1_0_1_0; }
		
		//('merge=' merge=DefaultableBoolean)?
		public Group getGroup_0_1_1_1() { return cGroup_0_1_1_1; }
		
		//'merge='
		public Keyword getMergeKeyword_0_1_1_1_0() { return cMergeKeyword_0_1_1_1_0; }
		
		//merge=DefaultableBoolean
		public Assignment getMergeAssignment_0_1_1_1_1() { return cMergeAssignment_0_1_1_1_1; }
		
		//DefaultableBoolean
		public RuleCall getMergeDefaultableBooleanEnumRuleCall_0_1_1_1_1_0() { return cMergeDefaultableBooleanEnumRuleCall_0_1_1_1_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_0_1_2() { return cGreaterThanSignKeyword_0_1_2; }
		
		//description=Description?
		public Assignment getDescriptionAssignment_0_1_3() { return cDescriptionAssignment_0_1_3; }
		
		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_0_1_3_0() { return cDescriptionDescriptionParserRuleCall_0_1_3_0; }
		
		//(artefacts+=AbstractArtefact | NullTag)*
		public Alternatives getAlternatives_0_1_4() { return cAlternatives_0_1_4; }
		
		//artefacts+=AbstractArtefact
		public Assignment getArtefactsAssignment_0_1_4_0() { return cArtefactsAssignment_0_1_4_0; }
		
		//AbstractArtefact
		public RuleCall getArtefactsAbstractArtefactParserRuleCall_0_1_4_0_0() { return cArtefactsAbstractArtefactParserRuleCall_0_1_4_0_0; }
		
		//NullTag
		public RuleCall getNullTagParserRuleCall_0_1_4_1() { return cNullTagParserRuleCall_0_1_4_1; }
		
		//'</list>'
		public Keyword getListKeyword_0_1_5() { return cListKeyword_0_1_5; }
		
		//UtilList
		public RuleCall getUtilListParserRuleCall_1() { return cUtilListParserRuleCall_1; }
	}
	public class SSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.sSet");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cSSetAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final Keyword cSetKeyword_0_1_0 = (Keyword)cGroup_0_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_0_1_1 = (UnorderedGroup)cGroup_0_1.eContents().get(1);
		private final Group cGroup_0_1_1_0 = (Group)cUnorderedGroup_0_1_1.eContents().get(0);
		private final Keyword cValueTypeKeyword_0_1_1_0_0 = (Keyword)cGroup_0_1_1_0.eContents().get(0);
		private final Assignment cValueTypeAssignment_0_1_1_0_1 = (Assignment)cGroup_0_1_1_0.eContents().get(1);
		private final RuleCall cValueTypeValidStringParserRuleCall_0_1_1_0_1_0 = (RuleCall)cValueTypeAssignment_0_1_1_0_1.eContents().get(0);
		private final Group cGroup_0_1_1_1 = (Group)cUnorderedGroup_0_1_1.eContents().get(1);
		private final Keyword cMergeKeyword_0_1_1_1_0 = (Keyword)cGroup_0_1_1_1.eContents().get(0);
		private final Assignment cMergeAssignment_0_1_1_1_1 = (Assignment)cGroup_0_1_1_1.eContents().get(1);
		private final RuleCall cMergeDefaultableBooleanEnumRuleCall_0_1_1_1_1_0 = (RuleCall)cMergeAssignment_0_1_1_1_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_0_1_2 = (Keyword)cGroup_0_1.eContents().get(2);
		private final Assignment cDescriptionAssignment_0_1_3 = (Assignment)cGroup_0_1.eContents().get(3);
		private final RuleCall cDescriptionDescriptionParserRuleCall_0_1_3_0 = (RuleCall)cDescriptionAssignment_0_1_3.eContents().get(0);
		private final Alternatives cAlternatives_0_1_4 = (Alternatives)cGroup_0_1.eContents().get(4);
		private final Assignment cArtefactsAssignment_0_1_4_0 = (Assignment)cAlternatives_0_1_4.eContents().get(0);
		private final RuleCall cArtefactsAbstractArtefactParserRuleCall_0_1_4_0_0 = (RuleCall)cArtefactsAssignment_0_1_4_0.eContents().get(0);
		private final RuleCall cNullTagParserRuleCall_0_1_4_1 = (RuleCall)cAlternatives_0_1_4.eContents().get(1);
		private final Keyword cSetKeyword_0_1_5 = (Keyword)cGroup_0_1.eContents().get(5);
		private final RuleCall cUtilSetParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///*<set/> */ sSet:
		//	{sSet} ('<set' (('value-type=' valueType=ValidString)? & ('merge=' merge=DefaultableBoolean)?) '>'
		//	description=Description? (artefacts+=AbstractArtefact | NullTag)*
		//	'</set>') | UtilSet;
		@Override public ParserRule getRule() { return rule; }
		
		//{sSet} ('<set' (('value-type=' valueType=ValidString)? & ('merge=' merge=DefaultableBoolean)?) '>'
		//description=Description? (artefacts+=AbstractArtefact | NullTag)* '</set>') | UtilSet
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{sSet} ('<set' (('value-type=' valueType=ValidString)? & ('merge=' merge=DefaultableBoolean)?) '>'
		//description=Description? (artefacts+=AbstractArtefact | NullTag)* '</set>')
		public Group getGroup_0() { return cGroup_0; }
		
		//{sSet}
		public Action getSSetAction_0_0() { return cSSetAction_0_0; }
		
		//'<set' (('value-type=' valueType=ValidString)? & ('merge=' merge=DefaultableBoolean)?) '>' description=Description?
		//(artefacts+=AbstractArtefact | NullTag)* '</set>'
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//'<set'
		public Keyword getSetKeyword_0_1_0() { return cSetKeyword_0_1_0; }
		
		//('value-type=' valueType=ValidString)? & ('merge=' merge=DefaultableBoolean)?
		public UnorderedGroup getUnorderedGroup_0_1_1() { return cUnorderedGroup_0_1_1; }
		
		//('value-type=' valueType=ValidString)?
		public Group getGroup_0_1_1_0() { return cGroup_0_1_1_0; }
		
		//'value-type='
		public Keyword getValueTypeKeyword_0_1_1_0_0() { return cValueTypeKeyword_0_1_1_0_0; }
		
		//valueType=ValidString
		public Assignment getValueTypeAssignment_0_1_1_0_1() { return cValueTypeAssignment_0_1_1_0_1; }
		
		//ValidString
		public RuleCall getValueTypeValidStringParserRuleCall_0_1_1_0_1_0() { return cValueTypeValidStringParserRuleCall_0_1_1_0_1_0; }
		
		//('merge=' merge=DefaultableBoolean)?
		public Group getGroup_0_1_1_1() { return cGroup_0_1_1_1; }
		
		//'merge='
		public Keyword getMergeKeyword_0_1_1_1_0() { return cMergeKeyword_0_1_1_1_0; }
		
		//merge=DefaultableBoolean
		public Assignment getMergeAssignment_0_1_1_1_1() { return cMergeAssignment_0_1_1_1_1; }
		
		//DefaultableBoolean
		public RuleCall getMergeDefaultableBooleanEnumRuleCall_0_1_1_1_1_0() { return cMergeDefaultableBooleanEnumRuleCall_0_1_1_1_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_0_1_2() { return cGreaterThanSignKeyword_0_1_2; }
		
		//description=Description?
		public Assignment getDescriptionAssignment_0_1_3() { return cDescriptionAssignment_0_1_3; }
		
		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_0_1_3_0() { return cDescriptionDescriptionParserRuleCall_0_1_3_0; }
		
		//(artefacts+=AbstractArtefact | NullTag)*
		public Alternatives getAlternatives_0_1_4() { return cAlternatives_0_1_4; }
		
		//artefacts+=AbstractArtefact
		public Assignment getArtefactsAssignment_0_1_4_0() { return cArtefactsAssignment_0_1_4_0; }
		
		//AbstractArtefact
		public RuleCall getArtefactsAbstractArtefactParserRuleCall_0_1_4_0_0() { return cArtefactsAbstractArtefactParserRuleCall_0_1_4_0_0; }
		
		//NullTag
		public RuleCall getNullTagParserRuleCall_0_1_4_1() { return cNullTagParserRuleCall_0_1_4_1; }
		
		//'</set>'
		public Keyword getSetKeyword_0_1_5() { return cSetKeyword_0_1_5; }
		
		//UtilSet
		public RuleCall getUtilSetParserRuleCall_1() { return cUtilSetParserRuleCall_1; }
	}
	public class PropsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.Props");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cPropsAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final Keyword cPropsKeyword_0_1_0 = (Keyword)cGroup_0_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_0_1_1 = (UnorderedGroup)cGroup_0_1.eContents().get(1);
		private final Group cGroup_0_1_1_0 = (Group)cUnorderedGroup_0_1_1.eContents().get(0);
		private final Keyword cValueTypeKeyword_0_1_1_0_0 = (Keyword)cGroup_0_1_1_0.eContents().get(0);
		private final Assignment cValueTypeAssignment_0_1_1_0_1 = (Assignment)cGroup_0_1_1_0.eContents().get(1);
		private final RuleCall cValueTypeValidStringParserRuleCall_0_1_1_0_1_0 = (RuleCall)cValueTypeAssignment_0_1_1_0_1.eContents().get(0);
		private final Group cGroup_0_1_1_1 = (Group)cUnorderedGroup_0_1_1.eContents().get(1);
		private final Keyword cMergeKeyword_0_1_1_1_0 = (Keyword)cGroup_0_1_1_1.eContents().get(0);
		private final Assignment cMergeAssignment_0_1_1_1_1 = (Assignment)cGroup_0_1_1_1.eContents().get(1);
		private final RuleCall cMergeDefaultableBooleanEnumRuleCall_0_1_1_1_1_0 = (RuleCall)cMergeAssignment_0_1_1_1_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_0_1_2 = (Keyword)cGroup_0_1.eContents().get(2);
		private final Assignment cDescriptionAssignment_0_1_3 = (Assignment)cGroup_0_1.eContents().get(3);
		private final RuleCall cDescriptionDescriptionParserRuleCall_0_1_3_0 = (RuleCall)cDescriptionAssignment_0_1_3.eContents().get(0);
		private final Assignment cPropsAssignment_0_1_4 = (Assignment)cGroup_0_1.eContents().get(4);
		private final RuleCall cPropsPropParserRuleCall_0_1_4_0 = (RuleCall)cPropsAssignment_0_1_4.eContents().get(0);
		private final Keyword cPropsKeyword_0_1_5 = (Keyword)cGroup_0_1.eContents().get(5);
		private final RuleCall cUtilPropertiesParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///*<props/> */ Props:
		//	{Props} ('<props' (('value-type=' valueType=ValidString)? & ('merge=' merge=DefaultableBoolean)?) '>'
		//	description=Description?
		//	props+=Prop*
		//	'</props>') | UtilProperties;
		@Override public ParserRule getRule() { return rule; }
		
		//{Props} ('<props' (('value-type=' valueType=ValidString)? & ('merge=' merge=DefaultableBoolean)?) '>'
		//description=Description? props+=Prop* '</props>') | UtilProperties
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{Props} ('<props' (('value-type=' valueType=ValidString)? & ('merge=' merge=DefaultableBoolean)?) '>'
		//description=Description? props+=Prop* '</props>')
		public Group getGroup_0() { return cGroup_0; }
		
		//{Props}
		public Action getPropsAction_0_0() { return cPropsAction_0_0; }
		
		//'<props' (('value-type=' valueType=ValidString)? & ('merge=' merge=DefaultableBoolean)?) '>' description=Description?
		//props+=Prop* '</props>'
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//'<props'
		public Keyword getPropsKeyword_0_1_0() { return cPropsKeyword_0_1_0; }
		
		//('value-type=' valueType=ValidString)? & ('merge=' merge=DefaultableBoolean)?
		public UnorderedGroup getUnorderedGroup_0_1_1() { return cUnorderedGroup_0_1_1; }
		
		//('value-type=' valueType=ValidString)?
		public Group getGroup_0_1_1_0() { return cGroup_0_1_1_0; }
		
		//'value-type='
		public Keyword getValueTypeKeyword_0_1_1_0_0() { return cValueTypeKeyword_0_1_1_0_0; }
		
		//valueType=ValidString
		public Assignment getValueTypeAssignment_0_1_1_0_1() { return cValueTypeAssignment_0_1_1_0_1; }
		
		//ValidString
		public RuleCall getValueTypeValidStringParserRuleCall_0_1_1_0_1_0() { return cValueTypeValidStringParserRuleCall_0_1_1_0_1_0; }
		
		//('merge=' merge=DefaultableBoolean)?
		public Group getGroup_0_1_1_1() { return cGroup_0_1_1_1; }
		
		//'merge='
		public Keyword getMergeKeyword_0_1_1_1_0() { return cMergeKeyword_0_1_1_1_0; }
		
		//merge=DefaultableBoolean
		public Assignment getMergeAssignment_0_1_1_1_1() { return cMergeAssignment_0_1_1_1_1; }
		
		//DefaultableBoolean
		public RuleCall getMergeDefaultableBooleanEnumRuleCall_0_1_1_1_1_0() { return cMergeDefaultableBooleanEnumRuleCall_0_1_1_1_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_0_1_2() { return cGreaterThanSignKeyword_0_1_2; }
		
		//description=Description?
		public Assignment getDescriptionAssignment_0_1_3() { return cDescriptionAssignment_0_1_3; }
		
		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_0_1_3_0() { return cDescriptionDescriptionParserRuleCall_0_1_3_0; }
		
		//props+=Prop*
		public Assignment getPropsAssignment_0_1_4() { return cPropsAssignment_0_1_4; }
		
		//Prop
		public RuleCall getPropsPropParserRuleCall_0_1_4_0() { return cPropsPropParserRuleCall_0_1_4_0; }
		
		//'</props>'
		public Keyword getPropsKeyword_0_1_5() { return cPropsKeyword_0_1_5; }
		
		//UtilProperties
		public RuleCall getUtilPropertiesParserRuleCall_1() { return cUtilPropertiesParserRuleCall_1; }
	}
	public class PropElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.Prop");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPropKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cKeyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cKeyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cKeyValidStringParserRuleCall_2_0 = (RuleCall)cKeyAssignment_2.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueQSTRINGParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		private final Keyword cPropKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		///*<prop/> */ Prop:
		//	'<prop' 'key=' key=ValidString '>' value=QSTRING '</prop>';
		@Override public ParserRule getRule() { return rule; }
		
		//'<prop' 'key=' key=ValidString '>' value=QSTRING '</prop>'
		public Group getGroup() { return cGroup; }
		
		//'<prop'
		public Keyword getPropKeyword_0() { return cPropKeyword_0; }
		
		//'key='
		public Keyword getKeyKeyword_1() { return cKeyKeyword_1; }
		
		//key=ValidString
		public Assignment getKeyAssignment_2() { return cKeyAssignment_2; }
		
		//ValidString
		public RuleCall getKeyValidStringParserRuleCall_2_0() { return cKeyValidStringParserRuleCall_2_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_3() { return cGreaterThanSignKeyword_3; }
		
		//value=QSTRING
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }
		
		//QSTRING
		public RuleCall getValueQSTRINGParserRuleCall_4_0() { return cValueQSTRINGParserRuleCall_4_0; }
		
		//'</prop>'
		public Keyword getPropKeyword_5() { return cPropKeyword_5; }
	}
	public class MapElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.Map");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cMapAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final Keyword cMapKeyword_0_1_0 = (Keyword)cGroup_0_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_0_1_1 = (UnorderedGroup)cGroup_0_1.eContents().get(1);
		private final Group cGroup_0_1_1_0 = (Group)cUnorderedGroup_0_1_1.eContents().get(0);
		private final Keyword cKeyTypeKeyword_0_1_1_0_0 = (Keyword)cGroup_0_1_1_0.eContents().get(0);
		private final Assignment cKeyTypeAssignment_0_1_1_0_1 = (Assignment)cGroup_0_1_1_0.eContents().get(1);
		private final RuleCall cKeyTypeValidStringParserRuleCall_0_1_1_0_1_0 = (RuleCall)cKeyTypeAssignment_0_1_1_0_1.eContents().get(0);
		private final Group cGroup_0_1_1_1 = (Group)cUnorderedGroup_0_1_1.eContents().get(1);
		private final Keyword cMergeKeyword_0_1_1_1_0 = (Keyword)cGroup_0_1_1_1.eContents().get(0);
		private final Assignment cMergeAssignment_0_1_1_1_1 = (Assignment)cGroup_0_1_1_1.eContents().get(1);
		private final RuleCall cMergeDefaultableBooleanEnumRuleCall_0_1_1_1_1_0 = (RuleCall)cMergeAssignment_0_1_1_1_1.eContents().get(0);
		private final Group cGroup_0_1_1_2 = (Group)cUnorderedGroup_0_1_1.eContents().get(2);
		private final Keyword cValueTypeKeyword_0_1_1_2_0 = (Keyword)cGroup_0_1_1_2.eContents().get(0);
		private final Assignment cValueTypeAssignment_0_1_1_2_1 = (Assignment)cGroup_0_1_1_2.eContents().get(1);
		private final RuleCall cValueTypeValidStringParserRuleCall_0_1_1_2_1_0 = (RuleCall)cValueTypeAssignment_0_1_1_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_0_1_2 = (Keyword)cGroup_0_1.eContents().get(2);
		private final Assignment cDescriptionAssignment_0_1_3 = (Assignment)cGroup_0_1.eContents().get(3);
		private final RuleCall cDescriptionDescriptionParserRuleCall_0_1_3_0 = (RuleCall)cDescriptionAssignment_0_1_3.eContents().get(0);
		private final Assignment cEntriesAssignment_0_1_4 = (Assignment)cGroup_0_1.eContents().get(4);
		private final RuleCall cEntriesMapEntryParserRuleCall_0_1_4_0 = (RuleCall)cEntriesAssignment_0_1_4.eContents().get(0);
		private final Keyword cMapKeyword_0_1_5 = (Keyword)cGroup_0_1.eContents().get(5);
		private final RuleCall cUtilMapParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///*<map/> */ Map:
		//	{Map} ('<map' (('key-type=' keyType=ValidString)? & ('merge=' merge=DefaultableBoolean)? & ('value-type='
		//	valueType=ValidString)?) '>'
		//	description=Description?
		//	entries+=MapEntry*
		//	'</map>') | UtilMap;
		@Override public ParserRule getRule() { return rule; }
		
		//{Map} ('<map' (('key-type=' keyType=ValidString)? & ('merge=' merge=DefaultableBoolean)? & ('value-type='
		//valueType=ValidString)?) '>' description=Description? entries+=MapEntry* '</map>') | UtilMap
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{Map} ('<map' (('key-type=' keyType=ValidString)? & ('merge=' merge=DefaultableBoolean)? & ('value-type='
		//valueType=ValidString)?) '>' description=Description? entries+=MapEntry* '</map>')
		public Group getGroup_0() { return cGroup_0; }
		
		//{Map}
		public Action getMapAction_0_0() { return cMapAction_0_0; }
		
		//'<map' (('key-type=' keyType=ValidString)? & ('merge=' merge=DefaultableBoolean)? & ('value-type='
		//valueType=ValidString)?) '>' description=Description? entries+=MapEntry* '</map>'
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//'<map'
		public Keyword getMapKeyword_0_1_0() { return cMapKeyword_0_1_0; }
		
		//('key-type=' keyType=ValidString)? & ('merge=' merge=DefaultableBoolean)? & ('value-type=' valueType=ValidString)?
		public UnorderedGroup getUnorderedGroup_0_1_1() { return cUnorderedGroup_0_1_1; }
		
		//('key-type=' keyType=ValidString)?
		public Group getGroup_0_1_1_0() { return cGroup_0_1_1_0; }
		
		//'key-type='
		public Keyword getKeyTypeKeyword_0_1_1_0_0() { return cKeyTypeKeyword_0_1_1_0_0; }
		
		//keyType=ValidString
		public Assignment getKeyTypeAssignment_0_1_1_0_1() { return cKeyTypeAssignment_0_1_1_0_1; }
		
		//ValidString
		public RuleCall getKeyTypeValidStringParserRuleCall_0_1_1_0_1_0() { return cKeyTypeValidStringParserRuleCall_0_1_1_0_1_0; }
		
		//('merge=' merge=DefaultableBoolean)?
		public Group getGroup_0_1_1_1() { return cGroup_0_1_1_1; }
		
		//'merge='
		public Keyword getMergeKeyword_0_1_1_1_0() { return cMergeKeyword_0_1_1_1_0; }
		
		//merge=DefaultableBoolean
		public Assignment getMergeAssignment_0_1_1_1_1() { return cMergeAssignment_0_1_1_1_1; }
		
		//DefaultableBoolean
		public RuleCall getMergeDefaultableBooleanEnumRuleCall_0_1_1_1_1_0() { return cMergeDefaultableBooleanEnumRuleCall_0_1_1_1_1_0; }
		
		//('value-type=' valueType=ValidString)?
		public Group getGroup_0_1_1_2() { return cGroup_0_1_1_2; }
		
		//'value-type='
		public Keyword getValueTypeKeyword_0_1_1_2_0() { return cValueTypeKeyword_0_1_1_2_0; }
		
		//valueType=ValidString
		public Assignment getValueTypeAssignment_0_1_1_2_1() { return cValueTypeAssignment_0_1_1_2_1; }
		
		//ValidString
		public RuleCall getValueTypeValidStringParserRuleCall_0_1_1_2_1_0() { return cValueTypeValidStringParserRuleCall_0_1_1_2_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_0_1_2() { return cGreaterThanSignKeyword_0_1_2; }
		
		//description=Description?
		public Assignment getDescriptionAssignment_0_1_3() { return cDescriptionAssignment_0_1_3; }
		
		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_0_1_3_0() { return cDescriptionDescriptionParserRuleCall_0_1_3_0; }
		
		//entries+=MapEntry*
		public Assignment getEntriesAssignment_0_1_4() { return cEntriesAssignment_0_1_4; }
		
		//MapEntry
		public RuleCall getEntriesMapEntryParserRuleCall_0_1_4_0() { return cEntriesMapEntryParserRuleCall_0_1_4_0; }
		
		//'</map>'
		public Keyword getMapKeyword_0_1_5() { return cMapKeyword_0_1_5; }
		
		//UtilMap
		public RuleCall getUtilMapParserRuleCall_1() { return cUtilMapParserRuleCall_1; }
	}
	public class MapEntryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.MapEntry");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEntryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cAlternatives_1.eContents().get(0);
		private final RuleCall cMapEntryKeyParserRuleCall_1_0_0 = (RuleCall)cAlternatives_1_0.eContents().get(0);
		private final RuleCall cMapEntryValueParserRuleCall_1_0_1 = (RuleCall)cAlternatives_1_0.eContents().get(1);
		private final RuleCall cMapEntryAttParserRuleCall_1_0_2 = (RuleCall)cAlternatives_1_0.eContents().get(2);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cKeyAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cKeyKeyParserRuleCall_1_1_1_0 = (RuleCall)cKeyAssignment_1_1_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1_2 = (Alternatives)cGroup_1_1.eContents().get(2);
		private final Assignment cValueAssignment_1_1_2_0 = (Assignment)cAlternatives_1_1_2.eContents().get(0);
		private final RuleCall cValueAbstractArtefactParserRuleCall_1_1_2_0_0 = (RuleCall)cValueAssignment_1_1_2_0.eContents().get(0);
		private final RuleCall cNullTagParserRuleCall_1_1_2_1 = (RuleCall)cAlternatives_1_1_2.eContents().get(1);
		private final Assignment cDescriptionAssignment_1_1_3 = (Assignment)cGroup_1_1.eContents().get(3);
		private final RuleCall cDescriptionDescriptionParserRuleCall_1_1_3_0 = (RuleCall)cDescriptionAssignment_1_1_3.eContents().get(0);
		private final Keyword cEntryKeyword_1_1_4 = (Keyword)cGroup_1_1.eContents().get(4);
		
		///*Entries for map  */ MapEntry:
		//	'<entry' ((MapEntryKey | MapEntryValue | MapEntryAtt) |
		//	/*('value-type='valueType=ValidString)?*/ '>'
		//	key=Key (value=AbstractArtefact | NullTag) description=Description?
		//	'</entry>');
		@Override public ParserRule getRule() { return rule; }
		
		//'<entry' ((MapEntryKey | MapEntryValue | MapEntryAtt) | /*('value-type='valueType=ValidString)?*/ '>' key=Key
		//(value=AbstractArtefact | NullTag) description=Description? '</entry>')
		public Group getGroup() { return cGroup; }
		
		//'<entry'
		public Keyword getEntryKeyword_0() { return cEntryKeyword_0; }
		
		//(MapEntryKey | MapEntryValue | MapEntryAtt) | /*('value-type='valueType=ValidString)?*/ '>' key=Key
		//(value=AbstractArtefact | NullTag) description=Description? '</entry>'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//(MapEntryKey | MapEntryValue | MapEntryAtt)
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }
		
		//MapEntryKey
		public RuleCall getMapEntryKeyParserRuleCall_1_0_0() { return cMapEntryKeyParserRuleCall_1_0_0; }
		
		//MapEntryValue
		public RuleCall getMapEntryValueParserRuleCall_1_0_1() { return cMapEntryValueParserRuleCall_1_0_1; }
		
		//MapEntryAtt
		public RuleCall getMapEntryAttParserRuleCall_1_0_2() { return cMapEntryAttParserRuleCall_1_0_2; }
		
		//'>' key=Key (value=AbstractArtefact | NullTag) description=Description? '</entry>'
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		///*('value-type='valueType=ValidString)?*/ '>'
		public Keyword getGreaterThanSignKeyword_1_1_0() { return cGreaterThanSignKeyword_1_1_0; }
		
		//key=Key
		public Assignment getKeyAssignment_1_1_1() { return cKeyAssignment_1_1_1; }
		
		//Key
		public RuleCall getKeyKeyParserRuleCall_1_1_1_0() { return cKeyKeyParserRuleCall_1_1_1_0; }
		
		//value=AbstractArtefact | NullTag
		public Alternatives getAlternatives_1_1_2() { return cAlternatives_1_1_2; }
		
		//value=AbstractArtefact
		public Assignment getValueAssignment_1_1_2_0() { return cValueAssignment_1_1_2_0; }
		
		//AbstractArtefact
		public RuleCall getValueAbstractArtefactParserRuleCall_1_1_2_0_0() { return cValueAbstractArtefactParserRuleCall_1_1_2_0_0; }
		
		//NullTag
		public RuleCall getNullTagParserRuleCall_1_1_2_1() { return cNullTagParserRuleCall_1_1_2_1; }
		
		//description=Description?
		public Assignment getDescriptionAssignment_1_1_3() { return cDescriptionAssignment_1_1_3; }
		
		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_1_1_3_0() { return cDescriptionDescriptionParserRuleCall_1_1_3_0; }
		
		//'</entry>'
		public Keyword getEntryKeyword_1_1_4() { return cEntryKeyword_1_1_4; }
	}
	public class MapEntryKeyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.MapEntryKey");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_0 = (UnorderedGroup)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cUnorderedGroup_0.eContents().get(0);
		private final Keyword cValueTypeKeyword_0_0_0 = (Keyword)cGroup_0_0.eContents().get(0);
		private final Assignment cValueTypeAssignment_0_0_1 = (Assignment)cGroup_0_0.eContents().get(1);
		private final RuleCall cValueTypeValidStringParserRuleCall_0_0_1_0 = (RuleCall)cValueTypeAssignment_0_0_1.eContents().get(0);
		private final Assignment cKeyAssignment_0_1 = (Assignment)cUnorderedGroup_0.eContents().get(1);
		private final RuleCall cKeyMapEntryKeyAttParserRuleCall_0_1_0 = (RuleCall)cKeyAssignment_0_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDescriptionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDescriptionDescriptionParserRuleCall_2_0 = (RuleCall)cDescriptionAssignment_2.eContents().get(0);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueAbstractArtefactParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		private final Keyword cEntryKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		///*If the key is a attribute */ MapEntryKey MapEntry:
		//	(('value-type=' valueType=ValidString)? & key=MapEntryKeyAtt) '>'
		//	description=Description?
		//	value=AbstractArtefact
		//	'</entry>';
		@Override public ParserRule getRule() { return rule; }
		
		//(('value-type=' valueType=ValidString)? & key=MapEntryKeyAtt) '>' description=Description? value=AbstractArtefact
		//'</entry>'
		public Group getGroup() { return cGroup; }
		
		//('value-type=' valueType=ValidString)? & key=MapEntryKeyAtt
		public UnorderedGroup getUnorderedGroup_0() { return cUnorderedGroup_0; }
		
		//('value-type=' valueType=ValidString)?
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//'value-type='
		public Keyword getValueTypeKeyword_0_0_0() { return cValueTypeKeyword_0_0_0; }
		
		//valueType=ValidString
		public Assignment getValueTypeAssignment_0_0_1() { return cValueTypeAssignment_0_0_1; }
		
		//ValidString
		public RuleCall getValueTypeValidStringParserRuleCall_0_0_1_0() { return cValueTypeValidStringParserRuleCall_0_0_1_0; }
		
		//key=MapEntryKeyAtt
		public Assignment getKeyAssignment_0_1() { return cKeyAssignment_0_1; }
		
		//MapEntryKeyAtt
		public RuleCall getKeyMapEntryKeyAttParserRuleCall_0_1_0() { return cKeyMapEntryKeyAttParserRuleCall_0_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_1() { return cGreaterThanSignKeyword_1; }
		
		//description=Description?
		public Assignment getDescriptionAssignment_2() { return cDescriptionAssignment_2; }
		
		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_2_0() { return cDescriptionDescriptionParserRuleCall_2_0; }
		
		//value=AbstractArtefact
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//AbstractArtefact
		public RuleCall getValueAbstractArtefactParserRuleCall_3_0() { return cValueAbstractArtefactParserRuleCall_3_0; }
		
		//'</entry>'
		public Keyword getEntryKeyword_4() { return cEntryKeyword_4; }
	}
	public class MapEntryValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.MapEntryValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_0 = (UnorderedGroup)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cUnorderedGroup_0.eContents().get(0);
		private final Keyword cValueTypeKeyword_0_0_0 = (Keyword)cGroup_0_0.eContents().get(0);
		private final Assignment cValueTypeAssignment_0_0_1 = (Assignment)cGroup_0_0.eContents().get(1);
		private final RuleCall cValueTypeValidStringParserRuleCall_0_0_1_0 = (RuleCall)cValueTypeAssignment_0_0_1.eContents().get(0);
		private final Alternatives cAlternatives_0_1 = (Alternatives)cUnorderedGroup_0.eContents().get(1);
		private final Assignment cValueAssignment_0_1_0 = (Assignment)cAlternatives_0_1.eContents().get(0);
		private final RuleCall cValueAttributSimpleValueParserRuleCall_0_1_0_0 = (RuleCall)cValueAssignment_0_1_0.eContents().get(0);
		private final Assignment cValueAssignment_0_1_1 = (Assignment)cAlternatives_0_1.eContents().get(1);
		private final RuleCall cValueMapEntryValRefParserRuleCall_0_1_1_0 = (RuleCall)cValueAssignment_0_1_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cKeyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cKeyKeyParserRuleCall_2_0 = (RuleCall)cKeyAssignment_2.eContents().get(0);
		private final Assignment cDescriptionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDescriptionDescriptionParserRuleCall_3_0 = (RuleCall)cDescriptionAssignment_3.eContents().get(0);
		private final Keyword cEntryKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		///*If the value is a attribute */ MapEntryValue MapEntry:
		//	(('value-type=' valueType=ValidString)? & (value=AttributSimpleValue | value=MapEntryValRef)) '>'
		//	key=Key
		//	description=Description?
		//	'</entry>';
		@Override public ParserRule getRule() { return rule; }
		
		//(('value-type=' valueType=ValidString)? & (value=AttributSimpleValue | value=MapEntryValRef)) '>' key=Key
		//description=Description? '</entry>'
		public Group getGroup() { return cGroup; }
		
		//('value-type=' valueType=ValidString)? & (value=AttributSimpleValue | value=MapEntryValRef)
		public UnorderedGroup getUnorderedGroup_0() { return cUnorderedGroup_0; }
		
		//('value-type=' valueType=ValidString)?
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//'value-type='
		public Keyword getValueTypeKeyword_0_0_0() { return cValueTypeKeyword_0_0_0; }
		
		//valueType=ValidString
		public Assignment getValueTypeAssignment_0_0_1() { return cValueTypeAssignment_0_0_1; }
		
		//ValidString
		public RuleCall getValueTypeValidStringParserRuleCall_0_0_1_0() { return cValueTypeValidStringParserRuleCall_0_0_1_0; }
		
		//(value=AttributSimpleValue | value=MapEntryValRef)
		public Alternatives getAlternatives_0_1() { return cAlternatives_0_1; }
		
		//value=AttributSimpleValue
		public Assignment getValueAssignment_0_1_0() { return cValueAssignment_0_1_0; }
		
		//AttributSimpleValue
		public RuleCall getValueAttributSimpleValueParserRuleCall_0_1_0_0() { return cValueAttributSimpleValueParserRuleCall_0_1_0_0; }
		
		//value=MapEntryValRef
		public Assignment getValueAssignment_0_1_1() { return cValueAssignment_0_1_1; }
		
		//MapEntryValRef
		public RuleCall getValueMapEntryValRefParserRuleCall_0_1_1_0() { return cValueMapEntryValRefParserRuleCall_0_1_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_1() { return cGreaterThanSignKeyword_1; }
		
		//key=Key
		public Assignment getKeyAssignment_2() { return cKeyAssignment_2; }
		
		//Key
		public RuleCall getKeyKeyParserRuleCall_2_0() { return cKeyKeyParserRuleCall_2_0; }
		
		//description=Description?
		public Assignment getDescriptionAssignment_3() { return cDescriptionAssignment_3; }
		
		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_3_0() { return cDescriptionDescriptionParserRuleCall_3_0; }
		
		//'</entry>'
		public Keyword getEntryKeyword_4() { return cEntryKeyword_4; }
	}
	public class MapEntryAttElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.MapEntryAtt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_0 = (UnorderedGroup)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cUnorderedGroup_0.eContents().get(0);
		private final Group cGroup_0_0_0 = (Group)cGroup_0_0.eContents().get(0);
		private final Keyword cValueTypeKeyword_0_0_0_0 = (Keyword)cGroup_0_0_0.eContents().get(0);
		private final Assignment cValueTypeAssignment_0_0_0_1 = (Assignment)cGroup_0_0_0.eContents().get(1);
		private final RuleCall cValueTypeValidStringParserRuleCall_0_0_0_1_0 = (RuleCall)cValueTypeAssignment_0_0_0_1.eContents().get(0);
		private final Assignment cKeyAssignment_0_0_1 = (Assignment)cGroup_0_0.eContents().get(1);
		private final RuleCall cKeyMapEntryKeyAttParserRuleCall_0_0_1_0 = (RuleCall)cKeyAssignment_0_0_1.eContents().get(0);
		private final Alternatives cAlternatives_0_1 = (Alternatives)cUnorderedGroup_0.eContents().get(1);
		private final Assignment cValueAssignment_0_1_0 = (Assignment)cAlternatives_0_1.eContents().get(0);
		private final RuleCall cValueAttributSimpleValueParserRuleCall_0_1_0_0 = (RuleCall)cValueAssignment_0_1_0.eContents().get(0);
		private final Assignment cValueAssignment_0_1_1 = (Assignment)cAlternatives_0_1.eContents().get(1);
		private final RuleCall cValueMapEntryValRefParserRuleCall_0_1_1_0 = (RuleCall)cValueAssignment_0_1_1.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cSolidusGreaterThanSignKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cDescriptionDescriptionParserRuleCall_1_1_1_0 = (RuleCall)cDescriptionAssignment_1_1_1.eContents().get(0);
		private final Keyword cEntryKeyword_1_1_2 = (Keyword)cGroup_1_1.eContents().get(2);
		
		///*If the key and the value are attributes */ MapEntryAtt MapEntry:
		//	(('value-type=' valueType=ValidString)? key=MapEntryKeyAtt & (value=AttributSimpleValue | value=MapEntryValRef))
		//	('/>' | '>' description=Description? '</entry>');
		@Override public ParserRule getRule() { return rule; }
		
		//(('value-type=' valueType=ValidString)? key=MapEntryKeyAtt & (value=AttributSimpleValue | value=MapEntryValRef)) ('/>' |
		//'>' description=Description? '</entry>')
		public Group getGroup() { return cGroup; }
		
		//('value-type=' valueType=ValidString)? key=MapEntryKeyAtt & (value=AttributSimpleValue | value=MapEntryValRef)
		public UnorderedGroup getUnorderedGroup_0() { return cUnorderedGroup_0; }
		
		//('value-type=' valueType=ValidString)? key=MapEntryKeyAtt
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//('value-type=' valueType=ValidString)?
		public Group getGroup_0_0_0() { return cGroup_0_0_0; }
		
		//'value-type='
		public Keyword getValueTypeKeyword_0_0_0_0() { return cValueTypeKeyword_0_0_0_0; }
		
		//valueType=ValidString
		public Assignment getValueTypeAssignment_0_0_0_1() { return cValueTypeAssignment_0_0_0_1; }
		
		//ValidString
		public RuleCall getValueTypeValidStringParserRuleCall_0_0_0_1_0() { return cValueTypeValidStringParserRuleCall_0_0_0_1_0; }
		
		//key=MapEntryKeyAtt
		public Assignment getKeyAssignment_0_0_1() { return cKeyAssignment_0_0_1; }
		
		//MapEntryKeyAtt
		public RuleCall getKeyMapEntryKeyAttParserRuleCall_0_0_1_0() { return cKeyMapEntryKeyAttParserRuleCall_0_0_1_0; }
		
		//(value=AttributSimpleValue | value=MapEntryValRef)
		public Alternatives getAlternatives_0_1() { return cAlternatives_0_1; }
		
		//value=AttributSimpleValue
		public Assignment getValueAssignment_0_1_0() { return cValueAssignment_0_1_0; }
		
		//AttributSimpleValue
		public RuleCall getValueAttributSimpleValueParserRuleCall_0_1_0_0() { return cValueAttributSimpleValueParserRuleCall_0_1_0_0; }
		
		//value=MapEntryValRef
		public Assignment getValueAssignment_0_1_1() { return cValueAssignment_0_1_1; }
		
		//MapEntryValRef
		public RuleCall getValueMapEntryValRefParserRuleCall_0_1_1_0() { return cValueMapEntryValRefParserRuleCall_0_1_1_0; }
		
		//'/>' | '>' description=Description? '</entry>'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_1_0() { return cSolidusGreaterThanSignKeyword_1_0; }
		
		//'>' description=Description? '</entry>'
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_1_1_0() { return cGreaterThanSignKeyword_1_1_0; }
		
		//description=Description?
		public Assignment getDescriptionAssignment_1_1_1() { return cDescriptionAssignment_1_1_1; }
		
		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_1_1_1_0() { return cDescriptionDescriptionParserRuleCall_1_1_1_0; }
		
		//'</entry>'
		public Keyword getEntryKeyword_1_1_2() { return cEntryKeyword_1_1_2; }
	}
	public class KeyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.Key");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKeyAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cKeyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDescriptionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDescriptionDescriptionParserRuleCall_3_0 = (RuleCall)cDescriptionAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cKeyAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cKeyAbstractArtefactParserRuleCall_4_0_0 = (RuleCall)cKeyAssignment_4_0.eContents().get(0);
		private final RuleCall cNullTagParserRuleCall_4_1 = (RuleCall)cAlternatives_4.eContents().get(1);
		private final Keyword cKeyKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		///*<key/> */ Key:
		//	{Key} '<key' '>' description=Description? (key=AbstractArtefact | NullTag) '</key>';
		@Override public ParserRule getRule() { return rule; }
		
		//{Key} '<key' '>' description=Description? (key=AbstractArtefact | NullTag) '</key>'
		public Group getGroup() { return cGroup; }
		
		//{Key}
		public Action getKeyAction_0() { return cKeyAction_0; }
		
		//'<key'
		public Keyword getKeyKeyword_1() { return cKeyKeyword_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2() { return cGreaterThanSignKeyword_2; }
		
		//description=Description?
		public Assignment getDescriptionAssignment_3() { return cDescriptionAssignment_3; }
		
		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_3_0() { return cDescriptionDescriptionParserRuleCall_3_0; }
		
		//key=AbstractArtefact | NullTag
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//key=AbstractArtefact
		public Assignment getKeyAssignment_4_0() { return cKeyAssignment_4_0; }
		
		//AbstractArtefact
		public RuleCall getKeyAbstractArtefactParserRuleCall_4_0_0() { return cKeyAbstractArtefactParserRuleCall_4_0_0; }
		
		//NullTag
		public RuleCall getNullTagParserRuleCall_4_1() { return cNullTagParserRuleCall_4_1; }
		
		//'</key>'
		public Keyword getKeyKeyword_5() { return cKeyKeyword_5; }
	}
	public class MapEntryKeyAttElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.MapEntryKeyAtt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKeyAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cKeyKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cKeyAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cKeyDataStringParserRuleCall_1_0_1_0 = (RuleCall)cKeyAssignment_1_0_1.eContents().get(0);
		private final Assignment cKeyAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cKeyMapEntrykeyRefParserRuleCall_1_1_0 = (RuleCall)cKeyAssignment_1_1.eContents().get(0);
		
		///*if key is a attribute */ MapEntryKeyAtt Key:
		//	{Key} ('key=' key=DataString | key=MapEntrykeyRef);
		@Override public ParserRule getRule() { return rule; }
		
		//{Key} ('key=' key=DataString | key=MapEntrykeyRef)
		public Group getGroup() { return cGroup; }
		
		//{Key}
		public Action getKeyAction_0() { return cKeyAction_0; }
		
		///*('key='key1=ValidString|keyref=MapEntrykeyRef )*/ 'key=' key=DataString | key=MapEntrykeyRef
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'key=' key=DataString
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'key='
		public Keyword getKeyKeyword_1_0_0() { return cKeyKeyword_1_0_0; }
		
		//key=DataString
		public Assignment getKeyAssignment_1_0_1() { return cKeyAssignment_1_0_1; }
		
		//DataString
		public RuleCall getKeyDataStringParserRuleCall_1_0_1_0() { return cKeyDataStringParserRuleCall_1_0_1_0; }
		
		//key=MapEntrykeyRef
		public Assignment getKeyAssignment_1_1() { return cKeyAssignment_1_1; }
		
		//MapEntrykeyRef
		public RuleCall getKeyMapEntrykeyRefParserRuleCall_1_1_0() { return cKeyMapEntrykeyRefParserRuleCall_1_1_0; }
	}
	public class MapEntrykeyRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.MapEntrykeyRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cKeyRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRefComponentCrossReference_1_0 = (CrossReference)cRefAssignment_1.eContents().get(0);
		private final RuleCall cRefComponentValidStringParserRuleCall_1_0_1 = (RuleCall)cRefComponentCrossReference_1_0.eContents().get(1);
		
		//MapEntrykeyRef Reference:
		//	'key-ref=' ref=[Component|ValidString];
		@Override public ParserRule getRule() { return rule; }
		
		//'key-ref=' ref=[Component|ValidString]
		public Group getGroup() { return cGroup; }
		
		//'key-ref='
		public Keyword getKeyRefKeyword_0() { return cKeyRefKeyword_0; }
		
		//ref=[Component|ValidString]
		public Assignment getRefAssignment_1() { return cRefAssignment_1; }
		
		//[Component|ValidString]
		public CrossReference getRefComponentCrossReference_1_0() { return cRefComponentCrossReference_1_0; }
		
		//ValidString
		public RuleCall getRefComponentValidStringParserRuleCall_1_0_1() { return cRefComponentValidStringParserRuleCall_1_0_1; }
	}
	public class MapEntryValRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.MapEntryValRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cValueRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRefComponentCrossReference_1_0 = (CrossReference)cRefAssignment_1.eContents().get(0);
		private final RuleCall cRefComponentValidStringParserRuleCall_1_0_1 = (RuleCall)cRefComponentCrossReference_1_0.eContents().get(1);
		
		//MapEntryValRef Reference:
		//	'value-ref=' ref=[Component|ValidString];
		@Override public ParserRule getRule() { return rule; }
		
		//'value-ref=' ref=[Component|ValidString]
		public Group getGroup() { return cGroup; }
		
		//'value-ref='
		public Keyword getValueRefKeyword_0() { return cValueRefKeyword_0; }
		
		//ref=[Component|ValidString]
		public Assignment getRefAssignment_1() { return cRefAssignment_1; }
		
		//[Component|ValidString]
		public CrossReference getRefComponentCrossReference_1_0() { return cRefComponentCrossReference_1_0; }
		
		//ValidString
		public RuleCall getRefComponentValidStringParserRuleCall_1_0_1() { return cRefComponentValidStringParserRuleCall_1_0_1; }
	}
	public class UtilConstantElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.UtilConstant");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUtilConstantAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cUtilConstantKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cStaticFieldKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cStaticFieldAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cStaticFieldSTRINGTerminalRuleCall_2_0_1_0 = (RuleCall)cStaticFieldAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cIdKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cNameAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cNameValidStringParserRuleCall_2_1_1_0 = (RuleCall)cNameAssignment_2_1_1.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Keyword cSolidusGreaterThanSignKeyword_3_0 = (Keyword)cAlternatives_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Keyword cUtilConstantKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		
		//UtilConstant:
		//	{UtilConstant}
		//	'<util:constant' ('static-field=' StaticField=STRING & ('id=' name=ValidString)?) ('/>' | '>' '</util:constant>');
		@Override public ParserRule getRule() { return rule; }
		
		//{UtilConstant} '<util:constant' ('static-field=' StaticField=STRING & ('id=' name=ValidString)?) ('/>' | '>'
		//'</util:constant>')
		public Group getGroup() { return cGroup; }
		
		//{UtilConstant}
		public Action getUtilConstantAction_0() { return cUtilConstantAction_0; }
		
		//'<util:constant'
		public Keyword getUtilConstantKeyword_1() { return cUtilConstantKeyword_1; }
		
		//'static-field=' StaticField=STRING & ('id=' name=ValidString)?
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//'static-field=' StaticField=STRING
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'static-field='
		public Keyword getStaticFieldKeyword_2_0_0() { return cStaticFieldKeyword_2_0_0; }
		
		//StaticField=STRING
		public Assignment getStaticFieldAssignment_2_0_1() { return cStaticFieldAssignment_2_0_1; }
		
		//STRING
		public RuleCall getStaticFieldSTRINGTerminalRuleCall_2_0_1_0() { return cStaticFieldSTRINGTerminalRuleCall_2_0_1_0; }
		
		//('id=' name=ValidString)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'id='
		public Keyword getIdKeyword_2_1_0() { return cIdKeyword_2_1_0; }
		
		//name=ValidString
		public Assignment getNameAssignment_2_1_1() { return cNameAssignment_2_1_1; }
		
		//ValidString
		public RuleCall getNameValidStringParserRuleCall_2_1_1_0() { return cNameValidStringParserRuleCall_2_1_1_0; }
		
		//'/>' | '>' '</util:constant>'
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_3_0() { return cSolidusGreaterThanSignKeyword_3_0; }
		
		//'>' '</util:constant>'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_3_1_0() { return cGreaterThanSignKeyword_3_1_0; }
		
		//'</util:constant>'
		public Keyword getUtilConstantKeyword_3_1_1() { return cUtilConstantKeyword_3_1_1; }
	}
	public class UtilPropertyPathElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.UtilPropertyPath");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUtilPropertyPathKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cIdKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cNameAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cNameValidStringParserRuleCall_1_0_1_0 = (RuleCall)cNameAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cPathKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cPathAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cPathValidStringParserRuleCall_1_1_1_0 = (RuleCall)cPathAssignment_1_1_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cSolidusGreaterThanSignKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cUtilConstantKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		
		//UtilPropertyPath:
		//	'<util:property-path' ('id=' name=ValidString & 'path=' path=ValidString) ('/>' | '>' '</util:constant>');
		@Override public ParserRule getRule() { return rule; }
		
		//'<util:property-path' ('id=' name=ValidString & 'path=' path=ValidString) ('/>' | '>' '</util:constant>')
		public Group getGroup() { return cGroup; }
		
		//'<util:property-path'
		public Keyword getUtilPropertyPathKeyword_0() { return cUtilPropertyPathKeyword_0; }
		
		//'id=' name=ValidString & 'path=' path=ValidString
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//'id=' name=ValidString
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'id='
		public Keyword getIdKeyword_1_0_0() { return cIdKeyword_1_0_0; }
		
		//name=ValidString
		public Assignment getNameAssignment_1_0_1() { return cNameAssignment_1_0_1; }
		
		//ValidString
		public RuleCall getNameValidStringParserRuleCall_1_0_1_0() { return cNameValidStringParserRuleCall_1_0_1_0; }
		
		//'path=' path=ValidString
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'path='
		public Keyword getPathKeyword_1_1_0() { return cPathKeyword_1_1_0; }
		
		//path=ValidString
		public Assignment getPathAssignment_1_1_1() { return cPathAssignment_1_1_1; }
		
		//ValidString
		public RuleCall getPathValidStringParserRuleCall_1_1_1_0() { return cPathValidStringParserRuleCall_1_1_1_0; }
		
		//'/>' | '>' '</util:constant>'
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_2_0() { return cSolidusGreaterThanSignKeyword_2_0; }
		
		//'>' '</util:constant>'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_1_0() { return cGreaterThanSignKeyword_2_1_0; }
		
		//'</util:constant>'
		public Keyword getUtilConstantKeyword_2_1_1() { return cUtilConstantKeyword_2_1_1; }
	}
	public class UtilPropertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.UtilProperties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUtilPropertiesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cUtilPropertiesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Assignment cPropertyfileAssignment_2_0 = (Assignment)cUnorderedGroup_2.eContents().get(0);
		private final RuleCall cPropertyfilePropertyFileSimpleParserRuleCall_2_0_0 = (RuleCall)cPropertyfileAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cIdKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cNameAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cNameValidStringParserRuleCall_2_1_1_0 = (RuleCall)cNameAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cUnorderedGroup_2.eContents().get(2);
		private final Keyword cIgnoreResourceNotFoundKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cIgnoreResourceNotFoundAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cIgnoreResourceNotFoundSBooleanEnumRuleCall_2_2_1_0 = (RuleCall)cIgnoreResourceNotFoundAssignment_2_2_1.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cUnorderedGroup_2.eContents().get(3);
		private final Keyword cLocalOverrideKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cLocalOverrideAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cLocalOverrideSBooleanEnumRuleCall_2_3_1_0 = (RuleCall)cLocalOverrideAssignment_2_3_1.eContents().get(0);
		private final Group cGroup_2_4 = (Group)cUnorderedGroup_2.eContents().get(4);
		private final Keyword cScopeKeyword_2_4_0 = (Keyword)cGroup_2_4.eContents().get(0);
		private final Assignment cScopeAssignment_2_4_1 = (Assignment)cGroup_2_4.eContents().get(1);
		private final RuleCall cScopeValidStringParserRuleCall_2_4_1_0 = (RuleCall)cScopeAssignment_2_4_1.eContents().get(0);
		private final Group cGroup_2_5 = (Group)cUnorderedGroup_2.eContents().get(5);
		private final Group cGroup_2_5_0 = (Group)cGroup_2_5.eContents().get(0);
		private final Keyword cValueTypeKeyword_2_5_0_0 = (Keyword)cGroup_2_5_0.eContents().get(0);
		private final Assignment cValueTypeAssignment_2_5_0_1 = (Assignment)cGroup_2_5_0.eContents().get(1);
		private final RuleCall cValueTypeValidStringParserRuleCall_2_5_0_1_0 = (RuleCall)cValueTypeAssignment_2_5_0_1.eContents().get(0);
		private final Alternatives cAlternatives_2_5_1 = (Alternatives)cGroup_2_5.eContents().get(1);
		private final Keyword cSolidusGreaterThanSignKeyword_2_5_1_0 = (Keyword)cAlternatives_2_5_1.eContents().get(0);
		private final Group cGroup_2_5_1_1 = (Group)cAlternatives_2_5_1.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2_5_1_1_0 = (Keyword)cGroup_2_5_1_1.eContents().get(0);
		private final Assignment cPropsAssignment_2_5_1_1_1 = (Assignment)cGroup_2_5_1_1.eContents().get(1);
		private final RuleCall cPropsPropParserRuleCall_2_5_1_1_1_0 = (RuleCall)cPropsAssignment_2_5_1_1_1.eContents().get(0);
		private final Keyword cUtilPropertiesKeyword_2_5_1_1_2 = (Keyword)cGroup_2_5_1_1.eContents().get(2);
		
		//UtilProperties:
		//	{UtilProperties}
		//	'<util:properties' (propertyfile=PropertyFileSimple?
		//	& ('id=' name=ValidString)?
		//	& ('ignore-resource-not-found=' ignoreResourceNotFound=sBoolean)?
		//	& ('local-override=' localOverride=sBoolean)?
		//	& ('scope=' scope=ValidString)?
		//	& ('value-type=' valueType=ValidString)? ('/>' | '>' props+=Prop* '</util:properties>'));
		@Override public ParserRule getRule() { return rule; }
		
		//{UtilProperties} '<util:properties' (propertyfile=PropertyFileSimple? & ('id=' name=ValidString)? &
		//('ignore-resource-not-found=' ignoreResourceNotFound=sBoolean)? & ('local-override=' localOverride=sBoolean)? &
		//('scope=' scope=ValidString)? & ('value-type=' valueType=ValidString)? ('/>' | '>' props+=Prop* '</util:properties>'))
		public Group getGroup() { return cGroup; }
		
		//{UtilProperties}
		public Action getUtilPropertiesAction_0() { return cUtilPropertiesAction_0; }
		
		//'<util:properties'
		public Keyword getUtilPropertiesKeyword_1() { return cUtilPropertiesKeyword_1; }
		
		//propertyfile=PropertyFileSimple? & ('id=' name=ValidString)? & ('ignore-resource-not-found='
		//ignoreResourceNotFound=sBoolean)? & ('local-override=' localOverride=sBoolean)? & ('scope=' scope=ValidString)? &
		//('value-type=' valueType=ValidString)? ('/>' | '>' props+=Prop* '</util:properties>')
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//propertyfile=PropertyFileSimple?
		public Assignment getPropertyfileAssignment_2_0() { return cPropertyfileAssignment_2_0; }
		
		//PropertyFileSimple
		public RuleCall getPropertyfilePropertyFileSimpleParserRuleCall_2_0_0() { return cPropertyfilePropertyFileSimpleParserRuleCall_2_0_0; }
		
		//('id=' name=ValidString)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'id='
		public Keyword getIdKeyword_2_1_0() { return cIdKeyword_2_1_0; }
		
		//name=ValidString
		public Assignment getNameAssignment_2_1_1() { return cNameAssignment_2_1_1; }
		
		//ValidString
		public RuleCall getNameValidStringParserRuleCall_2_1_1_0() { return cNameValidStringParserRuleCall_2_1_1_0; }
		
		//('ignore-resource-not-found=' ignoreResourceNotFound=sBoolean)?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//'ignore-resource-not-found='
		public Keyword getIgnoreResourceNotFoundKeyword_2_2_0() { return cIgnoreResourceNotFoundKeyword_2_2_0; }
		
		//ignoreResourceNotFound=sBoolean
		public Assignment getIgnoreResourceNotFoundAssignment_2_2_1() { return cIgnoreResourceNotFoundAssignment_2_2_1; }
		
		//sBoolean
		public RuleCall getIgnoreResourceNotFoundSBooleanEnumRuleCall_2_2_1_0() { return cIgnoreResourceNotFoundSBooleanEnumRuleCall_2_2_1_0; }
		
		//('local-override=' localOverride=sBoolean)?
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//'local-override='
		public Keyword getLocalOverrideKeyword_2_3_0() { return cLocalOverrideKeyword_2_3_0; }
		
		//localOverride=sBoolean
		public Assignment getLocalOverrideAssignment_2_3_1() { return cLocalOverrideAssignment_2_3_1; }
		
		//sBoolean
		public RuleCall getLocalOverrideSBooleanEnumRuleCall_2_3_1_0() { return cLocalOverrideSBooleanEnumRuleCall_2_3_1_0; }
		
		//('scope=' scope=ValidString)?
		public Group getGroup_2_4() { return cGroup_2_4; }
		
		//'scope='
		public Keyword getScopeKeyword_2_4_0() { return cScopeKeyword_2_4_0; }
		
		//scope=ValidString
		public Assignment getScopeAssignment_2_4_1() { return cScopeAssignment_2_4_1; }
		
		//ValidString
		public RuleCall getScopeValidStringParserRuleCall_2_4_1_0() { return cScopeValidStringParserRuleCall_2_4_1_0; }
		
		//('value-type=' valueType=ValidString)? ('/>' | '>' props+=Prop* '</util:properties>')
		public Group getGroup_2_5() { return cGroup_2_5; }
		
		//('value-type=' valueType=ValidString)?
		public Group getGroup_2_5_0() { return cGroup_2_5_0; }
		
		//'value-type='
		public Keyword getValueTypeKeyword_2_5_0_0() { return cValueTypeKeyword_2_5_0_0; }
		
		//valueType=ValidString
		public Assignment getValueTypeAssignment_2_5_0_1() { return cValueTypeAssignment_2_5_0_1; }
		
		//ValidString
		public RuleCall getValueTypeValidStringParserRuleCall_2_5_0_1_0() { return cValueTypeValidStringParserRuleCall_2_5_0_1_0; }
		
		//'/>' | '>' props+=Prop* '</util:properties>'
		public Alternatives getAlternatives_2_5_1() { return cAlternatives_2_5_1; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_2_5_1_0() { return cSolidusGreaterThanSignKeyword_2_5_1_0; }
		
		//'>' props+=Prop* '</util:properties>'
		public Group getGroup_2_5_1_1() { return cGroup_2_5_1_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_5_1_1_0() { return cGreaterThanSignKeyword_2_5_1_1_0; }
		
		//props+=Prop*
		public Assignment getPropsAssignment_2_5_1_1_1() { return cPropsAssignment_2_5_1_1_1; }
		
		//Prop
		public RuleCall getPropsPropParserRuleCall_2_5_1_1_1_0() { return cPropsPropParserRuleCall_2_5_1_1_1_0; }
		
		//'</util:properties>'
		public Keyword getUtilPropertiesKeyword_2_5_1_1_2() { return cUtilPropertiesKeyword_2_5_1_1_2; }
	}
	public class UtilListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.UtilList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUtilListAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cUtilListKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cIdKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cNameAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cNameValidStringParserRuleCall_2_0_1_0 = (RuleCall)cNameAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cListClassKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cListClassAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cListClassValidStringParserRuleCall_2_1_1_0 = (RuleCall)cListClassAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cUnorderedGroup_2.eContents().get(2);
		private final Keyword cScopeKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cScopeAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cScopeValidStringParserRuleCall_2_2_1_0 = (RuleCall)cScopeAssignment_2_2_1.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cUnorderedGroup_2.eContents().get(3);
		private final Keyword cValueTypeKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cValueTypeAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cValueTypeValidStringParserRuleCall_2_3_1_0 = (RuleCall)cValueTypeAssignment_2_3_1.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Keyword cSolidusGreaterThanSignKeyword_3_0 = (Keyword)cAlternatives_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cArtefactsAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cArtefactsAbstractArtefactParserRuleCall_3_1_1_0 = (RuleCall)cArtefactsAssignment_3_1_1.eContents().get(0);
		private final Keyword cUtilPropertiesKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		
		//UtilList:
		//	{UtilList}
		//	'<util:list' (('id=' name=ValidString)?
		//	& ('list-class=' listClass=ValidString)?
		//	& ('scope=' scope=ValidString)?
		//	& ('value-type=' valueType=ValidString)?) ('/>' | '>' artefacts+=AbstractArtefact* '</util:properties>');
		@Override public ParserRule getRule() { return rule; }
		
		//{UtilList} '<util:list' (('id=' name=ValidString)? & ('list-class=' listClass=ValidString)? & ('scope='
		//scope=ValidString)? & ('value-type=' valueType=ValidString)?) ('/>' | '>' artefacts+=AbstractArtefact*
		//'</util:properties>')
		public Group getGroup() { return cGroup; }
		
		//{UtilList}
		public Action getUtilListAction_0() { return cUtilListAction_0; }
		
		//'<util:list'
		public Keyword getUtilListKeyword_1() { return cUtilListKeyword_1; }
		
		//('id=' name=ValidString)? & ('list-class=' listClass=ValidString)? & ('scope=' scope=ValidString)? & ('value-type='
		//valueType=ValidString)?
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//('id=' name=ValidString)?
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'id='
		public Keyword getIdKeyword_2_0_0() { return cIdKeyword_2_0_0; }
		
		//name=ValidString
		public Assignment getNameAssignment_2_0_1() { return cNameAssignment_2_0_1; }
		
		//ValidString
		public RuleCall getNameValidStringParserRuleCall_2_0_1_0() { return cNameValidStringParserRuleCall_2_0_1_0; }
		
		//('list-class=' listClass=ValidString)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'list-class='
		public Keyword getListClassKeyword_2_1_0() { return cListClassKeyword_2_1_0; }
		
		//listClass=ValidString
		public Assignment getListClassAssignment_2_1_1() { return cListClassAssignment_2_1_1; }
		
		//ValidString
		public RuleCall getListClassValidStringParserRuleCall_2_1_1_0() { return cListClassValidStringParserRuleCall_2_1_1_0; }
		
		//('scope=' scope=ValidString)?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//'scope='
		public Keyword getScopeKeyword_2_2_0() { return cScopeKeyword_2_2_0; }
		
		//scope=ValidString
		public Assignment getScopeAssignment_2_2_1() { return cScopeAssignment_2_2_1; }
		
		//ValidString
		public RuleCall getScopeValidStringParserRuleCall_2_2_1_0() { return cScopeValidStringParserRuleCall_2_2_1_0; }
		
		//('value-type=' valueType=ValidString)?
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//'value-type='
		public Keyword getValueTypeKeyword_2_3_0() { return cValueTypeKeyword_2_3_0; }
		
		//valueType=ValidString
		public Assignment getValueTypeAssignment_2_3_1() { return cValueTypeAssignment_2_3_1; }
		
		//ValidString
		public RuleCall getValueTypeValidStringParserRuleCall_2_3_1_0() { return cValueTypeValidStringParserRuleCall_2_3_1_0; }
		
		//'/>' | '>' artefacts+=AbstractArtefact* '</util:properties>'
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_3_0() { return cSolidusGreaterThanSignKeyword_3_0; }
		
		//'>' artefacts+=AbstractArtefact* '</util:properties>'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_3_1_0() { return cGreaterThanSignKeyword_3_1_0; }
		
		//artefacts+=AbstractArtefact*
		public Assignment getArtefactsAssignment_3_1_1() { return cArtefactsAssignment_3_1_1; }
		
		//AbstractArtefact
		public RuleCall getArtefactsAbstractArtefactParserRuleCall_3_1_1_0() { return cArtefactsAbstractArtefactParserRuleCall_3_1_1_0; }
		
		//'</util:properties>'
		public Keyword getUtilPropertiesKeyword_3_1_2() { return cUtilPropertiesKeyword_3_1_2; }
	}
	public class UtilMapElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.UtilMap");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUtilMapAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cUtilMapKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cIdKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cNameAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cNameValidStringParserRuleCall_2_0_1_0 = (RuleCall)cNameAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cKeyTypeKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cKeyTypeAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cKeyTypeValidStringParserRuleCall_2_1_1_0 = (RuleCall)cKeyTypeAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cUnorderedGroup_2.eContents().get(2);
		private final Keyword cMapClassKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cMapClassAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cMapClassValidStringParserRuleCall_2_2_1_0 = (RuleCall)cMapClassAssignment_2_2_1.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cUnorderedGroup_2.eContents().get(3);
		private final Keyword cScopeKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cScopeAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cScopeValidStringParserRuleCall_2_3_1_0 = (RuleCall)cScopeAssignment_2_3_1.eContents().get(0);
		private final Group cGroup_2_4 = (Group)cUnorderedGroup_2.eContents().get(4);
		private final Keyword cValueTypeKeyword_2_4_0 = (Keyword)cGroup_2_4.eContents().get(0);
		private final Assignment cValueTypeAssignment_2_4_1 = (Assignment)cGroup_2_4.eContents().get(1);
		private final RuleCall cValueTypeValidStringParserRuleCall_2_4_1_0 = (RuleCall)cValueTypeAssignment_2_4_1.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Keyword cSolidusGreaterThanSignKeyword_3_0 = (Keyword)cAlternatives_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cEntriesAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cEntriesMapEntryParserRuleCall_3_1_1_0 = (RuleCall)cEntriesAssignment_3_1_1.eContents().get(0);
		private final Keyword cUtilMapKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		
		//UtilMap:
		//	{UtilMap}
		//	'<util:map' (('id=' name=ValidString)?
		//	& ('key-type=' keyType=ValidString)?
		//	& ('map-class=' mapClass=ValidString)?
		//	& ('scope=' scope=ValidString)?
		//	& ('value-type=' valueType=ValidString)?) ('/>' | '>' entries+=MapEntry* '</util:map>');
		@Override public ParserRule getRule() { return rule; }
		
		//{UtilMap} '<util:map' (('id=' name=ValidString)? & ('key-type=' keyType=ValidString)? & ('map-class='
		//mapClass=ValidString)? & ('scope=' scope=ValidString)? & ('value-type=' valueType=ValidString)?) ('/>' | '>'
		//entries+=MapEntry* '</util:map>')
		public Group getGroup() { return cGroup; }
		
		//{UtilMap}
		public Action getUtilMapAction_0() { return cUtilMapAction_0; }
		
		//'<util:map'
		public Keyword getUtilMapKeyword_1() { return cUtilMapKeyword_1; }
		
		//('id=' name=ValidString)? & ('key-type=' keyType=ValidString)? & ('map-class=' mapClass=ValidString)? & ('scope='
		//scope=ValidString)? & ('value-type=' valueType=ValidString)?
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//('id=' name=ValidString)?
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'id='
		public Keyword getIdKeyword_2_0_0() { return cIdKeyword_2_0_0; }
		
		//name=ValidString
		public Assignment getNameAssignment_2_0_1() { return cNameAssignment_2_0_1; }
		
		//ValidString
		public RuleCall getNameValidStringParserRuleCall_2_0_1_0() { return cNameValidStringParserRuleCall_2_0_1_0; }
		
		//('key-type=' keyType=ValidString)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'key-type='
		public Keyword getKeyTypeKeyword_2_1_0() { return cKeyTypeKeyword_2_1_0; }
		
		//keyType=ValidString
		public Assignment getKeyTypeAssignment_2_1_1() { return cKeyTypeAssignment_2_1_1; }
		
		//ValidString
		public RuleCall getKeyTypeValidStringParserRuleCall_2_1_1_0() { return cKeyTypeValidStringParserRuleCall_2_1_1_0; }
		
		//('map-class=' mapClass=ValidString)?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//'map-class='
		public Keyword getMapClassKeyword_2_2_0() { return cMapClassKeyword_2_2_0; }
		
		//mapClass=ValidString
		public Assignment getMapClassAssignment_2_2_1() { return cMapClassAssignment_2_2_1; }
		
		//ValidString
		public RuleCall getMapClassValidStringParserRuleCall_2_2_1_0() { return cMapClassValidStringParserRuleCall_2_2_1_0; }
		
		//('scope=' scope=ValidString)?
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//'scope='
		public Keyword getScopeKeyword_2_3_0() { return cScopeKeyword_2_3_0; }
		
		//scope=ValidString
		public Assignment getScopeAssignment_2_3_1() { return cScopeAssignment_2_3_1; }
		
		//ValidString
		public RuleCall getScopeValidStringParserRuleCall_2_3_1_0() { return cScopeValidStringParserRuleCall_2_3_1_0; }
		
		//('value-type=' valueType=ValidString)?
		public Group getGroup_2_4() { return cGroup_2_4; }
		
		//'value-type='
		public Keyword getValueTypeKeyword_2_4_0() { return cValueTypeKeyword_2_4_0; }
		
		//valueType=ValidString
		public Assignment getValueTypeAssignment_2_4_1() { return cValueTypeAssignment_2_4_1; }
		
		//ValidString
		public RuleCall getValueTypeValidStringParserRuleCall_2_4_1_0() { return cValueTypeValidStringParserRuleCall_2_4_1_0; }
		
		//'/>' | '>' entries+=MapEntry* '</util:map>'
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_3_0() { return cSolidusGreaterThanSignKeyword_3_0; }
		
		//'>' entries+=MapEntry* '</util:map>'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_3_1_0() { return cGreaterThanSignKeyword_3_1_0; }
		
		//entries+=MapEntry*
		public Assignment getEntriesAssignment_3_1_1() { return cEntriesAssignment_3_1_1; }
		
		//MapEntry
		public RuleCall getEntriesMapEntryParserRuleCall_3_1_1_0() { return cEntriesMapEntryParserRuleCall_3_1_1_0; }
		
		//'</util:map>'
		public Keyword getUtilMapKeyword_3_1_2() { return cUtilMapKeyword_3_1_2; }
	}
	public class UtilSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.UtilSet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUtilSetAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cUtilSetKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cIdKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cNameAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cNameValidStringParserRuleCall_2_0_1_0 = (RuleCall)cNameAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cSetClassKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cSetClassAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cSetClassValidStringParserRuleCall_2_1_1_0 = (RuleCall)cSetClassAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cUnorderedGroup_2.eContents().get(2);
		private final Keyword cScopeKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cScopeAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cScopeValidStringParserRuleCall_2_2_1_0 = (RuleCall)cScopeAssignment_2_2_1.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cUnorderedGroup_2.eContents().get(3);
		private final Keyword cValueTypeKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cValueTypeAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cValueTypeValidStringParserRuleCall_2_3_1_0 = (RuleCall)cValueTypeAssignment_2_3_1.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Keyword cSolidusGreaterThanSignKeyword_3_0 = (Keyword)cAlternatives_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cArtefactsAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cArtefactsAbstractArtefactParserRuleCall_3_1_1_0 = (RuleCall)cArtefactsAssignment_3_1_1.eContents().get(0);
		private final Keyword cUtilSetKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		
		//UtilSet:
		//	{UtilSet}
		//	'<util:set' (('id=' name=ValidString)?
		//	& ('set-class=' setClass=ValidString)?
		//	& ('scope=' scope=ValidString)?
		//	& ('value-type=' valueType=ValidString)?) ('/>' | '>' artefacts+=AbstractArtefact* '</util:set>');
		@Override public ParserRule getRule() { return rule; }
		
		//{UtilSet} '<util:set' (('id=' name=ValidString)? & ('set-class=' setClass=ValidString)? & ('scope=' scope=ValidString)?
		//& ('value-type=' valueType=ValidString)?) ('/>' | '>' artefacts+=AbstractArtefact* '</util:set>')
		public Group getGroup() { return cGroup; }
		
		//{UtilSet}
		public Action getUtilSetAction_0() { return cUtilSetAction_0; }
		
		//'<util:set'
		public Keyword getUtilSetKeyword_1() { return cUtilSetKeyword_1; }
		
		//('id=' name=ValidString)? & ('set-class=' setClass=ValidString)? & ('scope=' scope=ValidString)? & ('value-type='
		//valueType=ValidString)?
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//('id=' name=ValidString)?
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'id='
		public Keyword getIdKeyword_2_0_0() { return cIdKeyword_2_0_0; }
		
		//name=ValidString
		public Assignment getNameAssignment_2_0_1() { return cNameAssignment_2_0_1; }
		
		//ValidString
		public RuleCall getNameValidStringParserRuleCall_2_0_1_0() { return cNameValidStringParserRuleCall_2_0_1_0; }
		
		//('set-class=' setClass=ValidString)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'set-class='
		public Keyword getSetClassKeyword_2_1_0() { return cSetClassKeyword_2_1_0; }
		
		//setClass=ValidString
		public Assignment getSetClassAssignment_2_1_1() { return cSetClassAssignment_2_1_1; }
		
		//ValidString
		public RuleCall getSetClassValidStringParserRuleCall_2_1_1_0() { return cSetClassValidStringParserRuleCall_2_1_1_0; }
		
		//('scope=' scope=ValidString)?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//'scope='
		public Keyword getScopeKeyword_2_2_0() { return cScopeKeyword_2_2_0; }
		
		//scope=ValidString
		public Assignment getScopeAssignment_2_2_1() { return cScopeAssignment_2_2_1; }
		
		//ValidString
		public RuleCall getScopeValidStringParserRuleCall_2_2_1_0() { return cScopeValidStringParserRuleCall_2_2_1_0; }
		
		//('value-type=' valueType=ValidString)?
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//'value-type='
		public Keyword getValueTypeKeyword_2_3_0() { return cValueTypeKeyword_2_3_0; }
		
		//valueType=ValidString
		public Assignment getValueTypeAssignment_2_3_1() { return cValueTypeAssignment_2_3_1; }
		
		//ValidString
		public RuleCall getValueTypeValidStringParserRuleCall_2_3_1_0() { return cValueTypeValidStringParserRuleCall_2_3_1_0; }
		
		//'/>' | '>' artefacts+=AbstractArtefact* '</util:set>'
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_3_0() { return cSolidusGreaterThanSignKeyword_3_0; }
		
		//'>' artefacts+=AbstractArtefact* '</util:set>'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_3_1_0() { return cGreaterThanSignKeyword_3_1_0; }
		
		//artefacts+=AbstractArtefact*
		public Assignment getArtefactsAssignment_3_1_1() { return cArtefactsAssignment_3_1_1; }
		
		//AbstractArtefact
		public RuleCall getArtefactsAbstractArtefactParserRuleCall_3_1_1_0() { return cArtefactsAbstractArtefactParserRuleCall_3_1_1_0; }
		
		//'</util:set>'
		public Keyword getUtilSetKeyword_3_1_2() { return cUtilSetKeyword_3_1_2; }
	}
	public class PropertyFileSimpleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.PropertyFileSimple");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLocationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cLocationAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLocationValidStringParserRuleCall_1_0 = (RuleCall)cLocationAssignment_1.eContents().get(0);
		
		//PropertyFileSimple PropertyFile:
		//	'location=' location=ValidString;
		@Override public ParserRule getRule() { return rule; }
		
		//'location=' location=ValidString
		public Group getGroup() { return cGroup; }
		
		//'location='
		public Keyword getLocationKeyword_0() { return cLocationKeyword_0; }
		
		//location=ValidString
		public Assignment getLocationAssignment_1() { return cLocationAssignment_1; }
		
		//ValidString
		public RuleCall getLocationValidStringParserRuleCall_1_0() { return cLocationValidStringParserRuleCall_1_0; }
	}
	public class PropertyFileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.PropertyFile");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cLocationKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cLocationAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cLocationValidStringParserRuleCall_0_1_0 = (RuleCall)cLocationAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cFileEncodingKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cFileEncodingAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cFileEncodingValidStringParserRuleCall_1_1_0 = (RuleCall)cFileEncodingAssignment_1_1.eContents().get(0);
		
		//PropertyFile:
		//	'location=' location=ValidString & ('file-encoding=' fileEncoding=ValidString)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'location=' location=ValidString & ('file-encoding=' fileEncoding=ValidString)?
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//'location=' location=ValidString
		public Group getGroup_0() { return cGroup_0; }
		
		//'location='
		public Keyword getLocationKeyword_0_0() { return cLocationKeyword_0_0; }
		
		//location=ValidString
		public Assignment getLocationAssignment_0_1() { return cLocationAssignment_0_1; }
		
		//ValidString
		public RuleCall getLocationValidStringParserRuleCall_0_1_0() { return cLocationValidStringParserRuleCall_0_1_0; }
		
		//('file-encoding=' fileEncoding=ValidString)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'file-encoding='
		public Keyword getFileEncodingKeyword_1_0() { return cFileEncodingKeyword_1_0; }
		
		//fileEncoding=ValidString
		public Assignment getFileEncodingAssignment_1_1() { return cFileEncodingAssignment_1_1; }
		
		//ValidString
		public RuleCall getFileEncodingValidStringParserRuleCall_1_1_0() { return cFileEncodingValidStringParserRuleCall_1_1_0; }
	}
	public class DescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.Description");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDescriptionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cQSTRINGParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cDescriptionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Description:
		//	'<description>' QSTRING '</description>';
		@Override public ParserRule getRule() { return rule; }
		
		//'<description>' QSTRING '</description>'
		public Group getGroup() { return cGroup; }
		
		//'<description>'
		public Keyword getDescriptionKeyword_0() { return cDescriptionKeyword_0; }
		
		//QSTRING
		public RuleCall getQSTRINGParserRuleCall_1() { return cQSTRINGParserRuleCall_1; }
		
		//'</description>'
		public Keyword getDescriptionKeyword_2() { return cDescriptionKeyword_2; }
	}
	public class DataStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.DataString");
		private final Assignment cSAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cSValidStringParserRuleCall_0 = (RuleCall)cSAssignment.eContents().get(0);
		
		//DataString:
		//	s=ValidString;
		@Override public ParserRule getRule() { return rule; }
		
		//s=ValidString
		public Assignment getSAssignment() { return cSAssignment; }
		
		//ValidString
		public RuleCall getSValidStringParserRuleCall_0() { return cSValidStringParserRuleCall_0; }
	}
	public class IdDashAndColonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.IdDashAndColon");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cColonKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1_1 = (RuleCall)cGroup_1_1.eContents().get(1);
		
		//IdDashAndColon:
		//	ID ('-' ID | (':' ID)*);
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('-' ID | (':' ID)*)
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//'-' ID | (':' ID)*
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'-' ID
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1_0_0() { return cHyphenMinusKeyword_1_0_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_0_1() { return cIDTerminalRuleCall_1_0_1; }
		
		//(':' ID)*
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//':'
		public Keyword getColonKeyword_1_1_0() { return cColonKeyword_1_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1_1() { return cIDTerminalRuleCall_1_1_1; }
	}
	public class IdWithDashElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.IdWithDash");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//IdWithDash:
		//	ID ('-' ID)?;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('-' ID)?
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('-' ID)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1_0() { return cHyphenMinusKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class QSTRINGElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.QSTRING");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cValidStringParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final Keyword cCommaKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cFullStopKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cHyphenMinusKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cQuestionMarkKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		private final Keyword cExclamationMarkKeyword_10 = (Keyword)cAlternatives.eContents().get(10);
		private final Keyword cPlusSignKeyword_11 = (Keyword)cAlternatives.eContents().get(11);
		private final Keyword cAsteriskKeyword_12 = (Keyword)cAlternatives.eContents().get(12);
		private final Keyword cEqualsSignKeyword_13 = (Keyword)cAlternatives.eContents().get(13);
		private final Keyword cDegreeSignKeyword_14 = (Keyword)cAlternatives.eContents().get(14);
		private final Keyword cGreaterThanSignKeyword_15 = (Keyword)cAlternatives.eContents().get(15);
		private final Keyword cSolidusKeyword_16 = (Keyword)cAlternatives.eContents().get(16);
		private final Keyword cVerticalLineKeyword_17 = (Keyword)cAlternatives.eContents().get(17);
		private final Keyword cBackslashKeyword_18 = (Keyword)cAlternatives.eContents().get(18);
		private final Keyword cLeftParenthesisKeyword_19 = (Keyword)cAlternatives.eContents().get(19);
		private final Keyword cRightParenthesisKeyword_20 = (Keyword)cAlternatives.eContents().get(20);
		private final Keyword cLeftCurlyBracketKeyword_21 = (Keyword)cAlternatives.eContents().get(21);
		private final Keyword cRightCurlyBracketKeyword_22 = (Keyword)cAlternatives.eContents().get(22);
		private final Keyword cQuotationMarkKeyword_23 = (Keyword)cAlternatives.eContents().get(23);
		private final Keyword cApostropheKeyword_24 = (Keyword)cAlternatives.eContents().get(24);
		private final Keyword cLeftSquareBracketKeyword_25 = (Keyword)cAlternatives.eContents().get(25);
		private final Keyword cRightSquareBracketKeyword_26 = (Keyword)cAlternatives.eContents().get(26);
		private final Keyword cCommercialAtKeyword_27 = (Keyword)cAlternatives.eContents().get(27);
		private final Keyword cAmpersandKeyword_28 = (Keyword)cAlternatives.eContents().get(28);
		private final Keyword cNumberSignKeyword_29 = (Keyword)cAlternatives.eContents().get(29);
		
		//QSTRING hidden(ML_COMMENT):
		//	(ID | INT | WS | ValidString
		//	| ',' | '.' | ';' | ':' | '-' | '?' | '!'
		//	| '+' | '*' | '=' | '°' | '>'
		//	| '/' | '|' | '\\'
		//	| '(' | ')' | '{' | '}' | '"' | "'" | '[' | ']'
		//	| '@' | '&' | '#')*;
		@Override public ParserRule getRule() { return rule; }
		
		//(ID | INT | WS | ValidString | ',' | '.' | ';' | ':' | '-' | '?' | '!' | '+' | '*' | '=' | '°' | '>' | '/' | '|' | '\\'
		//| '(' | ')' | '{' | '}' | '"' | "'" | '[' | ']' | '@' | '&' | '#')*
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
		
		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }
		
		//ValidString
		public RuleCall getValidStringParserRuleCall_3() { return cValidStringParserRuleCall_3; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//'.'
		public Keyword getFullStopKeyword_5() { return cFullStopKeyword_5; }
		
		//';'
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
		
		//':'
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_8() { return cHyphenMinusKeyword_8; }
		
		//'?'
		public Keyword getQuestionMarkKeyword_9() { return cQuestionMarkKeyword_9; }
		
		//'!'
		public Keyword getExclamationMarkKeyword_10() { return cExclamationMarkKeyword_10; }
		
		//'+'
		public Keyword getPlusSignKeyword_11() { return cPlusSignKeyword_11; }
		
		//'*'
		public Keyword getAsteriskKeyword_12() { return cAsteriskKeyword_12; }
		
		//'='
		public Keyword getEqualsSignKeyword_13() { return cEqualsSignKeyword_13; }
		
		//'°'
		public Keyword getDegreeSignKeyword_14() { return cDegreeSignKeyword_14; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_15() { return cGreaterThanSignKeyword_15; }
		
		//'/'
		public Keyword getSolidusKeyword_16() { return cSolidusKeyword_16; }
		
		//'|'
		public Keyword getVerticalLineKeyword_17() { return cVerticalLineKeyword_17; }
		
		//'\\'
		public Keyword getBackslashKeyword_18() { return cBackslashKeyword_18; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_19() { return cLeftParenthesisKeyword_19; }
		
		//')'
		public Keyword getRightParenthesisKeyword_20() { return cRightParenthesisKeyword_20; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_21() { return cLeftCurlyBracketKeyword_21; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_22() { return cRightCurlyBracketKeyword_22; }
		
		//'"'
		public Keyword getQuotationMarkKeyword_23() { return cQuotationMarkKeyword_23; }
		
		//"'"
		public Keyword getApostropheKeyword_24() { return cApostropheKeyword_24; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_25() { return cLeftSquareBracketKeyword_25; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_26() { return cRightSquareBracketKeyword_26; }
		
		//'@'
		public Keyword getCommercialAtKeyword_27() { return cCommercialAtKeyword_27; }
		
		//'&'
		public Keyword getAmpersandKeyword_28() { return cAmpersandKeyword_28; }
		
		//'#'
		public Keyword getNumberSignKeyword_29() { return cNumberSignKeyword_29; }
	}
	public class NullTagElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.NullTag");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNullKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cSolidusGreaterThanSignKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Keyword cNullKeyword_1_1_1 = (Keyword)cGroup_1_1.eContents().get(1);
		
		//NullTag:
		//	'<null' ('/>' | '>' '</null>');
		@Override public ParserRule getRule() { return rule; }
		
		//'<null' ('/>' | '>' '</null>')
		public Group getGroup() { return cGroup; }
		
		//'<null'
		public Keyword getNullKeyword_0() { return cNullKeyword_0; }
		
		//'/>' | '>' '</null>'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_1_0() { return cSolidusGreaterThanSignKeyword_1_0; }
		
		//'>' '</null>'
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_1_1_0() { return cGreaterThanSignKeyword_1_1_0; }
		
		//'</null>'
		public Keyword getNullKeyword_1_1_1() { return cNullKeyword_1_1_1; }
	}
	public class ValidStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.ValidString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Keyword cTrueKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cFalseKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cDefaultKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cNoKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cByNameKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cByTypeKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cConstructorKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cInterfacesKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cTargetClassKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		
		//ValidString:
		//	STRING | '"true"' | '"false"' | '"default"' | '"no"' | '"byName"' | '"byType"' | '"constructor"' | '"interfaces"' |
		//	'"targetClass"';
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | '"true"' | '"false"' | '"default"' | '"no"' | '"byName"' | '"byType"' | '"constructor"' | '"interfaces"' |
		//'"targetClass"'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//'"true"'
		public Keyword getTrueKeyword_1() { return cTrueKeyword_1; }
		
		//'"false"'
		public Keyword getFalseKeyword_2() { return cFalseKeyword_2; }
		
		//'"default"'
		public Keyword getDefaultKeyword_3() { return cDefaultKeyword_3; }
		
		//'"no"'
		public Keyword getNoKeyword_4() { return cNoKeyword_4; }
		
		//'"byName"'
		public Keyword getByNameKeyword_5() { return cByNameKeyword_5; }
		
		//'"byType"'
		public Keyword getByTypeKeyword_6() { return cByTypeKeyword_6; }
		
		//'"constructor"'
		public Keyword getConstructorKeyword_7() { return cConstructorKeyword_7; }
		
		//'"interfaces"'
		public Keyword getInterfacesKeyword_8() { return cInterfacesKeyword_8; }
		
		//'"targetClass"'
		public Keyword getTargetClassKeyword_9() { return cTargetClassKeyword_9; }
	}
	
	public class SBooleanElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.sBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cFALSEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cFALSEFalseKeyword_0_0 = (Keyword)cFALSEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFALSEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFALSEFalseKeyword_1_0 = (Keyword)cFALSEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cTRUEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cTRUETrueKeyword_2_0 = (Keyword)cTRUEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cTRUEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cTRUETrueKeyword_3_0 = (Keyword)cTRUEEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum sBoolean:
		//	FALSE='"false"' | FALSE="'false'"
		//	| TRUE='"true"' | TRUE="'true'";
		public EnumRule getRule() { return rule; }
		
		//FALSE='"false"' | FALSE="'false'" | TRUE='"true"' | TRUE="'true'"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FALSE='"false"'
		public EnumLiteralDeclaration getFALSEEnumLiteralDeclaration_0() { return cFALSEEnumLiteralDeclaration_0; }
		
		//'"false"'
		public Keyword getFALSEFalseKeyword_0_0() { return cFALSEFalseKeyword_0_0; }
		
		//FALSE="'false'"
		public EnumLiteralDeclaration getFALSEEnumLiteralDeclaration_1() { return cFALSEEnumLiteralDeclaration_1; }
		
		//"'false'"
		public Keyword getFALSEFalseKeyword_1_0() { return cFALSEFalseKeyword_1_0; }
		
		//TRUE='"true"'
		public EnumLiteralDeclaration getTRUEEnumLiteralDeclaration_2() { return cTRUEEnumLiteralDeclaration_2; }
		
		//'"true"'
		public Keyword getTRUETrueKeyword_2_0() { return cTRUETrueKeyword_2_0; }
		
		//TRUE="'true'"
		public EnumLiteralDeclaration getTRUEEnumLiteralDeclaration_3() { return cTRUEEnumLiteralDeclaration_3; }
		
		//"'true'"
		public Keyword getTRUETrueKeyword_3_0() { return cTRUETrueKeyword_3_0; }
	}
	public class DefaultableBooleanElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.DefaultableBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDEFAULTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDEFAULTDefaultKeyword_0_0 = (Keyword)cDEFAULTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDEFAULTEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDEFAULTDefaultKeyword_1_0 = (Keyword)cDEFAULTEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cFALSEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cFALSEFalseKeyword_2_0 = (Keyword)cFALSEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cFALSEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cFALSEFalseKeyword_3_0 = (Keyword)cFALSEEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cTRUEEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cTRUETrueKeyword_4_0 = (Keyword)cTRUEEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cTRUEEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cTRUETrueKeyword_5_0 = (Keyword)cTRUEEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum DefaultableBoolean:
		//	DEFAULT='"default"' | DEFAULT="'default'"
		//	| FALSE='"false"' | FALSE="'false'"
		//	| TRUE='"true"' | TRUE="'true'";
		public EnumRule getRule() { return rule; }
		
		//DEFAULT='"default"' | DEFAULT="'default'" | FALSE='"false"' | FALSE="'false'" | TRUE='"true"' | TRUE="'true'"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DEFAULT='"default"'
		public EnumLiteralDeclaration getDEFAULTEnumLiteralDeclaration_0() { return cDEFAULTEnumLiteralDeclaration_0; }
		
		//'"default"'
		public Keyword getDEFAULTDefaultKeyword_0_0() { return cDEFAULTDefaultKeyword_0_0; }
		
		//DEFAULT="'default'"
		public EnumLiteralDeclaration getDEFAULTEnumLiteralDeclaration_1() { return cDEFAULTEnumLiteralDeclaration_1; }
		
		//"'default'"
		public Keyword getDEFAULTDefaultKeyword_1_0() { return cDEFAULTDefaultKeyword_1_0; }
		
		//FALSE='"false"'
		public EnumLiteralDeclaration getFALSEEnumLiteralDeclaration_2() { return cFALSEEnumLiteralDeclaration_2; }
		
		//'"false"'
		public Keyword getFALSEFalseKeyword_2_0() { return cFALSEFalseKeyword_2_0; }
		
		//FALSE="'false'"
		public EnumLiteralDeclaration getFALSEEnumLiteralDeclaration_3() { return cFALSEEnumLiteralDeclaration_3; }
		
		//"'false'"
		public Keyword getFALSEFalseKeyword_3_0() { return cFALSEFalseKeyword_3_0; }
		
		//TRUE='"true"'
		public EnumLiteralDeclaration getTRUEEnumLiteralDeclaration_4() { return cTRUEEnumLiteralDeclaration_4; }
		
		//'"true"'
		public Keyword getTRUETrueKeyword_4_0() { return cTRUETrueKeyword_4_0; }
		
		//TRUE="'true'"
		public EnumLiteralDeclaration getTRUEEnumLiteralDeclaration_5() { return cTRUEEnumLiteralDeclaration_5; }
		
		//"'true'"
		public Keyword getTRUETrueKeyword_5_0() { return cTRUETrueKeyword_5_0; }
	}
	public class AutoWiredTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.AutoWiredType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDEFAULTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDEFAULTDefaultKeyword_0_0 = (Keyword)cDEFAULTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDEFAULTEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDEFAULTDefaultKeyword_1_0 = (Keyword)cDEFAULTEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cNOEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cNONoKeyword_2_0 = (Keyword)cNOEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cNOEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cNONoKeyword_3_0 = (Keyword)cNOEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cBYNAMEEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cBYNAMEByNameKeyword_4_0 = (Keyword)cBYNAMEEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cBYNAMEEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cBYNAMEByNameKeyword_5_0 = (Keyword)cBYNAMEEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cBYTYPEEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cBYTYPEByTypeKeyword_6_0 = (Keyword)cBYTYPEEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cBYTYPEEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cBYTYPEByTypeKeyword_7_0 = (Keyword)cBYTYPEEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cCONSTRUCTOREnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cCONSTRUCTORConstructorKeyword_8_0 = (Keyword)cCONSTRUCTOREnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cCONSTRUCTOREnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cCONSTRUCTORConstructorKeyword_9_0 = (Keyword)cCONSTRUCTOREnumLiteralDeclaration_9.eContents().get(0);
		
		//enum AutoWiredType:
		//	DEFAULT='"default"' | DEFAULT="'default'"
		//	| NO='"no"' | NO="'no'"
		//	| BYNAME='"byName"' | BYNAME="'byName'"
		//	| BYTYPE='"byType"' | BYTYPE="'byType'"
		//	| CONSTRUCTOR='"constructor"' | CONSTRUCTOR="'constructor'";
		public EnumRule getRule() { return rule; }
		
		//DEFAULT='"default"' | DEFAULT="'default'" | NO='"no"' | NO="'no'" | BYNAME='"byName"' | BYNAME="'byName'" |
		//BYTYPE='"byType"' | BYTYPE="'byType'" | CONSTRUCTOR='"constructor"' | CONSTRUCTOR="'constructor'"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DEFAULT='"default"'
		public EnumLiteralDeclaration getDEFAULTEnumLiteralDeclaration_0() { return cDEFAULTEnumLiteralDeclaration_0; }
		
		//'"default"'
		public Keyword getDEFAULTDefaultKeyword_0_0() { return cDEFAULTDefaultKeyword_0_0; }
		
		//DEFAULT="'default'"
		public EnumLiteralDeclaration getDEFAULTEnumLiteralDeclaration_1() { return cDEFAULTEnumLiteralDeclaration_1; }
		
		//"'default'"
		public Keyword getDEFAULTDefaultKeyword_1_0() { return cDEFAULTDefaultKeyword_1_0; }
		
		//NO='"no"'
		public EnumLiteralDeclaration getNOEnumLiteralDeclaration_2() { return cNOEnumLiteralDeclaration_2; }
		
		//'"no"'
		public Keyword getNONoKeyword_2_0() { return cNONoKeyword_2_0; }
		
		//NO="'no'"
		public EnumLiteralDeclaration getNOEnumLiteralDeclaration_3() { return cNOEnumLiteralDeclaration_3; }
		
		//"'no'"
		public Keyword getNONoKeyword_3_0() { return cNONoKeyword_3_0; }
		
		//BYNAME='"byName"'
		public EnumLiteralDeclaration getBYNAMEEnumLiteralDeclaration_4() { return cBYNAMEEnumLiteralDeclaration_4; }
		
		//'"byName"'
		public Keyword getBYNAMEByNameKeyword_4_0() { return cBYNAMEByNameKeyword_4_0; }
		
		//BYNAME="'byName'"
		public EnumLiteralDeclaration getBYNAMEEnumLiteralDeclaration_5() { return cBYNAMEEnumLiteralDeclaration_5; }
		
		//"'byName'"
		public Keyword getBYNAMEByNameKeyword_5_0() { return cBYNAMEByNameKeyword_5_0; }
		
		//BYTYPE='"byType"'
		public EnumLiteralDeclaration getBYTYPEEnumLiteralDeclaration_6() { return cBYTYPEEnumLiteralDeclaration_6; }
		
		//'"byType"'
		public Keyword getBYTYPEByTypeKeyword_6_0() { return cBYTYPEByTypeKeyword_6_0; }
		
		//BYTYPE="'byType'"
		public EnumLiteralDeclaration getBYTYPEEnumLiteralDeclaration_7() { return cBYTYPEEnumLiteralDeclaration_7; }
		
		//"'byType'"
		public Keyword getBYTYPEByTypeKeyword_7_0() { return cBYTYPEByTypeKeyword_7_0; }
		
		//CONSTRUCTOR='"constructor"'
		public EnumLiteralDeclaration getCONSTRUCTOREnumLiteralDeclaration_8() { return cCONSTRUCTOREnumLiteralDeclaration_8; }
		
		//'"constructor"'
		public Keyword getCONSTRUCTORConstructorKeyword_8_0() { return cCONSTRUCTORConstructorKeyword_8_0; }
		
		//CONSTRUCTOR="'constructor'"
		public EnumLiteralDeclaration getCONSTRUCTOREnumLiteralDeclaration_9() { return cCONSTRUCTOREnumLiteralDeclaration_9; }
		
		//"'constructor'"
		public Keyword getCONSTRUCTORConstructorKeyword_9_0() { return cCONSTRUCTORConstructorKeyword_9_0; }
	}
	public class EnumScopedProxyElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.EnumScopedProxy");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNOEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNONoKeyword_0_0 = (Keyword)cNOEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNOEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNONoKeyword_1_0 = (Keyword)cNOEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cINTERFACESEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cINTERFACESInterfacesKeyword_2_0 = (Keyword)cINTERFACESEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cINTERFACESEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cINTERFACESInterfacesKeyword_3_0 = (Keyword)cINTERFACESEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cTARGETCLASSEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cTARGETCLASSTargetClassKeyword_4_0 = (Keyword)cTARGETCLASSEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cTARGETCLASSEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cTARGETCLASSTargetClassKeyword_5_0 = (Keyword)cTARGETCLASSEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum EnumScopedProxy:
		//	NO='"no"' | NO="'no'"
		//	| INTERFACES='"interfaces"' | INTERFACES="'interfaces'"
		//	| TARGETCLASS='"targetClass"' | TARGETCLASS="'targetClass'";
		public EnumRule getRule() { return rule; }
		
		//NO='"no"' | NO="'no'" | INTERFACES='"interfaces"' | INTERFACES="'interfaces'" | TARGETCLASS='"targetClass"' |
		//TARGETCLASS="'targetClass'"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NO='"no"'
		public EnumLiteralDeclaration getNOEnumLiteralDeclaration_0() { return cNOEnumLiteralDeclaration_0; }
		
		//'"no"'
		public Keyword getNONoKeyword_0_0() { return cNONoKeyword_0_0; }
		
		//NO="'no'"
		public EnumLiteralDeclaration getNOEnumLiteralDeclaration_1() { return cNOEnumLiteralDeclaration_1; }
		
		//"'no'"
		public Keyword getNONoKeyword_1_0() { return cNONoKeyword_1_0; }
		
		//INTERFACES='"interfaces"'
		public EnumLiteralDeclaration getINTERFACESEnumLiteralDeclaration_2() { return cINTERFACESEnumLiteralDeclaration_2; }
		
		//'"interfaces"'
		public Keyword getINTERFACESInterfacesKeyword_2_0() { return cINTERFACESInterfacesKeyword_2_0; }
		
		//INTERFACES="'interfaces'"
		public EnumLiteralDeclaration getINTERFACESEnumLiteralDeclaration_3() { return cINTERFACESEnumLiteralDeclaration_3; }
		
		//"'interfaces'"
		public Keyword getINTERFACESInterfacesKeyword_3_0() { return cINTERFACESInterfacesKeyword_3_0; }
		
		//TARGETCLASS='"targetClass"'
		public EnumLiteralDeclaration getTARGETCLASSEnumLiteralDeclaration_4() { return cTARGETCLASSEnumLiteralDeclaration_4; }
		
		//'"targetClass"'
		public Keyword getTARGETCLASSTargetClassKeyword_4_0() { return cTARGETCLASSTargetClassKeyword_4_0; }
		
		//TARGETCLASS="'targetClass'"
		public EnumLiteralDeclaration getTARGETCLASSEnumLiteralDeclaration_5() { return cTARGETCLASSEnumLiteralDeclaration_5; }
		
		//"'targetClass'"
		public Keyword getTARGETCLASSTargetClassKeyword_5_0() { return cTARGETCLASSTargetClassKeyword_5_0; }
	}
	public class EnumTypeFilterElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.EnumTypeFilter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cANNOTATIONEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cANNOTATIONAnnotationKeyword_0_0 = (Keyword)cANNOTATIONEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cANNOTATIONEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cANNOTATIONAnnotationKeyword_1_0 = (Keyword)cANNOTATIONEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cASSIGNABLEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cASSIGNABLEAssignableKeyword_2_0 = (Keyword)cASSIGNABLEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cASSIGNABLEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cASSIGNABLEAssignableKeyword_3_0 = (Keyword)cASSIGNABLEEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cASPECTJEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cASPECTJAspectjKeyword_4_0 = (Keyword)cASPECTJEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cASPECTJEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cASPECTJAspectjKeyword_5_0 = (Keyword)cASPECTJEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cREGEXEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cREGEXRegexKeyword_6_0 = (Keyword)cREGEXEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cREGEXEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cREGEXRegexKeyword_7_0 = (Keyword)cREGEXEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cCUSTOMEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cCUSTOMCustomKeyword_8_0 = (Keyword)cCUSTOMEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cCUSTOMEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cCUSTOMCustomKeyword_9_0 = (Keyword)cCUSTOMEnumLiteralDeclaration_9.eContents().get(0);
		
		//enum EnumTypeFilter:
		//	ANNOTATION='"annotation"' | ANNOTATION="'annotation'"
		//	| ASSIGNABLE='"assignable"' | ASSIGNABLE="'assignable'"
		//	| ASPECTJ='"aspectj"' | ASPECTJ="'aspectj'"
		//	| REGEX='"regex"' | REGEX="'regex'"
		//	| CUSTOM='"custom"' | CUSTOM="'custom'";
		public EnumRule getRule() { return rule; }
		
		//ANNOTATION='"annotation"' | ANNOTATION="'annotation'" | ASSIGNABLE='"assignable"' | ASSIGNABLE="'assignable'" |
		//ASPECTJ='"aspectj"' | ASPECTJ="'aspectj'" | REGEX='"regex"' | REGEX="'regex'" | CUSTOM='"custom"' | CUSTOM="'custom'"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ANNOTATION='"annotation"'
		public EnumLiteralDeclaration getANNOTATIONEnumLiteralDeclaration_0() { return cANNOTATIONEnumLiteralDeclaration_0; }
		
		//'"annotation"'
		public Keyword getANNOTATIONAnnotationKeyword_0_0() { return cANNOTATIONAnnotationKeyword_0_0; }
		
		//ANNOTATION="'annotation'"
		public EnumLiteralDeclaration getANNOTATIONEnumLiteralDeclaration_1() { return cANNOTATIONEnumLiteralDeclaration_1; }
		
		//"'annotation'"
		public Keyword getANNOTATIONAnnotationKeyword_1_0() { return cANNOTATIONAnnotationKeyword_1_0; }
		
		//ASSIGNABLE='"assignable"'
		public EnumLiteralDeclaration getASSIGNABLEEnumLiteralDeclaration_2() { return cASSIGNABLEEnumLiteralDeclaration_2; }
		
		//'"assignable"'
		public Keyword getASSIGNABLEAssignableKeyword_2_0() { return cASSIGNABLEAssignableKeyword_2_0; }
		
		//ASSIGNABLE="'assignable'"
		public EnumLiteralDeclaration getASSIGNABLEEnumLiteralDeclaration_3() { return cASSIGNABLEEnumLiteralDeclaration_3; }
		
		//"'assignable'"
		public Keyword getASSIGNABLEAssignableKeyword_3_0() { return cASSIGNABLEAssignableKeyword_3_0; }
		
		//ASPECTJ='"aspectj"'
		public EnumLiteralDeclaration getASPECTJEnumLiteralDeclaration_4() { return cASPECTJEnumLiteralDeclaration_4; }
		
		//'"aspectj"'
		public Keyword getASPECTJAspectjKeyword_4_0() { return cASPECTJAspectjKeyword_4_0; }
		
		//ASPECTJ="'aspectj'"
		public EnumLiteralDeclaration getASPECTJEnumLiteralDeclaration_5() { return cASPECTJEnumLiteralDeclaration_5; }
		
		//"'aspectj'"
		public Keyword getASPECTJAspectjKeyword_5_0() { return cASPECTJAspectjKeyword_5_0; }
		
		//REGEX='"regex"'
		public EnumLiteralDeclaration getREGEXEnumLiteralDeclaration_6() { return cREGEXEnumLiteralDeclaration_6; }
		
		//'"regex"'
		public Keyword getREGEXRegexKeyword_6_0() { return cREGEXRegexKeyword_6_0; }
		
		//REGEX="'regex'"
		public EnumLiteralDeclaration getREGEXEnumLiteralDeclaration_7() { return cREGEXEnumLiteralDeclaration_7; }
		
		//"'regex'"
		public Keyword getREGEXRegexKeyword_7_0() { return cREGEXRegexKeyword_7_0; }
		
		//CUSTOM='"custom"'
		public EnumLiteralDeclaration getCUSTOMEnumLiteralDeclaration_8() { return cCUSTOMEnumLiteralDeclaration_8; }
		
		//'"custom"'
		public Keyword getCUSTOMCustomKeyword_8_0() { return cCUSTOMCustomKeyword_8_0; }
		
		//CUSTOM="'custom'"
		public EnumLiteralDeclaration getCUSTOMEnumLiteralDeclaration_9() { return cCUSTOMEnumLiteralDeclaration_9; }
		
		//"'custom'"
		public Keyword getCUSTOMCustomKeyword_9_0() { return cCUSTOMCustomKeyword_9_0; }
	}
	public class MbeanRegistrationEnumElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.MbeanRegistrationEnum");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cFAILONEXISTINGEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cFAILONEXISTINGFailOnExistingKeyword_0_0 = (Keyword)cFAILONEXISTINGEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFAILONEXISTINGEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFAILONEXISTINGFailOnExistingKeyword_1_0 = (Keyword)cFAILONEXISTINGEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cIGNOREEXISTINGEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cIGNOREEXISTINGIgnoreExistingKeyword_2_0 = (Keyword)cIGNOREEXISTINGEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cIGNOREEXISTINGEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cIGNOREEXISTINGIgnoreExistingKeyword_3_0 = (Keyword)cIGNOREEXISTINGEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cREPLACEEXISTINGEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cREPLACEEXISTINGReplaceExistingKeyword_4_0 = (Keyword)cREPLACEEXISTINGEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cREPLACEEXISTINGEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cREPLACEEXISTINGReplaceExistingKeyword_5_0 = (Keyword)cREPLACEEXISTINGEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum MbeanRegistrationEnum:
		//	FAILONEXISTING='"failOnExisting"' | FAILONEXISTING="'failOnExisting'"
		//	| IGNOREEXISTING='"ignoreExisting"' | IGNOREEXISTING="'ignoreExisting'"
		//	| REPLACEEXISTING='"replaceExisting"' | REPLACEEXISTING="'replaceExisting'";
		public EnumRule getRule() { return rule; }
		
		//FAILONEXISTING='"failOnExisting"' | FAILONEXISTING="'failOnExisting'" | IGNOREEXISTING='"ignoreExisting"' |
		//IGNOREEXISTING="'ignoreExisting'" | REPLACEEXISTING='"replaceExisting"' | REPLACEEXISTING="'replaceExisting'"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FAILONEXISTING='"failOnExisting"'
		public EnumLiteralDeclaration getFAILONEXISTINGEnumLiteralDeclaration_0() { return cFAILONEXISTINGEnumLiteralDeclaration_0; }
		
		//'"failOnExisting"'
		public Keyword getFAILONEXISTINGFailOnExistingKeyword_0_0() { return cFAILONEXISTINGFailOnExistingKeyword_0_0; }
		
		//FAILONEXISTING="'failOnExisting'"
		public EnumLiteralDeclaration getFAILONEXISTINGEnumLiteralDeclaration_1() { return cFAILONEXISTINGEnumLiteralDeclaration_1; }
		
		//"'failOnExisting'"
		public Keyword getFAILONEXISTINGFailOnExistingKeyword_1_0() { return cFAILONEXISTINGFailOnExistingKeyword_1_0; }
		
		//IGNOREEXISTING='"ignoreExisting"'
		public EnumLiteralDeclaration getIGNOREEXISTINGEnumLiteralDeclaration_2() { return cIGNOREEXISTINGEnumLiteralDeclaration_2; }
		
		//'"ignoreExisting"'
		public Keyword getIGNOREEXISTINGIgnoreExistingKeyword_2_0() { return cIGNOREEXISTINGIgnoreExistingKeyword_2_0; }
		
		//IGNOREEXISTING="'ignoreExisting'"
		public EnumLiteralDeclaration getIGNOREEXISTINGEnumLiteralDeclaration_3() { return cIGNOREEXISTINGEnumLiteralDeclaration_3; }
		
		//"'ignoreExisting'"
		public Keyword getIGNOREEXISTINGIgnoreExistingKeyword_3_0() { return cIGNOREEXISTINGIgnoreExistingKeyword_3_0; }
		
		//REPLACEEXISTING='"replaceExisting"'
		public EnumLiteralDeclaration getREPLACEEXISTINGEnumLiteralDeclaration_4() { return cREPLACEEXISTINGEnumLiteralDeclaration_4; }
		
		//'"replaceExisting"'
		public Keyword getREPLACEEXISTINGReplaceExistingKeyword_4_0() { return cREPLACEEXISTINGReplaceExistingKeyword_4_0; }
		
		//REPLACEEXISTING="'replaceExisting'"
		public EnumLiteralDeclaration getREPLACEEXISTINGEnumLiteralDeclaration_5() { return cREPLACEEXISTINGEnumLiteralDeclaration_5; }
		
		//"'replaceExisting'"
		public Keyword getREPLACEEXISTINGReplaceExistingKeyword_5_0() { return cREPLACEEXISTINGReplaceExistingKeyword_5_0; }
	}
	public class EnumIsolationElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.EnumIsolation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDEFAULTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDEFAULTDEFAULTKeyword_0_0 = (Keyword)cDEFAULTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDEFAULTEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDEFAULTDEFAULTKeyword_1_0 = (Keyword)cDEFAULTEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cREAD_UNCOMMITTEDEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cREAD_UNCOMMITTEDREAD_UNCOMMITTEDKeyword_2_0 = (Keyword)cREAD_UNCOMMITTEDEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cREAD_UNCOMMITTEDEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cREAD_UNCOMMITTEDREAD_UNCOMMITTEDKeyword_3_0 = (Keyword)cREAD_UNCOMMITTEDEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cREAD_COMMITTEDEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cREAD_COMMITTEDREAD_COMMITTEDKeyword_4_0 = (Keyword)cREAD_COMMITTEDEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cREAD_COMMITTEDEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cREAD_COMMITTEDREAD_COMMITTEDKeyword_5_0 = (Keyword)cREAD_COMMITTEDEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cREPEATABLE_READEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cREPEATABLE_READREPEATABLE_READKeyword_6_0 = (Keyword)cREPEATABLE_READEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cREPEATABLE_READEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cREPEATABLE_READREPEATABLE_READKeyword_7_0 = (Keyword)cREPEATABLE_READEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cSERIALIZABLEEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cSERIALIZABLESERIALIZABLEKeyword_8_0 = (Keyword)cSERIALIZABLEEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cSERIALIZABLEEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cSERIALIZABLESERIALIZABLEKeyword_9_0 = (Keyword)cSERIALIZABLEEnumLiteralDeclaration_9.eContents().get(0);
		
		//enum EnumIsolation:
		//	DEFAULT='"DEFAULT"' | DEFAULT="'DEFAULT'"
		//	| READ_UNCOMMITTED='"READ_UNCOMMITTED"' | READ_UNCOMMITTED="'READ_UNCOMMITTED'"
		//	| READ_COMMITTED='"READ_COMMITTED"' | READ_COMMITTED="'READ_COMMITTED'"
		//	| REPEATABLE_READ='"REPEATABLE_READ"' | REPEATABLE_READ="'REPEATABLE_READ'"
		//	| SERIALIZABLE='"SERIALIZABLE"' | SERIALIZABLE="'SERIALIZABLE'";
		public EnumRule getRule() { return rule; }
		
		//DEFAULT='"DEFAULT"' | DEFAULT="'DEFAULT'" | READ_UNCOMMITTED='"READ_UNCOMMITTED"' |
		//READ_UNCOMMITTED="'READ_UNCOMMITTED'" | READ_COMMITTED='"READ_COMMITTED"' | READ_COMMITTED="'READ_COMMITTED'" |
		//REPEATABLE_READ='"REPEATABLE_READ"' | REPEATABLE_READ="'REPEATABLE_READ'" | SERIALIZABLE='"SERIALIZABLE"' |
		//SERIALIZABLE="'SERIALIZABLE'"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DEFAULT='"DEFAULT"'
		public EnumLiteralDeclaration getDEFAULTEnumLiteralDeclaration_0() { return cDEFAULTEnumLiteralDeclaration_0; }
		
		//'"DEFAULT"'
		public Keyword getDEFAULTDEFAULTKeyword_0_0() { return cDEFAULTDEFAULTKeyword_0_0; }
		
		//DEFAULT="'DEFAULT'"
		public EnumLiteralDeclaration getDEFAULTEnumLiteralDeclaration_1() { return cDEFAULTEnumLiteralDeclaration_1; }
		
		//"'DEFAULT'"
		public Keyword getDEFAULTDEFAULTKeyword_1_0() { return cDEFAULTDEFAULTKeyword_1_0; }
		
		//READ_UNCOMMITTED='"READ_UNCOMMITTED"'
		public EnumLiteralDeclaration getREAD_UNCOMMITTEDEnumLiteralDeclaration_2() { return cREAD_UNCOMMITTEDEnumLiteralDeclaration_2; }
		
		//'"READ_UNCOMMITTED"'
		public Keyword getREAD_UNCOMMITTEDREAD_UNCOMMITTEDKeyword_2_0() { return cREAD_UNCOMMITTEDREAD_UNCOMMITTEDKeyword_2_0; }
		
		//READ_UNCOMMITTED="'READ_UNCOMMITTED'"
		public EnumLiteralDeclaration getREAD_UNCOMMITTEDEnumLiteralDeclaration_3() { return cREAD_UNCOMMITTEDEnumLiteralDeclaration_3; }
		
		//"'READ_UNCOMMITTED'"
		public Keyword getREAD_UNCOMMITTEDREAD_UNCOMMITTEDKeyword_3_0() { return cREAD_UNCOMMITTEDREAD_UNCOMMITTEDKeyword_3_0; }
		
		//READ_COMMITTED='"READ_COMMITTED"'
		public EnumLiteralDeclaration getREAD_COMMITTEDEnumLiteralDeclaration_4() { return cREAD_COMMITTEDEnumLiteralDeclaration_4; }
		
		//'"READ_COMMITTED"'
		public Keyword getREAD_COMMITTEDREAD_COMMITTEDKeyword_4_0() { return cREAD_COMMITTEDREAD_COMMITTEDKeyword_4_0; }
		
		//READ_COMMITTED="'READ_COMMITTED'"
		public EnumLiteralDeclaration getREAD_COMMITTEDEnumLiteralDeclaration_5() { return cREAD_COMMITTEDEnumLiteralDeclaration_5; }
		
		//"'READ_COMMITTED'"
		public Keyword getREAD_COMMITTEDREAD_COMMITTEDKeyword_5_0() { return cREAD_COMMITTEDREAD_COMMITTEDKeyword_5_0; }
		
		//REPEATABLE_READ='"REPEATABLE_READ"'
		public EnumLiteralDeclaration getREPEATABLE_READEnumLiteralDeclaration_6() { return cREPEATABLE_READEnumLiteralDeclaration_6; }
		
		//'"REPEATABLE_READ"'
		public Keyword getREPEATABLE_READREPEATABLE_READKeyword_6_0() { return cREPEATABLE_READREPEATABLE_READKeyword_6_0; }
		
		//REPEATABLE_READ="'REPEATABLE_READ'"
		public EnumLiteralDeclaration getREPEATABLE_READEnumLiteralDeclaration_7() { return cREPEATABLE_READEnumLiteralDeclaration_7; }
		
		//"'REPEATABLE_READ'"
		public Keyword getREPEATABLE_READREPEATABLE_READKeyword_7_0() { return cREPEATABLE_READREPEATABLE_READKeyword_7_0; }
		
		//SERIALIZABLE='"SERIALIZABLE"'
		public EnumLiteralDeclaration getSERIALIZABLEEnumLiteralDeclaration_8() { return cSERIALIZABLEEnumLiteralDeclaration_8; }
		
		//'"SERIALIZABLE"'
		public Keyword getSERIALIZABLESERIALIZABLEKeyword_8_0() { return cSERIALIZABLESERIALIZABLEKeyword_8_0; }
		
		//SERIALIZABLE="'SERIALIZABLE'"
		public EnumLiteralDeclaration getSERIALIZABLEEnumLiteralDeclaration_9() { return cSERIALIZABLEEnumLiteralDeclaration_9; }
		
		//"'SERIALIZABLE'"
		public Keyword getSERIALIZABLESERIALIZABLEKeyword_9_0() { return cSERIALIZABLESERIALIZABLEKeyword_9_0; }
	}
	public class PropagationEnumElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.PropagationEnum");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cREQUIREDEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cREQUIREDREQUIREDKeyword_0_0 = (Keyword)cREQUIREDEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cREQUIREDEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cREQUIREDREQUIREDKeyword_1_0 = (Keyword)cREQUIREDEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSUPPORTSEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSUPPORTSSUPPORTSKeyword_2_0 = (Keyword)cSUPPORTSEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cSUPPORTSEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cSUPPORTSSUPPORTSKeyword_3_0 = (Keyword)cSUPPORTSEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cMANDATORYEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cMANDATORYMANDATORYKeyword_4_0 = (Keyword)cMANDATORYEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cMANDATORYEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cMANDATORYMANDATORYKeyword_5_0 = (Keyword)cMANDATORYEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cREQUIRES_NEWEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cREQUIRES_NEWREQUIRES_NEWKeyword_6_0 = (Keyword)cREQUIRES_NEWEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cREQUIRES_NEWEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cREQUIRES_NEWREQUIRES_NEWKeyword_7_0 = (Keyword)cREQUIRES_NEWEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cNOT_SUPPORTEDEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cNOT_SUPPORTEDNOT_SUPPORTEDKeyword_8_0 = (Keyword)cNOT_SUPPORTEDEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cNOT_SUPPORTEDEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cNOT_SUPPORTEDNOT_SUPPORTEDKeyword_9_0 = (Keyword)cNOT_SUPPORTEDEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cNEVEREnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cNEVERNEVERKeyword_10_0 = (Keyword)cNEVEREnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cNEVEREnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cNEVERNEVERKeyword_11_0 = (Keyword)cNEVEREnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cNESTEDEnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cNESTEDNESTEDKeyword_12_0 = (Keyword)cNESTEDEnumLiteralDeclaration_12.eContents().get(0);
		private final EnumLiteralDeclaration cNESTEDEnumLiteralDeclaration_13 = (EnumLiteralDeclaration)cAlternatives.eContents().get(13);
		private final Keyword cNESTEDNESTEDKeyword_13_0 = (Keyword)cNESTEDEnumLiteralDeclaration_13.eContents().get(0);
		
		//enum PropagationEnum:
		//	REQUIRED='"REQUIRED"' | REQUIRED="'REQUIRED'"
		//	| SUPPORTS='"SUPPORTS"' | SUPPORTS="'SUPPORTS'"
		//	| MANDATORY='"MANDATORY"' | MANDATORY="'MANDATORY'"
		//	| REQUIRES_NEW='"REQUIRES_NEW"' | REQUIRES_NEW="'REQUIRES_NEW'"
		//	| NOT_SUPPORTED='"NOT_SUPPORTED"' | NOT_SUPPORTED="'NOT_SUPPORTED'"
		//	| NEVER='"NEVER"' | NEVER="'NEVER'"
		//	| NESTED='"NESTED"' | NESTED="'NESTED'";
		public EnumRule getRule() { return rule; }
		
		//REQUIRED='"REQUIRED"' | REQUIRED="'REQUIRED'" | SUPPORTS='"SUPPORTS"' | SUPPORTS="'SUPPORTS'" | MANDATORY='"MANDATORY"'
		//| MANDATORY="'MANDATORY'" | REQUIRES_NEW='"REQUIRES_NEW"' | REQUIRES_NEW="'REQUIRES_NEW'" |
		//NOT_SUPPORTED='"NOT_SUPPORTED"' | NOT_SUPPORTED="'NOT_SUPPORTED'" | NEVER='"NEVER"' | NEVER="'NEVER'" |
		//NESTED='"NESTED"' | NESTED="'NESTED'"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//REQUIRED='"REQUIRED"'
		public EnumLiteralDeclaration getREQUIREDEnumLiteralDeclaration_0() { return cREQUIREDEnumLiteralDeclaration_0; }
		
		//'"REQUIRED"'
		public Keyword getREQUIREDREQUIREDKeyword_0_0() { return cREQUIREDREQUIREDKeyword_0_0; }
		
		//REQUIRED="'REQUIRED'"
		public EnumLiteralDeclaration getREQUIREDEnumLiteralDeclaration_1() { return cREQUIREDEnumLiteralDeclaration_1; }
		
		//"'REQUIRED'"
		public Keyword getREQUIREDREQUIREDKeyword_1_0() { return cREQUIREDREQUIREDKeyword_1_0; }
		
		//SUPPORTS='"SUPPORTS"'
		public EnumLiteralDeclaration getSUPPORTSEnumLiteralDeclaration_2() { return cSUPPORTSEnumLiteralDeclaration_2; }
		
		//'"SUPPORTS"'
		public Keyword getSUPPORTSSUPPORTSKeyword_2_0() { return cSUPPORTSSUPPORTSKeyword_2_0; }
		
		//SUPPORTS="'SUPPORTS'"
		public EnumLiteralDeclaration getSUPPORTSEnumLiteralDeclaration_3() { return cSUPPORTSEnumLiteralDeclaration_3; }
		
		//"'SUPPORTS'"
		public Keyword getSUPPORTSSUPPORTSKeyword_3_0() { return cSUPPORTSSUPPORTSKeyword_3_0; }
		
		//MANDATORY='"MANDATORY"'
		public EnumLiteralDeclaration getMANDATORYEnumLiteralDeclaration_4() { return cMANDATORYEnumLiteralDeclaration_4; }
		
		//'"MANDATORY"'
		public Keyword getMANDATORYMANDATORYKeyword_4_0() { return cMANDATORYMANDATORYKeyword_4_0; }
		
		//MANDATORY="'MANDATORY'"
		public EnumLiteralDeclaration getMANDATORYEnumLiteralDeclaration_5() { return cMANDATORYEnumLiteralDeclaration_5; }
		
		//"'MANDATORY'"
		public Keyword getMANDATORYMANDATORYKeyword_5_0() { return cMANDATORYMANDATORYKeyword_5_0; }
		
		//REQUIRES_NEW='"REQUIRES_NEW"'
		public EnumLiteralDeclaration getREQUIRES_NEWEnumLiteralDeclaration_6() { return cREQUIRES_NEWEnumLiteralDeclaration_6; }
		
		//'"REQUIRES_NEW"'
		public Keyword getREQUIRES_NEWREQUIRES_NEWKeyword_6_0() { return cREQUIRES_NEWREQUIRES_NEWKeyword_6_0; }
		
		//REQUIRES_NEW="'REQUIRES_NEW'"
		public EnumLiteralDeclaration getREQUIRES_NEWEnumLiteralDeclaration_7() { return cREQUIRES_NEWEnumLiteralDeclaration_7; }
		
		//"'REQUIRES_NEW'"
		public Keyword getREQUIRES_NEWREQUIRES_NEWKeyword_7_0() { return cREQUIRES_NEWREQUIRES_NEWKeyword_7_0; }
		
		//NOT_SUPPORTED='"NOT_SUPPORTED"'
		public EnumLiteralDeclaration getNOT_SUPPORTEDEnumLiteralDeclaration_8() { return cNOT_SUPPORTEDEnumLiteralDeclaration_8; }
		
		//'"NOT_SUPPORTED"'
		public Keyword getNOT_SUPPORTEDNOT_SUPPORTEDKeyword_8_0() { return cNOT_SUPPORTEDNOT_SUPPORTEDKeyword_8_0; }
		
		//NOT_SUPPORTED="'NOT_SUPPORTED'"
		public EnumLiteralDeclaration getNOT_SUPPORTEDEnumLiteralDeclaration_9() { return cNOT_SUPPORTEDEnumLiteralDeclaration_9; }
		
		//"'NOT_SUPPORTED'"
		public Keyword getNOT_SUPPORTEDNOT_SUPPORTEDKeyword_9_0() { return cNOT_SUPPORTEDNOT_SUPPORTEDKeyword_9_0; }
		
		//NEVER='"NEVER"'
		public EnumLiteralDeclaration getNEVEREnumLiteralDeclaration_10() { return cNEVEREnumLiteralDeclaration_10; }
		
		//'"NEVER"'
		public Keyword getNEVERNEVERKeyword_10_0() { return cNEVERNEVERKeyword_10_0; }
		
		//NEVER="'NEVER'"
		public EnumLiteralDeclaration getNEVEREnumLiteralDeclaration_11() { return cNEVEREnumLiteralDeclaration_11; }
		
		//"'NEVER'"
		public Keyword getNEVERNEVERKeyword_11_0() { return cNEVERNEVERKeyword_11_0; }
		
		//NESTED='"NESTED"'
		public EnumLiteralDeclaration getNESTEDEnumLiteralDeclaration_12() { return cNESTEDEnumLiteralDeclaration_12; }
		
		//'"NESTED"'
		public Keyword getNESTEDNESTEDKeyword_12_0() { return cNESTEDNESTEDKeyword_12_0; }
		
		//NESTED="'NESTED'"
		public EnumLiteralDeclaration getNESTEDEnumLiteralDeclaration_13() { return cNESTEDEnumLiteralDeclaration_13; }
		
		//"'NESTED'"
		public Keyword getNESTEDNESTEDKeyword_13_0() { return cNESTEDNESTEDKeyword_13_0; }
	}
	
	private final SpringProjectElements pSpringProject;
	private final AbstractKeyValueElements pAbstractKeyValue;
	private final AbstractArtefactElements pAbstractArtefact;
	private final CollectionElements pCollection;
	private final ConfigurationElements pConfiguration;
	private final MVCElements pMVC;
	private final AliasElements pAlias;
	private final ImportElements pImport;
	private final ContextElements pContext;
	private final ContextTypeElements pContextType;
	private final AnnotationConfigElements pAnnotationConfig;
	private final ComponentScanElements pComponentScan;
	private final IncludeFilterElements pIncludeFilter;
	private final ExcludeFilterElements pExcludeFilter;
	private final LoadTimeWeaverElements pLoadTimeWeaver;
	private final MbeanExportElements pMbeanExport;
	private final MbeanServerElements pMbeanServer;
	private final PropertyHolderElements pPropertyHolder;
	private final PropertyPlaceholderElements pPropertyPlaceholder;
	private final PropertyOverrideElements pPropertyOverride;
	private final SpringConfiguredElements pSpringConfigured;
	private final AspectElements pAspect;
	private final AspectTypeElements pAspectType;
	private final AopAspectJAutoproxyElements pAopAspectJAutoproxy;
	private final AopIncludeElements pAopInclude;
	private final AopConfigElements pAopConfig;
	private final AopPointcutElements pAopPointcut;
	private final AopAdvisorElements pAopAdvisor;
	private final PointCutExpressionElements pPointCutExpression;
	private final AopAspectElements pAopAspect;
	private final DeclareParentsElements pDeclareParents;
	private final AopImplInterfaceElements pAopImplInterface;
	private final AopDefaultImplInterfaceElements pAopDefaultImplInterface;
	private final AopDelegateImplRefElements pAopDelegateImplRef;
	private final AdviseElements pAdvise;
	private final BeforeAdviseElements pBeforeAdvise;
	private final AfterAdviseElements pAfterAdvise;
	private final AroundAdviseElements pAroundAdvise;
	private final AfterReturningElements pAfterReturning;
	private final AfterThowingElements pAfterThowing;
	private final TxAdviseElements pTxAdvise;
	private final TxAttributeElements pTxAttribute;
	private final TxMethodElements pTxMethod;
	private final TxJtaTransactionManagerElements pTxJtaTransactionManager;
	private final ComponentElements pComponent;
	private final CreationMethodElements pCreationMethod;
	private final ClassOrFactoryElements pClassOrFactory;
	private final FactoryElements pFactory;
	private final ClassElements pClass;
	private final AopScopedProxyElements pAopScopedProxy;
	private final FeatureElements pFeature;
	private final PropertyElements pProperty;
	private final AttributeAttElements pAttributeAtt;
	private final AttributeTagElements pAttributeTag;
	private final AttributSimpleElements pAttributSimple;
	private final AttributSimpleValueElements pAttributSimpleValue;
	private final IdRefTagElements pIdRefTag;
	private final ReferenceAttElements pReferenceAtt;
	private final ReferenceTagElements pReferenceTag;
	private final ReferenceComponentElements pReferenceComponent;
	private final ConstructorArgElements pConstructorArg;
	private final ConstructorArgAttElements pConstructorArgAtt;
	private final AttributesConsElements pAttributesCons;
	private final PNamespaceElements pPNamespace;
	private final CNamespaceElements pCNamespace;
	private final LookupMethodElements pLookupMethod;
	private final QualifierElements pQualifier;
	private final MetaTagElements pMetaTag;
	private final QualifierAttributeElements pQualifierAttribute;
	private final SListElements pSList;
	private final SSetElements pSSet;
	private final PropsElements pProps;
	private final PropElements pProp;
	private final MapElements pMap;
	private final MapEntryElements pMapEntry;
	private final MapEntryKeyElements pMapEntryKey;
	private final MapEntryValueElements pMapEntryValue;
	private final MapEntryAttElements pMapEntryAtt;
	private final KeyElements pKey;
	private final MapEntryKeyAttElements pMapEntryKeyAtt;
	private final MapEntrykeyRefElements pMapEntrykeyRef;
	private final MapEntryValRefElements pMapEntryValRef;
	private final UtilConstantElements pUtilConstant;
	private final UtilPropertyPathElements pUtilPropertyPath;
	private final UtilPropertiesElements pUtilProperties;
	private final UtilListElements pUtilList;
	private final UtilMapElements pUtilMap;
	private final UtilSetElements pUtilSet;
	private final PropertyFileSimpleElements pPropertyFileSimple;
	private final PropertyFileElements pPropertyFile;
	private final DescriptionElements pDescription;
	private final DataStringElements pDataString;
	private final IdDashAndColonElements pIdDashAndColon;
	private final IdWithDashElements pIdWithDash;
	private final QSTRINGElements pQSTRING;
	private final NullTagElements pNullTag;
	private final ValidStringElements pValidString;
	private final SBooleanElements eSBoolean;
	private final DefaultableBooleanElements eDefaultableBoolean;
	private final AutoWiredTypeElements eAutoWiredType;
	private final EnumScopedProxyElements eEnumScopedProxy;
	private final EnumTypeFilterElements eEnumTypeFilter;
	private final MbeanRegistrationEnumElements eMbeanRegistrationEnum;
	private final EnumIsolationElements eEnumIsolation;
	private final PropagationEnumElements ePropagationEnum;
	private final TerminalRule tID;
	private final TerminalRule tINT;
	private final TerminalRule tSTRING;
	private final TerminalRule tWS;
	private final TerminalRule tANY_OTHER;
	private final TerminalRule tML_COMMENT;
	
	private final Grammar grammar;

	@Inject
	public SpringConfigDslGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.pSpringProject = new SpringProjectElements();
		this.pAbstractKeyValue = new AbstractKeyValueElements();
		this.pAbstractArtefact = new AbstractArtefactElements();
		this.pCollection = new CollectionElements();
		this.pConfiguration = new ConfigurationElements();
		this.pMVC = new MVCElements();
		this.pAlias = new AliasElements();
		this.pImport = new ImportElements();
		this.pContext = new ContextElements();
		this.pContextType = new ContextTypeElements();
		this.pAnnotationConfig = new AnnotationConfigElements();
		this.pComponentScan = new ComponentScanElements();
		this.pIncludeFilter = new IncludeFilterElements();
		this.pExcludeFilter = new ExcludeFilterElements();
		this.pLoadTimeWeaver = new LoadTimeWeaverElements();
		this.pMbeanExport = new MbeanExportElements();
		this.pMbeanServer = new MbeanServerElements();
		this.pPropertyHolder = new PropertyHolderElements();
		this.pPropertyPlaceholder = new PropertyPlaceholderElements();
		this.pPropertyOverride = new PropertyOverrideElements();
		this.pSpringConfigured = new SpringConfiguredElements();
		this.pAspect = new AspectElements();
		this.pAspectType = new AspectTypeElements();
		this.pAopAspectJAutoproxy = new AopAspectJAutoproxyElements();
		this.pAopInclude = new AopIncludeElements();
		this.pAopConfig = new AopConfigElements();
		this.pAopPointcut = new AopPointcutElements();
		this.pAopAdvisor = new AopAdvisorElements();
		this.pPointCutExpression = new PointCutExpressionElements();
		this.pAopAspect = new AopAspectElements();
		this.pDeclareParents = new DeclareParentsElements();
		this.pAopImplInterface = new AopImplInterfaceElements();
		this.pAopDefaultImplInterface = new AopDefaultImplInterfaceElements();
		this.pAopDelegateImplRef = new AopDelegateImplRefElements();
		this.pAdvise = new AdviseElements();
		this.pBeforeAdvise = new BeforeAdviseElements();
		this.pAfterAdvise = new AfterAdviseElements();
		this.pAroundAdvise = new AroundAdviseElements();
		this.pAfterReturning = new AfterReturningElements();
		this.pAfterThowing = new AfterThowingElements();
		this.pTxAdvise = new TxAdviseElements();
		this.pTxAttribute = new TxAttributeElements();
		this.pTxMethod = new TxMethodElements();
		this.pTxJtaTransactionManager = new TxJtaTransactionManagerElements();
		this.pComponent = new ComponentElements();
		this.pCreationMethod = new CreationMethodElements();
		this.pClassOrFactory = new ClassOrFactoryElements();
		this.pFactory = new FactoryElements();
		this.pClass = new ClassElements();
		this.pAopScopedProxy = new AopScopedProxyElements();
		this.pFeature = new FeatureElements();
		this.pProperty = new PropertyElements();
		this.pAttributeAtt = new AttributeAttElements();
		this.pAttributeTag = new AttributeTagElements();
		this.pAttributSimple = new AttributSimpleElements();
		this.pAttributSimpleValue = new AttributSimpleValueElements();
		this.pIdRefTag = new IdRefTagElements();
		this.pReferenceAtt = new ReferenceAttElements();
		this.pReferenceTag = new ReferenceTagElements();
		this.pReferenceComponent = new ReferenceComponentElements();
		this.pConstructorArg = new ConstructorArgElements();
		this.pConstructorArgAtt = new ConstructorArgAttElements();
		this.pAttributesCons = new AttributesConsElements();
		this.pPNamespace = new PNamespaceElements();
		this.pCNamespace = new CNamespaceElements();
		this.pLookupMethod = new LookupMethodElements();
		this.pQualifier = new QualifierElements();
		this.pMetaTag = new MetaTagElements();
		this.pQualifierAttribute = new QualifierAttributeElements();
		this.pSList = new SListElements();
		this.pSSet = new SSetElements();
		this.pProps = new PropsElements();
		this.pProp = new PropElements();
		this.pMap = new MapElements();
		this.pMapEntry = new MapEntryElements();
		this.pMapEntryKey = new MapEntryKeyElements();
		this.pMapEntryValue = new MapEntryValueElements();
		this.pMapEntryAtt = new MapEntryAttElements();
		this.pKey = new KeyElements();
		this.pMapEntryKeyAtt = new MapEntryKeyAttElements();
		this.pMapEntrykeyRef = new MapEntrykeyRefElements();
		this.pMapEntryValRef = new MapEntryValRefElements();
		this.pUtilConstant = new UtilConstantElements();
		this.pUtilPropertyPath = new UtilPropertyPathElements();
		this.pUtilProperties = new UtilPropertiesElements();
		this.pUtilList = new UtilListElements();
		this.pUtilMap = new UtilMapElements();
		this.pUtilSet = new UtilSetElements();
		this.pPropertyFileSimple = new PropertyFileSimpleElements();
		this.pPropertyFile = new PropertyFileElements();
		this.pDescription = new DescriptionElements();
		this.pDataString = new DataStringElements();
		this.pIdDashAndColon = new IdDashAndColonElements();
		this.pIdWithDash = new IdWithDashElements();
		this.pQSTRING = new QSTRINGElements();
		this.pNullTag = new NullTagElements();
		this.pValidString = new ValidStringElements();
		this.eSBoolean = new SBooleanElements();
		this.eDefaultableBoolean = new DefaultableBooleanElements();
		this.eAutoWiredType = new AutoWiredTypeElements();
		this.eEnumScopedProxy = new EnumScopedProxyElements();
		this.eEnumTypeFilter = new EnumTypeFilterElements();
		this.eMbeanRegistrationEnum = new MbeanRegistrationEnumElements();
		this.eEnumIsolation = new EnumIsolationElements();
		this.ePropagationEnum = new PropagationEnumElements();
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.ID");
		this.tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.INT");
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.STRING");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.WS");
		this.tANY_OTHER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.ANY_OTHER");
		this.tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.SpringConfigDsl.ML_COMMENT");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.spring.SpringConfigDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	//SpringProject:
	//	{SpringProject}
	//	'<?xml' 'version' '=' STRING 'encoding' '=' STRING ('standalone' '=' ('yes' | 'no'))? '?>'
	//	configurations+=Configuration;
	public SpringProjectElements getSpringProjectAccess() {
		return pSpringProject;
	}
	
	public ParserRule getSpringProjectRule() {
		return getSpringProjectAccess().getRule();
	}
	
	//AbstractKeyValue:
	//	AbstractArtefact | DataString;
	public AbstractKeyValueElements getAbstractKeyValueAccess() {
		return pAbstractKeyValue;
	}
	
	public ParserRule getAbstractKeyValueRule() {
		return getAbstractKeyValueAccess().getRule();
	}
	
	///**Abstract Class of elements present in bean */ AbstractArtefact:
	//	Component | AttributeTag | IdRefTag | ReferenceTag | Collection;
	public AbstractArtefactElements getAbstractArtefactAccess() {
		return pAbstractArtefact;
	}
	
	public ParserRule getAbstractArtefactRule() {
		return getAbstractArtefactAccess().getRule();
	}
	
	///**Abstract Class of Collection  */ Collection:
	//	sList | sSet | Map | Props;
	public CollectionElements getCollectionAccess() {
		return pCollection;
	}
	
	public ParserRule getCollectionRule() {
		return getCollectionAccess().getRule();
	}
	
	///**Abstract Class of Collection  */ /*Util:
	//	(UtilConstant|UtilPropertyPath|UtilProperties/* |UtilList|UtilMap|UtilSet)
	//;*/ /*<beans/> */ Configuration:
	//	{Configuration} ('<beans' (('default-autowire=' defaultAutowire=AutoWiredType)?
	//	& ('default-init-method=' defaultInitMethod=ValidString)? //Method
	//	& ('default-autowire-candidates=' defaultAutowireCandidates=ValidString)? //REGEX
	//	& ('default-destroy-method=' defaultDestroyMethod=ValidString)? //Method
	//	& ('default-lazy-init=' defaultLazyInit=DefaultableBoolean)?
	//	& ('default-merge=' defaultMerge=DefaultableBoolean)? //Default is false
	//	& ('profile=' profile=ValidString)?
	//	& (IdDashAndColon '=' ValidString)*)
	//	'>') description=Description? (components+=Component | alias+=Alias | imports+=Import
	//	| contexts+=Context
	//	| mvcs+=MVC
	//	| aspects+=Aspect
	//	| utilConstants+=UtilConstant | utilLists+=UtilList | utilMaps+=UtilMap
	//	| utilProperties+=UtilProperties | utilSets+=UtilSet | utilPropertiesPath+=UtilPropertyPath
	//	| txAdvices+=TxAdvise | txJtaTransactionManager+=TxJtaTransactionManager)*
	//	ConfigurationComposite+=Configuration*
	//	'</beans>';
	public ConfigurationElements getConfigurationAccess() {
		return pConfiguration;
	}
	
	public ParserRule getConfigurationRule() {
		return getConfigurationAccess().getRule();
	}
	
	//MVC:
	//	{MVC} ('<mvc' ':' 'annotation-driven' '/>');
	public MVCElements getMVCAccess() {
		return pMVC;
	}
	
	public ParserRule getMVCRule() {
		return getMVCAccess().getRule();
	}
	
	///*<alias/> */ Alias:
	//	{Alias}
	//	'<alias' 'name=' origin=[Component|ValidString] 'alias=' alias=ValidString ('/>' | '>' '</alias>');
	public AliasElements getAliasAccess() {
		return pAlias;
	}
	
	public ParserRule getAliasRule() {
		return getAliasAccess().getRule();
	}
	
	///*<import/> */ Import:
	//	{Import}
	//	'<import' 'resource=' resource=ValidString ('/>' | '>' '</import>');
	public ImportElements getImportAccess() {
		return pImport;
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}
	
	//Context:
	//	'<context:' ContextType;
	public ContextElements getContextAccess() {
		return pContext;
	}
	
	public ParserRule getContextRule() {
		return getContextAccess().getRule();
	}
	
	//ContextType Context:
	//	AnnotationConfig | ComponentScan | LoadTimeWeaver | MbeanExport | MbeanServer | PropertyHolder | SpringConfigured;
	public ContextTypeElements getContextTypeAccess() {
		return pContextType;
	}
	
	public ParserRule getContextTypeRule() {
		return getContextTypeAccess().getRule();
	}
	
	///** looks for annotations on beans in the same application context in which it is defined */ AnnotationConfig:
	//	{AnnotationConfig} ('annotation-config' ('/>' | '>' '</context:annotation-config>'));
	public AnnotationConfigElements getAnnotationConfigAccess() {
		return pAnnotationConfig;
	}
	
	public ParserRule getAnnotationConfigRule() {
		return getAnnotationConfigAccess().getRule();
	}
	
	///** Spring can automatically detect stereotyped classes and register corresponding BeanDefinitions with the ApplicationContext 
	// * (implicitly enables the functionality of <context:annotation-config>)
	// *
	// * base-package - The comma/semicolon/space/tab/linefeed-separated list of packages to scan for annotated components.
	// * annotation-config - Indicates whether the implicit annotation post-processors should be enabled. Default is "true".
	// * name-generator - The fully-qualified class name of the BeanNameGenerator to be used for naming detected components.
	// * resource-pattern - Controls the class files eligible for component detection. "** /*.class"  
	// * scope-resolver - The fully-qualified class name of the ScopeMetadataResolver to 
	// * be used for resolving the scope of detected components.
	// * scoped-proxy  -Indicates whether proxies should be generated for detected 
	// components
	// * use-default-filters - Indicates whether automatic detection of classes annotated with @Component, @Repository, @Service, or 
	// @Controller should be enabled. Default is "true".
	// */ ComponentScan:
	//	{ComponentScan} 'component-scan' ('base-package=' basePackage=ValidString & ('annotation-config='
	//	annotationConfig=sBoolean)?
	//	& ('name-generator=' nameGeneratorBean=[Component|ValidString])?
	//	& ('resource-pattern=' resourcePattern=ValidString)?
	//	& ('scope-resolver=' scopeResolver=[Component|ValidString])?
	//	& ('scoped-proxy=' scopedProxy=EnumScopedProxy)?
	//	& ('use-default-filters=' useDefaultFilters=sBoolean)?) ('/>' | '>' includeFilters+=IncludeFilter*
	//	excludeFilters+=ExcludeFilter* '</context:component-scan>');
	public ComponentScanElements getComponentScanAccess() {
		return pComponentScan;
	}
	
	public ParserRule getComponentScanRule() {
		return getComponentScanAccess().getRule();
	}
	
	//IncludeFilter:
	//	'<context:include-filter' ('type=' type=EnumTypeFilter & 'expression=' expression=ValidString) ('/>' | '>'
	//	'</context:include-filter>');
	public IncludeFilterElements getIncludeFilterAccess() {
		return pIncludeFilter;
	}
	
	public ParserRule getIncludeFilterRule() {
		return getIncludeFilterAccess().getRule();
	}
	
	//ExcludeFilter:
	//	'<context:exclude-filter' ('type=' type=EnumTypeFilter & 'expression=' expression=ValidString) ('/>' | '>'
	//	'</context:exclude-filter>');
	public ExcludeFilterElements getExcludeFilterAccess() {
		return pExcludeFilter;
	}
	
	public ParserRule getExcludeFilterRule() {
		return getExcludeFilterAccess().getRule();
	}
	
	///** load-time weaving for Aspect class */ LoadTimeWeaver:
	//	{LoadTimeWeaver} 'load-time-weaver' (('aspectj-weaving=' aspectjWeaving=ValidString)? & ('weaver-class='
	//	weaverClass=ValidString)?) ('/>' | '>' '</context:load-time-weaver>');
	public LoadTimeWeaverElements getLoadTimeWeaverAccess() {
		return pLoadTimeWeaver;
	}
	
	public ParserRule getLoadTimeWeaverRule() {
		return getLoadTimeWeaverAccess().getRule();
	}
	
	//MbeanExport:
	//	{MbeanExport} 'mbean-export' (('default-domain=' defaultDomain=ValidString)? & ('registration='
	//	registration=MbeanRegistrationEnum)? & ('server=' server=[Component|ValidString])?) ('/>' | '>'
	//	'</context:mbean-export>');
	public MbeanExportElements getMbeanExportAccess() {
		return pMbeanExport;
	}
	
	public ParserRule getMbeanExportRule() {
		return getMbeanExportAccess().getRule();
	}
	
	//MbeanServer:
	//	{MbeanServer} 'mbean-server' (('agent-id=' agentId=ValidString)? & ('id=' name=ValidString)?) ('/>' | '>'
	//	'</context:mbean-server>');
	public MbeanServerElements getMbeanServerAccess() {
		return pMbeanServer;
	}
	
	public ParserRule getMbeanServerRule() {
		return getMbeanServerAccess().getRule();
	}
	
	//PropertyHolder:
	//	PropertyPlaceholder | PropertyOverride;
	public PropertyHolderElements getPropertyHolderAccess() {
		return pPropertyHolder;
	}
	
	public ParserRule getPropertyHolderRule() {
		return getPropertyHolderAccess().getRule();
	}
	
	///** Placeholder for properties files */ PropertyPlaceholder:
	//	'property-placeholder' (propertyfile=PropertyFile?
	//	& ('ignore-resource-not-found=' ignoreResourceNotFound=sBoolean)? & ('ignore-unresolvable='
	//	ignoreUnresolvable=sBoolean)? & ('local-override=' localOverride=sBoolean)?
	//	& ('order=' order=ValidString)? & ('properties-ref=' propertiesRef=[Component|ValidString])?
	//	& ('system-properties-mode=' systemPropertiesMode=ValidString)? //Depreciated since 3.1
	//) ('/>' | '>' '</context:property-placeholder>');
	public PropertyPlaceholderElements getPropertyPlaceholderAccess() {
		return pPropertyPlaceholder;
	}
	
	public ParserRule getPropertyPlaceholderRule() {
		return getPropertyPlaceholderAccess().getRule();
	}
	
	///** Activates pushing of override values into bean properties */ PropertyOverride:
	//	'property-override' (propertyfile=PropertyFile
	//	& ('ignore-resource-not-found=' ignoreResourceNotFound=sBoolean)? & ('ignore-unresolvable='
	//	ignoreUnresolvable=sBoolean)? & ('local-override=' localOverride=sBoolean)?
	//	& ('order=' order=ValidString)? & ('properties-ref=' propertiesRef=[Component|ValidString])?) ('/>' | '>'
	//	'</context:property-override>');
	public PropertyOverrideElements getPropertyOverrideAccess() {
		return pPropertyOverride;
	}
	
	public ParserRule getPropertyOverrideRule() {
		return getPropertyOverrideAccess().getRule();
	}
	
	///*Signals the current application context to apply dependency injection to non-managed classes that are 
	// instantiated outside of the Spring bean factory (typically classes annotated with the @Configurable annotation). */ SpringConfigured:
	//	{SpringConfigured} 'spring-configured' ('/>' | '>' '</context:spring-configured>');
	public SpringConfiguredElements getSpringConfiguredAccess() {
		return pSpringConfigured;
	}
	
	public ParserRule getSpringConfiguredRule() {
		return getSpringConfiguredAccess().getRule();
	}
	
	///** Aspect main tags */ Aspect:
	//	'<aop:' AspectType;
	public AspectElements getAspectAccess() {
		return pAspect;
	}
	
	public ParserRule getAspectRule() {
		return getAspectAccess().getRule();
	}
	
	//AspectType Aspect:
	//	AopAspectJAutoproxy | AopConfig;
	public AspectTypeElements getAspectTypeAccess() {
		return pAspectType;
	}
	
	public ParserRule getAspectTypeRule() {
		return getAspectTypeAccess().getRule();
	}
	
	///** To enable @AspectJ support with XML based configuration */ AopAspectJAutoproxy:
	//	{AopAspectJAutoproxy} 'aspectj-autoproxy' (('expose-proxy=' exposeProxy=sBoolean)? & ('proxy-target-class='
	//	proxyTrajetClass=sBoolean)?) ('/>' | '>' aopincludes+=AopInclude* '</aop:aspectj-autoproxy>');
	public AopAspectJAutoproxyElements getAopAspectJAutoproxyAccess() {
		return pAopAspectJAutoproxy;
	}
	
	public ParserRule getAopAspectJAutoproxyRule() {
		return getAopAspectJAutoproxyAccess().getRule();
	}
	
	///** Include @AspectJ aspect  use with Spring AOP*/ AopInclude:
	//	'include' 'name=' aopInclude=[Component|ValidString] ('/>' | '>' '</aop:include>');
	public AopIncludeElements getAopIncludeAccess() {
		return pAopInclude;
	}
	
	public ParserRule getAopIncludeRule() {
		return getAopIncludeAccess().getRule();
	}
	
	//AopConfig:
	//	{AopConfig} ('config' (('expose-proxy=' exposeProxy=sBoolean)? & ('proxy-target-class=' proxyTrajetClass=sBoolean)?)
	//	('/>' | '>' (aopPointcuts+=AopPointcut* aopAdvisors+=AopAdvisor* aspects+=AopAspect*) '</aop:config>'));
	public AopConfigElements getAopConfigAccess() {
		return pAopConfig;
	}
	
	public ParserRule getAopConfigRule() {
		return getAopConfigAccess().getRule();
	}
	
	//AopPointcut:
	//	'<aop:pointcut' ('expression=' expression=ValidString & 'id=' name=ValidString) ('/>' | '>' '</aop:pointcut>');
	public AopPointcutElements getAopPointcutAccess() {
		return pAopPointcut;
	}
	
	public ParserRule getAopPointcutRule() {
		return getAopPointcutAccess().getRule();
	}
	
	///*  (pointcut|pointcut-ref)*/ AopAdvisor:
	//	'<aop:advisor' ('advice-ref=' adviceRef=[TxAdvise|ValidString] & ('id=' name=ValidString)? & ('order='
	//	order=ValidString)? & (pointcut=PointCutExpression | 'pointcut-ref=' pointcutRef=[AopPointcut|ValidString])) ('/>' |
	//	'>' '</aop:advisor>');
	public AopAdvisorElements getAopAdvisorAccess() {
		return pAopAdvisor;
	}
	
	public ParserRule getAopAdvisorRule() {
		return getAopAdvisorAccess().getRule();
	}
	
	//PointCutExpression AopPointcut:
	//	'pointcut=' expression=ValidString;
	public PointCutExpressionElements getPointCutExpressionAccess() {
		return pPointCutExpression;
	}
	
	public ParserRule getPointCutExpressionRule() {
		return getPointCutExpressionAccess().getRule();
	}
	
	///**(pointcut | declare-parents | before | after | after-returning | after-throwing | around)* */ AopAspect:
	//	'<aop:aspect' ('id=' name=ValidString & 'order=' order=ValidString & 'ref=' backingBeanRef=[Component|ValidString])
	//	'>' (aopPointcuts+=AopPointcut | declaredParents+=DeclareParents | advises+=Advise)* '</aop:aspect>';
	public AopAspectElements getAopAspectAccess() {
		return pAopAspect;
	}
	
	public ParserRule getAopAspectRule() {
		return getAopAspectAccess().getRule();
	}
	
	///* Introductions
	// * Allows this aspect to introduce additional interfaces that the 
	// advised object will transparently implement. */ DeclareParents:
	//	'<aop:declare-parents' ('types-matching=' typeMatching=ValidString & implementInterface=AopImplInterface &
	//	(defaultImplInterface=AopDefaultImplInterface | delegateImplRef=AopDelegateImplRef)) ('/>' | '>'
	//	'</aop:declare-parents>');
	public DeclareParentsElements getDeclareParentsAccess() {
		return pDeclareParents;
	}
	
	public ParserRule getDeclareParentsRule() {
		return getDeclareParentsAccess().getRule();
	}
	
	///**The fully qualified name of the interface that will be introduced. */ AopImplInterface Interface:
	//	'implement-interface=' name=ValidString;
	public AopImplInterfaceElements getAopImplInterfaceAccess() {
		return pAopImplInterface;
	}
	
	public ParserRule getAopImplInterfaceRule() {
		return getAopImplInterfaceAccess().getRule();
	}
	
	///*The fully qualified name of the interface that will be introduced. */ AopDefaultImplInterface:
	//	'default-impl=' name=ValidString;
	public AopDefaultImplInterfaceElements getAopDefaultImplInterfaceAccess() {
		return pAopDefaultImplInterface;
	}
	
	public ParserRule getAopDefaultImplInterfaceRule() {
		return getAopDefaultImplInterfaceAccess().getRule();
	}
	
	///*A reference to the bean that will serve as the default implementation of the introduced 
	// interface. */ AopDelegateImplRef:
	//	'delegate-ref=' ref=[Component|ValidString];
	public AopDelegateImplRefElements getAopDelegateImplRefAccess() {
		return pAopDelegateImplRef;
	}
	
	public ParserRule getAopDelegateImplRefRule() {
		return getAopDelegateImplRefAccess().getRule();
	}
	
	//Advise:
	//	BeforeAdvise | AfterAdvise | AroundAdvise | AfterReturning | AfterThowing;
	public AdviseElements getAdviseAccess() {
		return pAdvise;
	}
	
	public ParserRule getAdviseRule() {
		return getAdviseAccess().getRule();
	}
	
	//BeforeAdvise:
	//	'<aop:before' (('pointcut-ref=' pointcutRef=[AopPointcut|ValidString] | 'pointcut=' PointcutExpression=ValidString) &
	//	'method=' method=ValidString) ('/>' | '>' '</aop:before>');
	public BeforeAdviseElements getBeforeAdviseAccess() {
		return pBeforeAdvise;
	}
	
	public ParserRule getBeforeAdviseRule() {
		return getBeforeAdviseAccess().getRule();
	}
	
	//AfterAdvise:
	//	'<aop:after' (('pointcut-ref=' pointcutRef=[AopPointcut|ValidString] | 'pointcut=' PointcutExpression=ValidString) &
	//	'method=' method=ValidString) ('/>' | '>' '</aop:after>');
	public AfterAdviseElements getAfterAdviseAccess() {
		return pAfterAdvise;
	}
	
	public ParserRule getAfterAdviseRule() {
		return getAfterAdviseAccess().getRule();
	}
	
	//AroundAdvise:
	//	'<aop:around' (('pointcut-ref=' pointcutRef=[AopPointcut|ValidString] | 'pointcut=' PointcutExpression=ValidString) &
	//	'method=' method=ValidString) ('/>' | '>' '</aop:around>');
	public AroundAdviseElements getAroundAdviseAccess() {
		return pAroundAdvise;
	}
	
	public ParserRule getAroundAdviseRule() {
		return getAroundAdviseAccess().getRule();
	}
	
	//AfterReturning:
	//	'<aop:after-returning' (('pointcut-ref=' pointcutRef=[AopPointcut|ValidString] | 'pointcut='
	//	PointcutExpression=ValidString) & 'method=' method=ValidString & 'returning=' returningValue=ValidString) ('/>' | '>'
	//	'</aop:after-returning>');
	public AfterReturningElements getAfterReturningAccess() {
		return pAfterReturning;
	}
	
	public ParserRule getAfterReturningRule() {
		return getAfterReturningAccess().getRule();
	}
	
	//AfterThowing:
	//	'<aop:after-throwing' (('pointcut-ref=' pointcutRef=[AopPointcut|ValidString] | 'pointcut='
	//	PointcutExpression=ValidString) & 'method=' method=ValidString & 'throwing=' throwingValue=ValidString) ('/>' | '>'
	//	'</aop:after-throwing>');
	public AfterThowingElements getAfterThowingAccess() {
		return pAfterThowing;
	}
	
	public ParserRule getAfterThowingRule() {
		return getAfterThowingAccess().getRule();
	}
	
	//TxAdvise:
	//	'<tx:advice' ('id=' name=ValidString & ('transaction-manager=' transactionManager=ValidString)? //Default value="transactionManager"
	//)
	//	'>'
	//	txAttribute=TxAttribute?
	//	'</tx:advice>';
	public TxAdviseElements getTxAdviseAccess() {
		return pTxAdvise;
	}
	
	public ParserRule getTxAdviseRule() {
		return getTxAdviseAccess().getRule();
	}
	
	//TxAttribute:
	//	{TxAttribute}
	//	'<tx:attributes' '>'
	//	txMethods+=TxMethod+
	//	'</tx:attributes>';
	public TxAttributeElements getTxAttributeAccess() {
		return pTxAttribute;
	}
	
	public ParserRule getTxAttributeRule() {
		return getTxAttributeAccess().getRule();
	}
	
	//TxMethod:
	//	'<tx:method' ('name=' name=ValidString & ('isolation=' isolation=EnumIsolation)?
	//	& ('no-rollback-for=' noRollBackFor=ValidString)? //ref Exeption
	//	& ('propagation=' propagation=EnumIsolation)?
	//	& ('read-only=' readOnly=sBoolean)?
	//	& ('rollback-for=' rollbackFor=ValidString)? //ref Exeption
	//	& ('timeout=' timeOut=ValidString)? //int default value:-1
	//);
	public TxMethodElements getTxMethodAccess() {
		return pTxMethod;
	}
	
	public ParserRule getTxMethodRule() {
		return getTxMethodAccess().getRule();
	}
	
	//TxJtaTransactionManager:
	//	{TxJtaTransactionManager}
	//	'<tx:jta-transaction-manager' ('/>' | '>' '</tx:jta-transaction-manager>');
	public TxJtaTransactionManagerElements getTxJtaTransactionManagerAccess() {
		return pTxJtaTransactionManager;
	}
	
	public ParserRule getTxJtaTransactionManagerRule() {
		return getTxJtaTransactionManagerAccess().getRule();
	}
	
	///*<bean/> */ Component:
	//	{Component}
	//	'<bean' (('id=' name=ValidString)? & ('name=' names+=ValidString)?
	//	& class=CreationMethod
	//	& features+=PNamespace*
	//	& features+=CNamespace*
	//	& ('abstract=' abstract=sBoolean)? //bool
	//	& ('autowire-candidate=' autowireCandidate=DefaultableBoolean)? //enum
	//	& ('autowire=' autowire=DefaultableBoolean)? //enum
	//	& ('depends-on=' dependsOn=[Component|ValidString])? //ref a bean
	//	& ('destroy-method=' detroyMethod=ValidString)? //ref a method
	//	& ('init-method=' initMethod=ValidString)? //ref a method
	//	& ('lazy-init=' lazyInit=DefaultableBoolean)? //enum
	//	& ('parent=' parent=[Component|ValidString])? //ref a bean
	//	& ('primary=' primary=sBoolean)? //bool
	//	& ('scope=' scope=ValidString)?) ('/>' | '>'
	//	description=Description? (features+=Feature | lookupMethods+=LookupMethod | qualifiers+=Qualifier | meta+=MetaTag
	//	| aopScopedProxy=AopScopedProxy | utilPropertiesPath+=UtilPropertyPath)*
	//	'</bean>');
	public ComponentElements getComponentAccess() {
		return pComponent;
	}
	
	public ParserRule getComponentRule() {
		return getComponentAccess().getRule();
	}
	
	//CreationMethod:
	//	('factory-method=' factoryMethod=ValidString)? & class=(Class | Factory);
	public CreationMethodElements getCreationMethodAccess() {
		return pCreationMethod;
	}
	
	public ParserRule getCreationMethodRule() {
		return getCreationMethodAccess().getRule();
	}
	
	///*If the bean is created by a factory */ ClassOrFactory:
	//	Class | Factory;
	public ClassOrFactoryElements getClassOrFactoryAccess() {
		return pClassOrFactory;
	}
	
	public ParserRule getClassOrFactoryRule() {
		return getClassOrFactoryAccess().getRule();
	}
	
	//Factory:
	//	'factory-bean=' factoryBean=[Component|ValidString];
	public FactoryElements getFactoryAccess() {
		return pFactory;
	}
	
	public ParserRule getFactoryRule() {
		return getFactoryAccess().getRule();
	}
	
	//Class:
	//	'class=' /*(path=Path '.' )? classname=ID */ classname=ValidString;
	public ClassElements getClassAccess() {
		return pClass;
	}
	
	public ParserRule getClassRule() {
		return getClassAccess().getRule();
	}
	
	///*Path of the class */ /*Path returns ecore::EString:
	//(ID ('.'ID)*)
	//;
	//*/ AopScopedProxy:
	//	{AopScopedProxy} '<aop:scoped-proxy' ('proxy-target-class=' proxyTargetClass=ValidString)? ('/>' | '>'
	//	'</aop:scoped-proxy>');
	public AopScopedProxyElements getAopScopedProxyAccess() {
		return pAopScopedProxy;
	}
	
	public ParserRule getAopScopedProxyRule() {
		return getAopScopedProxyAccess().getRule();
	}
	
	//Feature:
	//	Property | ConstructorArg;
	public FeatureElements getFeatureAccess() {
		return pFeature;
	}
	
	public ParserRule getFeatureRule() {
		return getFeatureAccess().getRule();
	}
	
	///*<property/> */ Property Feature:
	//	'<property' (('name=' name=ValidString & artefact=(ReferenceAtt | AttributeAtt)) ('/>' | '>' description=Description?
	//	'</property>') | ('name=' name=ValidString) '>' description=Description? (artefact=AbstractArtefact | NullTag)
	//	'</property>');
	public PropertyElements getPropertyAccess() {
		return pProperty;
	}
	
	public ParserRule getPropertyRule() {
		return getPropertyAccess().getRule();
	}
	
	///** If Attribute is a attribute of <property/>/<Constructor-arg/> */ AttributeAtt Attribute:
	//	{Attribute} ('value=' value=ValidString);
	public AttributeAttElements getAttributeAttAccess() {
		return pAttributeAtt;
	}
	
	public ParserRule getAttributeAttRule() {
		return getAttributeAttAccess().getRule();
	}
	
	///**Attribute create by a tag */ AttributeTag Attribute:
	//	{Attribute}
	//	'<value' ('type=' type=ValidString)? ('>' value=QSTRING '</value>' | '/>') | UtilConstant;
	public AttributeTagElements getAttributeTagAccess() {
		return pAttributeTag;
	}
	
	public ParserRule getAttributeTagRule() {
		return getAttributeTagAccess().getRule();
	}
	
	//AttributSimple Attribute:
	//	value=ValidString;
	public AttributSimpleElements getAttributSimpleAccess() {
		return pAttributSimple;
	}
	
	public ParserRule getAttributSimpleRule() {
		return getAttributSimpleAccess().getRule();
	}
	
	//AttributSimpleValue Attribute:
	//	'value=' value=ValidString;
	public AttributSimpleValueElements getAttributSimpleValueAccess() {
		return pAttributSimpleValue;
	}
	
	public ParserRule getAttributSimpleValueRule() {
		return getAttributSimpleValueAccess().getRule();
	}
	
	///** <Idref/> */ IdRefTag Attribute:
	//	{Attribute}
	//	'<idref' 'bean=' value=ValidString ('/>' | '>' '</idref>');
	public IdRefTagElements getIdRefTagAccess() {
		return pIdRefTag;
	}
	
	public ParserRule getIdRefTagRule() {
		return getIdRefTagAccess().getRule();
	}
	
	///** If Reference is a attribute of <property/>/<Constructor-arg/> */ ReferenceAtt Reference:
	//	{Reference}
	//	'ref=' ref=[Component|ValidString];
	public ReferenceAttElements getReferenceAttAccess() {
		return pReferenceAtt;
	}
	
	public ParserRule getReferenceAttRule() {
		return getReferenceAttAccess().getRule();
	}
	
	///**Reference create by a tag */ ReferenceTag Reference:
	//	{Reference}
	//	'<ref' 'bean=' ref=[AbstractArtefact|ValidString] ('/>' | '>' '</ref>');
	public ReferenceTagElements getReferenceTagAccess() {
		return pReferenceTag;
	}
	
	public ParserRule getReferenceTagRule() {
		return getReferenceTagAccess().getRule();
	}
	
	//ReferenceComponent Reference:
	//	ref=[Component|ValidString];
	public ReferenceComponentElements getReferenceComponentAccess() {
		return pReferenceComponent;
	}
	
	public ParserRule getReferenceComponentRule() {
		return getReferenceComponentAccess().getRule();
	}
	
	///** <constructor-arg/>*/ ConstructorArg Feature:
	//	'<constructor-arg' (ConstructorArgAtt ('>' description=Description? '</constructor-arg>' | '/>') | {Feature}
	//	(('index=' index=ValidString)? & ("name=" name=ValidString)? & ("type=" type=ValidString)?) '>'
	//	description=Description? (artefact=AbstractArtefact | NullTag)
	//	'</constructor-arg>');
	public ConstructorArgElements getConstructorArgAccess() {
		return pConstructorArg;
	}
	
	public ParserRule getConstructorArgRule() {
		return getConstructorArgAccess().getRule();
	}
	
	///*If the parameter is a attribute */ ConstructorArgAtt Feature:
	//	('index=' index=ValidString)?
	//	& ("name=" name=ValidString)?
	//	& artefact=AttributesCons;
	public ConstructorArgAttElements getConstructorArgAttAccess() {
		return pConstructorArgAtt;
	}
	
	public ParserRule getConstructorArgAttRule() {
		return getConstructorArgAttAccess().getRule();
	}
	
	//AttributesCons AbstractArtefact:
	//	{Attribute} ('value=' value=ValidString & ('type=' type=ValidString)?) | {Reference} ('ref='
	//	ref=[Component|ValidString]);
	public AttributesConsElements getAttributesConsAccess() {
		return pAttributesCons;
	}
	
	public ParserRule getAttributesConsRule() {
		return getAttributesConsAccess().getRule();
	}
	
	///*Attribute created in <constructor-arg/> */ /*AttributeAttCons returns Attribute:
	//	{Attribute}
	//	( ( ('value='STRING)& ('type='type=STRING)?)) 
	//;*/ /*Attribute created in <constructor-arg/> */ /*ReferenceAttCons returns Reference:
	//	{Reference}
	//	( ( ('ref='ref=[Component|STRING]) & ('type='STRING)?)) 
	//;*/ PNamespace Feature:
	//	'p:' name=ID ('-ref' '=' artefact=ReferenceComponent | '=' artefact=AttributSimple);
	public PNamespaceElements getPNamespaceAccess() {
		return pPNamespace;
	}
	
	public ParserRule getPNamespaceRule() {
		return getPNamespaceAccess().getRule();
	}
	
	//CNamespace Feature:
	//	'c:' name=ID ('-ref' '=' artefact=ReferenceComponent | '=' artefact=AttributSimple);
	public CNamespaceElements getCNamespaceAccess() {
		return pCNamespace;
	}
	
	public ParserRule getCNamespaceRule() {
		return getCNamespaceAccess().getRule();
	}
	
	//LookupMethod:
	//	'<lookup-method' ('name=' name=ValidString & 'bean=' ref=[Component|ValidString]) ('/>' | '>' '</lookup-method>');
	public LookupMethodElements getLookupMethodAccess() {
		return pLookupMethod;
	}
	
	public ParserRule getLookupMethodRule() {
		return getLookupMethodAccess().getRule();
	}
	
	//Qualifier:
	//	'<qualifier' ('type=' type=ValidString & ('value=' value=ValidString)?) ('/>' | '>'
	//	qualifierAttributes+=QualifierAttribute* '</qualifier>');
	public QualifierElements getQualifierAccess() {
		return pQualifier;
	}
	
	public ParserRule getQualifierRule() {
		return getQualifierAccess().getRule();
	}
	
	//MetaTag Meta:
	//	'<meta' ('key=' key=ValidString & 'value=' value=ValidString) ('/>' | '>' '</meta>');
	public MetaTagElements getMetaTagAccess() {
		return pMetaTag;
	}
	
	public ParserRule getMetaTagRule() {
		return getMetaTagAccess().getRule();
	}
	
	//QualifierAttribute:
	//	'<attribute' ('key=' key=ValidString & 'value=' value=ValidString) ('/>' | '>' '</attribute>');
	public QualifierAttributeElements getQualifierAttributeAccess() {
		return pQualifierAttribute;
	}
	
	public ParserRule getQualifierAttributeRule() {
		return getQualifierAttributeAccess().getRule();
	}
	
	///*<list/> */ sList:
	//	{sList} ('<list' (('value-type=' valueType=ValidString)? & ('merge=' merge=DefaultableBoolean)?) '>'
	//	description=Description? (artefacts+=AbstractArtefact | NullTag)*
	//	'</list>') | UtilList;
	public SListElements getSListAccess() {
		return pSList;
	}
	
	public ParserRule getSListRule() {
		return getSListAccess().getRule();
	}
	
	///*<set/> */ sSet:
	//	{sSet} ('<set' (('value-type=' valueType=ValidString)? & ('merge=' merge=DefaultableBoolean)?) '>'
	//	description=Description? (artefacts+=AbstractArtefact | NullTag)*
	//	'</set>') | UtilSet;
	public SSetElements getSSetAccess() {
		return pSSet;
	}
	
	public ParserRule getSSetRule() {
		return getSSetAccess().getRule();
	}
	
	///*<props/> */ Props:
	//	{Props} ('<props' (('value-type=' valueType=ValidString)? & ('merge=' merge=DefaultableBoolean)?) '>'
	//	description=Description?
	//	props+=Prop*
	//	'</props>') | UtilProperties;
	public PropsElements getPropsAccess() {
		return pProps;
	}
	
	public ParserRule getPropsRule() {
		return getPropsAccess().getRule();
	}
	
	///*<prop/> */ Prop:
	//	'<prop' 'key=' key=ValidString '>' value=QSTRING '</prop>';
	public PropElements getPropAccess() {
		return pProp;
	}
	
	public ParserRule getPropRule() {
		return getPropAccess().getRule();
	}
	
	///*<map/> */ Map:
	//	{Map} ('<map' (('key-type=' keyType=ValidString)? & ('merge=' merge=DefaultableBoolean)? & ('value-type='
	//	valueType=ValidString)?) '>'
	//	description=Description?
	//	entries+=MapEntry*
	//	'</map>') | UtilMap;
	public MapElements getMapAccess() {
		return pMap;
	}
	
	public ParserRule getMapRule() {
		return getMapAccess().getRule();
	}
	
	///*Entries for map  */ MapEntry:
	//	'<entry' ((MapEntryKey | MapEntryValue | MapEntryAtt) |
	//	/*('value-type='valueType=ValidString)?*/ '>'
	//	key=Key (value=AbstractArtefact | NullTag) description=Description?
	//	'</entry>');
	public MapEntryElements getMapEntryAccess() {
		return pMapEntry;
	}
	
	public ParserRule getMapEntryRule() {
		return getMapEntryAccess().getRule();
	}
	
	///*If the key is a attribute */ MapEntryKey MapEntry:
	//	(('value-type=' valueType=ValidString)? & key=MapEntryKeyAtt) '>'
	//	description=Description?
	//	value=AbstractArtefact
	//	'</entry>';
	public MapEntryKeyElements getMapEntryKeyAccess() {
		return pMapEntryKey;
	}
	
	public ParserRule getMapEntryKeyRule() {
		return getMapEntryKeyAccess().getRule();
	}
	
	///*If the value is a attribute */ MapEntryValue MapEntry:
	//	(('value-type=' valueType=ValidString)? & (value=AttributSimpleValue | value=MapEntryValRef)) '>'
	//	key=Key
	//	description=Description?
	//	'</entry>';
	public MapEntryValueElements getMapEntryValueAccess() {
		return pMapEntryValue;
	}
	
	public ParserRule getMapEntryValueRule() {
		return getMapEntryValueAccess().getRule();
	}
	
	///*If the key and the value are attributes */ MapEntryAtt MapEntry:
	//	(('value-type=' valueType=ValidString)? key=MapEntryKeyAtt & (value=AttributSimpleValue | value=MapEntryValRef))
	//	('/>' | '>' description=Description? '</entry>');
	public MapEntryAttElements getMapEntryAttAccess() {
		return pMapEntryAtt;
	}
	
	public ParserRule getMapEntryAttRule() {
		return getMapEntryAttAccess().getRule();
	}
	
	///*<key/> */ Key:
	//	{Key} '<key' '>' description=Description? (key=AbstractArtefact | NullTag) '</key>';
	public KeyElements getKeyAccess() {
		return pKey;
	}
	
	public ParserRule getKeyRule() {
		return getKeyAccess().getRule();
	}
	
	///*if key is a attribute */ MapEntryKeyAtt Key:
	//	{Key} ('key=' key=DataString | key=MapEntrykeyRef);
	public MapEntryKeyAttElements getMapEntryKeyAttAccess() {
		return pMapEntryKeyAtt;
	}
	
	public ParserRule getMapEntryKeyAttRule() {
		return getMapEntryKeyAttAccess().getRule();
	}
	
	//MapEntrykeyRef Reference:
	//	'key-ref=' ref=[Component|ValidString];
	public MapEntrykeyRefElements getMapEntrykeyRefAccess() {
		return pMapEntrykeyRef;
	}
	
	public ParserRule getMapEntrykeyRefRule() {
		return getMapEntrykeyRefAccess().getRule();
	}
	
	//MapEntryValRef Reference:
	//	'value-ref=' ref=[Component|ValidString];
	public MapEntryValRefElements getMapEntryValRefAccess() {
		return pMapEntryValRef;
	}
	
	public ParserRule getMapEntryValRefRule() {
		return getMapEntryValRefAccess().getRule();
	}
	
	//UtilConstant:
	//	{UtilConstant}
	//	'<util:constant' ('static-field=' StaticField=STRING & ('id=' name=ValidString)?) ('/>' | '>' '</util:constant>');
	public UtilConstantElements getUtilConstantAccess() {
		return pUtilConstant;
	}
	
	public ParserRule getUtilConstantRule() {
		return getUtilConstantAccess().getRule();
	}
	
	//UtilPropertyPath:
	//	'<util:property-path' ('id=' name=ValidString & 'path=' path=ValidString) ('/>' | '>' '</util:constant>');
	public UtilPropertyPathElements getUtilPropertyPathAccess() {
		return pUtilPropertyPath;
	}
	
	public ParserRule getUtilPropertyPathRule() {
		return getUtilPropertyPathAccess().getRule();
	}
	
	//UtilProperties:
	//	{UtilProperties}
	//	'<util:properties' (propertyfile=PropertyFileSimple?
	//	& ('id=' name=ValidString)?
	//	& ('ignore-resource-not-found=' ignoreResourceNotFound=sBoolean)?
	//	& ('local-override=' localOverride=sBoolean)?
	//	& ('scope=' scope=ValidString)?
	//	& ('value-type=' valueType=ValidString)? ('/>' | '>' props+=Prop* '</util:properties>'));
	public UtilPropertiesElements getUtilPropertiesAccess() {
		return pUtilProperties;
	}
	
	public ParserRule getUtilPropertiesRule() {
		return getUtilPropertiesAccess().getRule();
	}
	
	//UtilList:
	//	{UtilList}
	//	'<util:list' (('id=' name=ValidString)?
	//	& ('list-class=' listClass=ValidString)?
	//	& ('scope=' scope=ValidString)?
	//	& ('value-type=' valueType=ValidString)?) ('/>' | '>' artefacts+=AbstractArtefact* '</util:properties>');
	public UtilListElements getUtilListAccess() {
		return pUtilList;
	}
	
	public ParserRule getUtilListRule() {
		return getUtilListAccess().getRule();
	}
	
	//UtilMap:
	//	{UtilMap}
	//	'<util:map' (('id=' name=ValidString)?
	//	& ('key-type=' keyType=ValidString)?
	//	& ('map-class=' mapClass=ValidString)?
	//	& ('scope=' scope=ValidString)?
	//	& ('value-type=' valueType=ValidString)?) ('/>' | '>' entries+=MapEntry* '</util:map>');
	public UtilMapElements getUtilMapAccess() {
		return pUtilMap;
	}
	
	public ParserRule getUtilMapRule() {
		return getUtilMapAccess().getRule();
	}
	
	//UtilSet:
	//	{UtilSet}
	//	'<util:set' (('id=' name=ValidString)?
	//	& ('set-class=' setClass=ValidString)?
	//	& ('scope=' scope=ValidString)?
	//	& ('value-type=' valueType=ValidString)?) ('/>' | '>' artefacts+=AbstractArtefact* '</util:set>');
	public UtilSetElements getUtilSetAccess() {
		return pUtilSet;
	}
	
	public ParserRule getUtilSetRule() {
		return getUtilSetAccess().getRule();
	}
	
	//PropertyFileSimple PropertyFile:
	//	'location=' location=ValidString;
	public PropertyFileSimpleElements getPropertyFileSimpleAccess() {
		return pPropertyFileSimple;
	}
	
	public ParserRule getPropertyFileSimpleRule() {
		return getPropertyFileSimpleAccess().getRule();
	}
	
	//PropertyFile:
	//	'location=' location=ValidString & ('file-encoding=' fileEncoding=ValidString)?;
	public PropertyFileElements getPropertyFileAccess() {
		return pPropertyFile;
	}
	
	public ParserRule getPropertyFileRule() {
		return getPropertyFileAccess().getRule();
	}
	
	//Description:
	//	'<description>' QSTRING '</description>';
	public DescriptionElements getDescriptionAccess() {
		return pDescription;
	}
	
	public ParserRule getDescriptionRule() {
		return getDescriptionAccess().getRule();
	}
	
	//DataString:
	//	s=ValidString;
	public DataStringElements getDataStringAccess() {
		return pDataString;
	}
	
	public ParserRule getDataStringRule() {
		return getDataStringAccess().getRule();
	}
	
	//IdDashAndColon:
	//	ID ('-' ID | (':' ID)*);
	public IdDashAndColonElements getIdDashAndColonAccess() {
		return pIdDashAndColon;
	}
	
	public ParserRule getIdDashAndColonRule() {
		return getIdDashAndColonAccess().getRule();
	}
	
	//IdWithDash:
	//	ID ('-' ID)?;
	public IdWithDashElements getIdWithDashAccess() {
		return pIdWithDash;
	}
	
	public ParserRule getIdWithDashRule() {
		return getIdWithDashAccess().getRule();
	}
	
	//QSTRING hidden(ML_COMMENT):
	//	(ID | INT | WS | ValidString
	//	| ',' | '.' | ';' | ':' | '-' | '?' | '!'
	//	| '+' | '*' | '=' | '°' | '>'
	//	| '/' | '|' | '\\'
	//	| '(' | ')' | '{' | '}' | '"' | "'" | '[' | ']'
	//	| '@' | '&' | '#')*;
	public QSTRINGElements getQSTRINGAccess() {
		return pQSTRING;
	}
	
	public ParserRule getQSTRINGRule() {
		return getQSTRINGAccess().getRule();
	}
	
	//NullTag:
	//	'<null' ('/>' | '>' '</null>');
	public NullTagElements getNullTagAccess() {
		return pNullTag;
	}
	
	public ParserRule getNullTagRule() {
		return getNullTagAccess().getRule();
	}
	
	//ValidString:
	//	STRING | '"true"' | '"false"' | '"default"' | '"no"' | '"byName"' | '"byType"' | '"constructor"' | '"interfaces"' |
	//	'"targetClass"';
	public ValidStringElements getValidStringAccess() {
		return pValidString;
	}
	
	public ParserRule getValidStringRule() {
		return getValidStringAccess().getRule();
	}
	
	//enum sBoolean:
	//	FALSE='"false"' | FALSE="'false'"
	//	| TRUE='"true"' | TRUE="'true'";
	public SBooleanElements getSBooleanAccess() {
		return eSBoolean;
	}
	
	public EnumRule getSBooleanRule() {
		return getSBooleanAccess().getRule();
	}
	
	//enum DefaultableBoolean:
	//	DEFAULT='"default"' | DEFAULT="'default'"
	//	| FALSE='"false"' | FALSE="'false'"
	//	| TRUE='"true"' | TRUE="'true'";
	public DefaultableBooleanElements getDefaultableBooleanAccess() {
		return eDefaultableBoolean;
	}
	
	public EnumRule getDefaultableBooleanRule() {
		return getDefaultableBooleanAccess().getRule();
	}
	
	//enum AutoWiredType:
	//	DEFAULT='"default"' | DEFAULT="'default'"
	//	| NO='"no"' | NO="'no'"
	//	| BYNAME='"byName"' | BYNAME="'byName'"
	//	| BYTYPE='"byType"' | BYTYPE="'byType'"
	//	| CONSTRUCTOR='"constructor"' | CONSTRUCTOR="'constructor'";
	public AutoWiredTypeElements getAutoWiredTypeAccess() {
		return eAutoWiredType;
	}
	
	public EnumRule getAutoWiredTypeRule() {
		return getAutoWiredTypeAccess().getRule();
	}
	
	//enum EnumScopedProxy:
	//	NO='"no"' | NO="'no'"
	//	| INTERFACES='"interfaces"' | INTERFACES="'interfaces'"
	//	| TARGETCLASS='"targetClass"' | TARGETCLASS="'targetClass'";
	public EnumScopedProxyElements getEnumScopedProxyAccess() {
		return eEnumScopedProxy;
	}
	
	public EnumRule getEnumScopedProxyRule() {
		return getEnumScopedProxyAccess().getRule();
	}
	
	//enum EnumTypeFilter:
	//	ANNOTATION='"annotation"' | ANNOTATION="'annotation'"
	//	| ASSIGNABLE='"assignable"' | ASSIGNABLE="'assignable'"
	//	| ASPECTJ='"aspectj"' | ASPECTJ="'aspectj'"
	//	| REGEX='"regex"' | REGEX="'regex'"
	//	| CUSTOM='"custom"' | CUSTOM="'custom'";
	public EnumTypeFilterElements getEnumTypeFilterAccess() {
		return eEnumTypeFilter;
	}
	
	public EnumRule getEnumTypeFilterRule() {
		return getEnumTypeFilterAccess().getRule();
	}
	
	//enum MbeanRegistrationEnum:
	//	FAILONEXISTING='"failOnExisting"' | FAILONEXISTING="'failOnExisting'"
	//	| IGNOREEXISTING='"ignoreExisting"' | IGNOREEXISTING="'ignoreExisting'"
	//	| REPLACEEXISTING='"replaceExisting"' | REPLACEEXISTING="'replaceExisting'";
	public MbeanRegistrationEnumElements getMbeanRegistrationEnumAccess() {
		return eMbeanRegistrationEnum;
	}
	
	public EnumRule getMbeanRegistrationEnumRule() {
		return getMbeanRegistrationEnumAccess().getRule();
	}
	
	//enum EnumIsolation:
	//	DEFAULT='"DEFAULT"' | DEFAULT="'DEFAULT'"
	//	| READ_UNCOMMITTED='"READ_UNCOMMITTED"' | READ_UNCOMMITTED="'READ_UNCOMMITTED'"
	//	| READ_COMMITTED='"READ_COMMITTED"' | READ_COMMITTED="'READ_COMMITTED'"
	//	| REPEATABLE_READ='"REPEATABLE_READ"' | REPEATABLE_READ="'REPEATABLE_READ'"
	//	| SERIALIZABLE='"SERIALIZABLE"' | SERIALIZABLE="'SERIALIZABLE'";
	public EnumIsolationElements getEnumIsolationAccess() {
		return eEnumIsolation;
	}
	
	public EnumRule getEnumIsolationRule() {
		return getEnumIsolationAccess().getRule();
	}
	
	//enum PropagationEnum:
	//	REQUIRED='"REQUIRED"' | REQUIRED="'REQUIRED'"
	//	| SUPPORTS='"SUPPORTS"' | SUPPORTS="'SUPPORTS'"
	//	| MANDATORY='"MANDATORY"' | MANDATORY="'MANDATORY'"
	//	| REQUIRES_NEW='"REQUIRES_NEW"' | REQUIRES_NEW="'REQUIRES_NEW'"
	//	| NOT_SUPPORTED='"NOT_SUPPORTED"' | NOT_SUPPORTED="'NOT_SUPPORTED'"
	//	| NEVER='"NEVER"' | NEVER="'NEVER'"
	//	| NESTED='"NESTED"' | NESTED="'NESTED'";
	public PropagationEnumElements getPropagationEnumAccess() {
		return ePropagationEnum;
	}
	
	public EnumRule getPropagationEnumRule() {
		return getPropagationEnumAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return tINT;
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return tWS;
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return tANY_OTHER;
	}
	
	//terminal ML_COMMENT:
	//	'<!--'->'-->';
	public TerminalRule getML_COMMENTRule() {
		return tML_COMMENT;
	}
}
