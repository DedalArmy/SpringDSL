/**
 * generated by Xtext 2.12.0
 */
package org.xtext.spring.springConfigDsl;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Property Holder</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.spring.springConfigDsl.PropertyHolder#getPropertyfile <em>Propertyfile</em>}</li>
 *   <li>{@link org.xtext.spring.springConfigDsl.PropertyHolder#getIgnoreResourceNotFound <em>Ignore Resource Not Found</em>}</li>
 *   <li>{@link org.xtext.spring.springConfigDsl.PropertyHolder#getIgnoreUnresolvable <em>Ignore Unresolvable</em>}</li>
 *   <li>{@link org.xtext.spring.springConfigDsl.PropertyHolder#getLocalOverride <em>Local Override</em>}</li>
 *   <li>{@link org.xtext.spring.springConfigDsl.PropertyHolder#getOrder <em>Order</em>}</li>
 *   <li>{@link org.xtext.spring.springConfigDsl.PropertyHolder#getPropertiesRef <em>Properties Ref</em>}</li>
 * </ul>
 *
 * @see org.xtext.spring.springConfigDsl.SpringConfigDslPackage#getPropertyHolder()
 * @model
 * @generated
 */
public interface PropertyHolder extends Context
{
  /**
	 * Returns the value of the '<em><b>Propertyfile</b></em>' containment reference.
	 * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Propertyfile</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
	 * @return the value of the '<em>Propertyfile</em>' containment reference.
	 * @see #setPropertyfile(PropertyFile)
	 * @see org.xtext.spring.springConfigDsl.SpringConfigDslPackage#getPropertyHolder_Propertyfile()
	 * @model containment="true"
	 * @generated
	 */
  PropertyFile getPropertyfile();

  /**
	 * Sets the value of the '{@link org.xtext.spring.springConfigDsl.PropertyHolder#getPropertyfile <em>Propertyfile</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Propertyfile</em>' containment reference.
	 * @see #getPropertyfile()
	 * @generated
	 */
  void setPropertyfile(PropertyFile value);

  /**
	 * Returns the value of the '<em><b>Ignore Resource Not Found</b></em>' attribute.
	 * The literals are from the enumeration {@link org.xtext.spring.springConfigDsl.sBoolean}.
	 * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Ignore Resource Not Found</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
	 * @return the value of the '<em>Ignore Resource Not Found</em>' attribute.
	 * @see org.xtext.spring.springConfigDsl.sBoolean
	 * @see #setIgnoreResourceNotFound(sBoolean)
	 * @see org.xtext.spring.springConfigDsl.SpringConfigDslPackage#getPropertyHolder_IgnoreResourceNotFound()
	 * @model
	 * @generated
	 */
  sBoolean getIgnoreResourceNotFound();

  /**
	 * Sets the value of the '{@link org.xtext.spring.springConfigDsl.PropertyHolder#getIgnoreResourceNotFound <em>Ignore Resource Not Found</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Ignore Resource Not Found</em>' attribute.
	 * @see org.xtext.spring.springConfigDsl.sBoolean
	 * @see #getIgnoreResourceNotFound()
	 * @generated
	 */
  void setIgnoreResourceNotFound(sBoolean value);

  /**
	 * Returns the value of the '<em><b>Ignore Unresolvable</b></em>' attribute.
	 * The literals are from the enumeration {@link org.xtext.spring.springConfigDsl.sBoolean}.
	 * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Ignore Unresolvable</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
	 * @return the value of the '<em>Ignore Unresolvable</em>' attribute.
	 * @see org.xtext.spring.springConfigDsl.sBoolean
	 * @see #setIgnoreUnresolvable(sBoolean)
	 * @see org.xtext.spring.springConfigDsl.SpringConfigDslPackage#getPropertyHolder_IgnoreUnresolvable()
	 * @model
	 * @generated
	 */
  sBoolean getIgnoreUnresolvable();

  /**
	 * Sets the value of the '{@link org.xtext.spring.springConfigDsl.PropertyHolder#getIgnoreUnresolvable <em>Ignore Unresolvable</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Ignore Unresolvable</em>' attribute.
	 * @see org.xtext.spring.springConfigDsl.sBoolean
	 * @see #getIgnoreUnresolvable()
	 * @generated
	 */
  void setIgnoreUnresolvable(sBoolean value);

  /**
	 * Returns the value of the '<em><b>Local Override</b></em>' attribute.
	 * The literals are from the enumeration {@link org.xtext.spring.springConfigDsl.sBoolean}.
	 * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Local Override</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
	 * @return the value of the '<em>Local Override</em>' attribute.
	 * @see org.xtext.spring.springConfigDsl.sBoolean
	 * @see #setLocalOverride(sBoolean)
	 * @see org.xtext.spring.springConfigDsl.SpringConfigDslPackage#getPropertyHolder_LocalOverride()
	 * @model
	 * @generated
	 */
  sBoolean getLocalOverride();

  /**
	 * Sets the value of the '{@link org.xtext.spring.springConfigDsl.PropertyHolder#getLocalOverride <em>Local Override</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Local Override</em>' attribute.
	 * @see org.xtext.spring.springConfigDsl.sBoolean
	 * @see #getLocalOverride()
	 * @generated
	 */
  void setLocalOverride(sBoolean value);

  /**
	 * Returns the value of the '<em><b>Order</b></em>' attribute.
	 * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Order</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
	 * @return the value of the '<em>Order</em>' attribute.
	 * @see #setOrder(String)
	 * @see org.xtext.spring.springConfigDsl.SpringConfigDslPackage#getPropertyHolder_Order()
	 * @model
	 * @generated
	 */
  String getOrder();

  /**
	 * Sets the value of the '{@link org.xtext.spring.springConfigDsl.PropertyHolder#getOrder <em>Order</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Order</em>' attribute.
	 * @see #getOrder()
	 * @generated
	 */
  void setOrder(String value);

  /**
	 * Returns the value of the '<em><b>Properties Ref</b></em>' reference.
	 * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Properties Ref</em>' reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
	 * @return the value of the '<em>Properties Ref</em>' reference.
	 * @see #setPropertiesRef(Component)
	 * @see org.xtext.spring.springConfigDsl.SpringConfigDslPackage#getPropertyHolder_PropertiesRef()
	 * @model
	 * @generated
	 */
  Component getPropertiesRef();

  /**
	 * Sets the value of the '{@link org.xtext.spring.springConfigDsl.PropertyHolder#getPropertiesRef <em>Properties Ref</em>}' reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Properties Ref</em>' reference.
	 * @see #getPropertiesRef()
	 * @generated
	 */
  void setPropertiesRef(Component value);

} // PropertyHolder
