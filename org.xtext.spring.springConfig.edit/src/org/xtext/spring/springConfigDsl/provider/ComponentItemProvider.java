/**
 * generated by Xtext 2.12.0
 */
package org.xtext.spring.springConfigDsl.provider;


import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EStructuralFeature;

import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.IItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.ItemPropertyDescriptor;
import org.eclipse.emf.edit.provider.ViewerNotification;

import org.xtext.spring.springConfigDsl.Component;
import org.xtext.spring.springConfigDsl.SpringConfigDslFactory;
import org.xtext.spring.springConfigDsl.SpringConfigDslPackage;

/**
 * This is the item provider adapter for a {@link org.xtext.spring.springConfigDsl.Component} object.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class ComponentItemProvider extends AbstractArtefactItemProvider {
	/**
	 * This constructs an instance from a factory and a notifier.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComponentItemProvider(AdapterFactory adapterFactory) {
		super(adapterFactory);
	}

	/**
	 * This returns the property descriptors for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public List<IItemPropertyDescriptor> getPropertyDescriptors(Object object) {
		if (itemPropertyDescriptors == null) {
			super.getPropertyDescriptors(object);

			addNamePropertyDescriptor(object);
			addNamesPropertyDescriptor(object);
			addAbstractPropertyDescriptor(object);
			addAutowireCandidatePropertyDescriptor(object);
			addAutowirePropertyDescriptor(object);
			addDependsOnPropertyDescriptor(object);
			addDetroyMethodPropertyDescriptor(object);
			addInitMethodPropertyDescriptor(object);
			addLazyInitPropertyDescriptor(object);
			addParentPropertyDescriptor(object);
			addPrimaryPropertyDescriptor(object);
			addScopePropertyDescriptor(object);
			addDescriptionPropertyDescriptor(object);
		}
		return itemPropertyDescriptors;
	}

	/**
	 * This adds a property descriptor for the Name feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected void addNamePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_Component_name_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_Component_name_feature", "_UI_Component_type"),
				 SpringConfigDslPackage.Literals.COMPONENT__NAME,
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Names feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected void addNamesPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_Component_names_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_Component_names_feature", "_UI_Component_type"),
				 SpringConfigDslPackage.Literals.COMPONENT__NAMES,
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Abstract feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected void addAbstractPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_Component_abstract_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_Component_abstract_feature", "_UI_Component_type"),
				 SpringConfigDslPackage.Literals.COMPONENT__ABSTRACT,
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Autowire Candidate feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected void addAutowireCandidatePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_Component_autowireCandidate_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_Component_autowireCandidate_feature", "_UI_Component_type"),
				 SpringConfigDslPackage.Literals.COMPONENT__AUTOWIRE_CANDIDATE,
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Autowire feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected void addAutowirePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_Component_autowire_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_Component_autowire_feature", "_UI_Component_type"),
				 SpringConfigDslPackage.Literals.COMPONENT__AUTOWIRE,
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Depends On feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected void addDependsOnPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_Component_dependsOn_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_Component_dependsOn_feature", "_UI_Component_type"),
				 SpringConfigDslPackage.Literals.COMPONENT__DEPENDS_ON,
				 true,
				 false,
				 true,
				 null,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Detroy Method feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected void addDetroyMethodPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_Component_detroyMethod_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_Component_detroyMethod_feature", "_UI_Component_type"),
				 SpringConfigDslPackage.Literals.COMPONENT__DETROY_METHOD,
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Init Method feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected void addInitMethodPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_Component_initMethod_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_Component_initMethod_feature", "_UI_Component_type"),
				 SpringConfigDslPackage.Literals.COMPONENT__INIT_METHOD,
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Lazy Init feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected void addLazyInitPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_Component_lazyInit_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_Component_lazyInit_feature", "_UI_Component_type"),
				 SpringConfigDslPackage.Literals.COMPONENT__LAZY_INIT,
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Parent feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected void addParentPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_Component_parent_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_Component_parent_feature", "_UI_Component_type"),
				 SpringConfigDslPackage.Literals.COMPONENT__PARENT,
				 true,
				 false,
				 true,
				 null,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Primary feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected void addPrimaryPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_Component_primary_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_Component_primary_feature", "_UI_Component_type"),
				 SpringConfigDslPackage.Literals.COMPONENT__PRIMARY,
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Scope feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected void addScopePropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_Component_scope_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_Component_scope_feature", "_UI_Component_type"),
				 SpringConfigDslPackage.Literals.COMPONENT__SCOPE,
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This adds a property descriptor for the Description feature.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected void addDescriptionPropertyDescriptor(Object object) {
		itemPropertyDescriptors.add
			(createItemPropertyDescriptor
				(((ComposeableAdapterFactory)adapterFactory).getRootAdapterFactory(),
				 getResourceLocator(),
				 getString("_UI_Component_description_feature"),
				 getString("_UI_PropertyDescriptor_description", "_UI_Component_description_feature", "_UI_Component_type"),
				 SpringConfigDslPackage.Literals.COMPONENT__DESCRIPTION,
				 true,
				 false,
				 false,
				 ItemPropertyDescriptor.GENERIC_VALUE_IMAGE,
				 null,
				 null));
	}

	/**
	 * This specifies how to implement {@link #getChildren} and is used to deduce an appropriate feature for an
	 * {@link org.eclipse.emf.edit.command.AddCommand}, {@link org.eclipse.emf.edit.command.RemoveCommand} or
	 * {@link org.eclipse.emf.edit.command.MoveCommand} in {@link #createCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Collection<? extends EStructuralFeature> getChildrenFeatures(Object object) {
		if (childrenFeatures == null) {
			super.getChildrenFeatures(object);
			childrenFeatures.add(SpringConfigDslPackage.Literals.COMPONENT__CLASS);
			childrenFeatures.add(SpringConfigDslPackage.Literals.COMPONENT__FEATURES);
			childrenFeatures.add(SpringConfigDslPackage.Literals.COMPONENT__LOOKUP_METHODS);
			childrenFeatures.add(SpringConfigDslPackage.Literals.COMPONENT__QUALIFIERS);
			childrenFeatures.add(SpringConfigDslPackage.Literals.COMPONENT__META);
			childrenFeatures.add(SpringConfigDslPackage.Literals.COMPONENT__AOP_SCOPED_PROXY);
			childrenFeatures.add(SpringConfigDslPackage.Literals.COMPONENT__UTIL_PROPERTIES_PATH);
		}
		return childrenFeatures;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EStructuralFeature getChildFeature(Object object, Object child) {
		// Check the type of the specified child object and return the proper feature to use for
		// adding (see {@link AddCommand}) it as a child.

		return super.getChildFeature(object, child);
	}

	/**
	 * This returns Component.gif.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object getImage(Object object) {
		return overlayImage(object, getResourceLocator().getImage("full/obj16/Component"));
	}

	/**
	 * This returns the label text for the adapted class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String getText(Object object) {
		String label = ((Component)object).getName();
		return label == null || label.length() == 0 ?
			getString("_UI_Component_type") :
			getString("_UI_Component_type") + " " + label;
	}
	

	/**
	 * This handles model notifications by calling {@link #updateChildren} to update any cached
	 * children and by creating a viewer notification, which it passes to {@link #fireNotifyChanged}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void notifyChanged(Notification notification) {
		updateChildren(notification);

		switch (notification.getFeatureID(Component.class)) {
			case SpringConfigDslPackage.COMPONENT__NAME:
			case SpringConfigDslPackage.COMPONENT__NAMES:
			case SpringConfigDslPackage.COMPONENT__ABSTRACT:
			case SpringConfigDslPackage.COMPONENT__AUTOWIRE_CANDIDATE:
			case SpringConfigDslPackage.COMPONENT__AUTOWIRE:
			case SpringConfigDslPackage.COMPONENT__DETROY_METHOD:
			case SpringConfigDslPackage.COMPONENT__INIT_METHOD:
			case SpringConfigDslPackage.COMPONENT__LAZY_INIT:
			case SpringConfigDslPackage.COMPONENT__PRIMARY:
			case SpringConfigDslPackage.COMPONENT__SCOPE:
			case SpringConfigDslPackage.COMPONENT__DESCRIPTION:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), false, true));
				return;
			case SpringConfigDslPackage.COMPONENT__CLASS:
			case SpringConfigDslPackage.COMPONENT__FEATURES:
			case SpringConfigDslPackage.COMPONENT__LOOKUP_METHODS:
			case SpringConfigDslPackage.COMPONENT__QUALIFIERS:
			case SpringConfigDslPackage.COMPONENT__META:
			case SpringConfigDslPackage.COMPONENT__AOP_SCOPED_PROXY:
			case SpringConfigDslPackage.COMPONENT__UTIL_PROPERTIES_PATH:
				fireNotifyChanged(new ViewerNotification(notification, notification.getNotifier(), true, false));
				return;
		}
		super.notifyChanged(notification);
	}

	/**
	 * This adds {@link org.eclipse.emf.edit.command.CommandParameter}s describing the children
	 * that can be created under this object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected void collectNewChildDescriptors(Collection<Object> newChildDescriptors, Object object) {
		super.collectNewChildDescriptors(newChildDescriptors, object);

		newChildDescriptors.add
			(createChildParameter
				(SpringConfigDslPackage.Literals.COMPONENT__CLASS,
				 SpringConfigDslFactory.eINSTANCE.createCreationMethod()));

		newChildDescriptors.add
			(createChildParameter
				(SpringConfigDslPackage.Literals.COMPONENT__FEATURES,
				 SpringConfigDslFactory.eINSTANCE.createFeature()));

		newChildDescriptors.add
			(createChildParameter
				(SpringConfigDslPackage.Literals.COMPONENT__LOOKUP_METHODS,
				 SpringConfigDslFactory.eINSTANCE.createLookupMethod()));

		newChildDescriptors.add
			(createChildParameter
				(SpringConfigDslPackage.Literals.COMPONENT__QUALIFIERS,
				 SpringConfigDslFactory.eINSTANCE.createQualifier()));

		newChildDescriptors.add
			(createChildParameter
				(SpringConfigDslPackage.Literals.COMPONENT__META,
				 SpringConfigDslFactory.eINSTANCE.createMeta()));

		newChildDescriptors.add
			(createChildParameter
				(SpringConfigDslPackage.Literals.COMPONENT__AOP_SCOPED_PROXY,
				 SpringConfigDslFactory.eINSTANCE.createAopScopedProxy()));

		newChildDescriptors.add
			(createChildParameter
				(SpringConfigDslPackage.Literals.COMPONENT__UTIL_PROPERTIES_PATH,
				 SpringConfigDslFactory.eINSTANCE.createUtilPropertyPath()));
	}

}
