/**
 * generated by Xtext 2.18.0
 */
package fr.imt.ales.springdsl.springDSL.impl;

import fr.imt.ales.springdsl.springDSL.AopAspectJAutoproxy;
import fr.imt.ales.springdsl.springDSL.AopInclude;
import fr.imt.ales.springdsl.springDSL.SpringDSLPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Aop Aspect JAutoproxy</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.imt.ales.springdsl.springDSL.impl.AopAspectJAutoproxyImpl#getAopincludes <em>Aopincludes</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AopAspectJAutoproxyImpl extends AspectImpl implements AopAspectJAutoproxy
{
  /**
   * The cached value of the '{@link #getAopincludes() <em>Aopincludes</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAopincludes()
   * @generated
   * @ordered
   */
  protected EList<AopInclude> aopincludes;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AopAspectJAutoproxyImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SpringDSLPackage.Literals.AOP_ASPECT_JAUTOPROXY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<AopInclude> getAopincludes()
  {
    if (aopincludes == null)
    {
      aopincludes = new EObjectContainmentEList<AopInclude>(AopInclude.class, this, SpringDSLPackage.AOP_ASPECT_JAUTOPROXY__AOPINCLUDES);
    }
    return aopincludes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SpringDSLPackage.AOP_ASPECT_JAUTOPROXY__AOPINCLUDES:
        return ((InternalEList<?>)getAopincludes()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SpringDSLPackage.AOP_ASPECT_JAUTOPROXY__AOPINCLUDES:
        return getAopincludes();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SpringDSLPackage.AOP_ASPECT_JAUTOPROXY__AOPINCLUDES:
        getAopincludes().clear();
        getAopincludes().addAll((Collection<? extends AopInclude>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SpringDSLPackage.AOP_ASPECT_JAUTOPROXY__AOPINCLUDES:
        getAopincludes().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SpringDSLPackage.AOP_ASPECT_JAUTOPROXY__AOPINCLUDES:
        return aopincludes != null && !aopincludes.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //AopAspectJAutoproxyImpl
